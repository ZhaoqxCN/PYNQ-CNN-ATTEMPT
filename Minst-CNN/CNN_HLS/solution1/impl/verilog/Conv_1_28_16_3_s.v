// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_1_28_16_3_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        stream_in_V_V_dout,
        stream_in_V_V_empty_n,
        stream_in_V_V_read,
        stream_out_V_V_din,
        stream_out_V_V_full_n,
        stream_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 33'd1;
parameter    ap_ST_fsm_state2 = 33'd2;
parameter    ap_ST_fsm_state3 = 33'd4;
parameter    ap_ST_fsm_state4 = 33'd8;
parameter    ap_ST_fsm_state5 = 33'd16;
parameter    ap_ST_fsm_state6 = 33'd32;
parameter    ap_ST_fsm_state7 = 33'd64;
parameter    ap_ST_fsm_state8 = 33'd128;
parameter    ap_ST_fsm_state9 = 33'd256;
parameter    ap_ST_fsm_state10 = 33'd512;
parameter    ap_ST_fsm_state11 = 33'd1024;
parameter    ap_ST_fsm_state12 = 33'd2048;
parameter    ap_ST_fsm_state13 = 33'd4096;
parameter    ap_ST_fsm_state14 = 33'd8192;
parameter    ap_ST_fsm_pp0_stage0 = 33'd16384;
parameter    ap_ST_fsm_state17 = 33'd32768;
parameter    ap_ST_fsm_state18 = 33'd65536;
parameter    ap_ST_fsm_state19 = 33'd131072;
parameter    ap_ST_fsm_state20 = 33'd262144;
parameter    ap_ST_fsm_state21 = 33'd524288;
parameter    ap_ST_fsm_state22 = 33'd1048576;
parameter    ap_ST_fsm_state23 = 33'd2097152;
parameter    ap_ST_fsm_state24 = 33'd4194304;
parameter    ap_ST_fsm_state25 = 33'd8388608;
parameter    ap_ST_fsm_state26 = 33'd16777216;
parameter    ap_ST_fsm_state27 = 33'd33554432;
parameter    ap_ST_fsm_state28 = 33'd67108864;
parameter    ap_ST_fsm_state29 = 33'd134217728;
parameter    ap_ST_fsm_state30 = 33'd268435456;
parameter    ap_ST_fsm_state31 = 33'd536870912;
parameter    ap_ST_fsm_state32 = 33'd1073741824;
parameter    ap_ST_fsm_pp1_stage0 = 33'd2147483648;
parameter    ap_ST_fsm_state37 = 33'd4294967296;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] stream_in_V_V_dout;
input   stream_in_V_V_empty_n;
output   stream_in_V_V_read;
output  [15:0] stream_out_V_V_din;
input   stream_out_V_V_full_n;
output   stream_out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg stream_in_V_V_read;
reg[15:0] stream_out_V_V_din;
reg stream_out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [32:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    A_V_0_ce0;
wire   [7:0] A_V_0_q0;
reg    A_V_0_ce1;
reg    A_V_0_we1;
reg    A_V_188_ce0;
wire   [7:0] A_V_188_q0;
reg    A_V_188_ce1;
reg    A_V_188_we1;
reg    A_V_289_ce0;
wire   [7:0] A_V_289_q0;
reg    A_V_289_ce1;
reg    A_V_289_we1;
reg    A_V_390_ce0;
wire   [7:0] A_V_390_q0;
reg    A_V_390_ce1;
reg    A_V_390_we1;
reg    A_V_491_ce0;
wire   [7:0] A_V_491_q0;
reg    A_V_491_ce1;
reg    A_V_491_we1;
reg    A_V_5_ce0;
wire   [7:0] A_V_5_q0;
reg    A_V_5_ce1;
reg    A_V_5_we1;
reg    A_V_6_ce0;
wire   [7:0] A_V_6_q0;
reg    A_V_6_ce1;
reg    A_V_6_we1;
reg    A_V_7_ce0;
wire   [7:0] A_V_7_q0;
reg    A_V_7_ce1;
reg    A_V_7_we1;
reg    A_V_8_ce0;
wire   [7:0] A_V_8_q0;
reg    A_V_8_ce1;
reg    A_V_8_we1;
reg    A_V_9_ce0;
wire   [7:0] A_V_9_q0;
reg    A_V_9_ce1;
reg    A_V_9_we1;
reg    A_V_10_ce0;
wire   [7:0] A_V_10_q0;
reg    A_V_10_ce1;
reg    A_V_10_we1;
reg    A_V_11_ce0;
wire   [7:0] A_V_11_q0;
reg    A_V_11_ce1;
reg    A_V_11_we1;
reg    A_V_12_ce0;
wire   [7:0] A_V_12_q0;
reg    A_V_12_ce1;
reg    A_V_12_we1;
reg    A_V_13_ce0;
wire   [7:0] A_V_13_q0;
reg    A_V_13_ce1;
reg    A_V_13_we1;
reg    A_V_14_ce0;
wire   [7:0] A_V_14_q0;
reg    A_V_14_ce1;
reg    A_V_14_we1;
reg    A_V_15_ce0;
wire   [7:0] A_V_15_q0;
reg    A_V_15_ce1;
reg    A_V_15_we1;
reg    A_V_16_ce0;
wire   [7:0] A_V_16_q0;
reg    A_V_16_ce1;
reg    A_V_16_we1;
reg    A_V_17_ce0;
wire   [7:0] A_V_17_q0;
reg    A_V_17_ce1;
reg    A_V_17_we1;
reg    A_V_18_ce0;
wire   [7:0] A_V_18_q0;
reg    A_V_18_ce1;
reg    A_V_18_we1;
reg    A_V_19_ce0;
wire   [7:0] A_V_19_q0;
reg    A_V_19_ce1;
reg    A_V_19_we1;
reg    A_V_20_ce0;
wire   [7:0] A_V_20_q0;
reg    A_V_20_ce1;
reg    A_V_20_we1;
reg    A_V_21_ce0;
wire   [7:0] A_V_21_q0;
reg    A_V_21_ce1;
reg    A_V_21_we1;
reg    A_V_22_ce0;
wire   [7:0] A_V_22_q0;
reg    A_V_22_ce1;
reg    A_V_22_we1;
reg    A_V_23_ce0;
wire   [7:0] A_V_23_q0;
reg    A_V_23_ce1;
reg    A_V_23_we1;
reg    A_V_24_ce0;
wire   [7:0] A_V_24_q0;
reg    A_V_24_ce1;
reg    A_V_24_we1;
reg    A_V_25_ce0;
wire   [7:0] A_V_25_q0;
reg    A_V_25_ce1;
reg    A_V_25_we1;
reg    A_V_26_ce0;
wire   [7:0] A_V_26_q0;
reg    A_V_26_ce1;
reg    A_V_26_we1;
reg    A_V_27_ce0;
wire   [7:0] A_V_27_q0;
reg    A_V_27_ce1;
reg    A_V_27_we1;
reg    B_V_0_ce0;
wire   [7:0] B_V_0_q0;
wire   [5:0] B_V_0_address1;
reg    B_V_0_ce1;
reg    B_V_0_we1;
reg    B_V_192_ce0;
wire   [7:0] B_V_192_q0;
wire   [5:0] B_V_192_address1;
reg    B_V_192_ce1;
reg    B_V_192_we1;
reg    B_V_293_ce0;
wire   [7:0] B_V_293_q0;
wire   [5:0] B_V_293_address1;
reg    B_V_293_ce1;
reg    B_V_293_we1;
reg    stream_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_flatten_reg_2422;
reg   [0:0] exitcond_flatten_reg_2422_pp1_iter1_reg;
wire    ap_CS_fsm_state20;
wire   [0:0] exitcond6_fu_1286_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_68_reg_1845;
reg    stream_out_V_V_blk_n;
wire    ap_CS_fsm_state26;
wire   [0:0] exitcond1_fu_1360_p2;
reg   [30:0] i7_reg_1004;
reg   [7:0] indvar_flatten2_reg_1131;
reg   [4:0] i_reg_1142;
reg   [3:0] indvar_flatten_reg_1154;
reg   [2:0] ka_reg_1165;
reg   [2:0] kb_reg_1177;
reg   [15:0] tmp_V_reg_1780;
reg    ap_block_state1;
reg   [15:0] tmp_V_76_reg_1786;
reg    ap_block_state2;
reg  signed [15:0] tmp_V_78_reg_1791;
reg    ap_block_state3;
reg  signed [15:0] tmp_V_80_reg_1796;
reg    ap_block_state4;
reg  signed [15:0] tmp_V_84_reg_1801;
reg    ap_block_state6;
wire   [0:0] tmp_s_fu_1189_p2;
reg    ap_block_state7;
wire   [0:0] tmp_62_fu_1194_p2;
wire  signed [31:0] tmp_65_fu_1205_p1;
wire  signed [31:0] grp_fu_1768_p2;
reg  signed [31:0] tmp3_reg_1830;
wire    ap_CS_fsm_state9;
wire  signed [31:0] grp_fu_1774_p2;
reg  signed [31:0] tmp4_reg_1835;
wire   [31:0] grp_fu_1208_p2;
reg   [31:0] KER_bound_reg_1840;
wire    ap_CS_fsm_state14;
wire   [0:0] tmp_68_fu_1216_p2;
wire    ap_block_state15_pp0_stage0_iter0;
reg    ap_block_state16_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [30:0] i_s_fu_1221_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [14:0] num_img_1_fu_1236_p2;
reg   [14:0] num_img_1_reg_1857;
wire    ap_CS_fsm_state18;
wire   [4:0] j_fu_1248_p2;
reg   [4:0] j_reg_1865;
wire    ap_CS_fsm_state19;
reg   [4:0] A_V_0_addr_reg_1870;
wire   [0:0] exitcond3_fu_1242_p2;
reg   [4:0] A_V_10_addr_reg_1875;
reg   [4:0] A_V_11_addr_reg_1880;
reg   [4:0] A_V_12_addr_reg_1885;
reg   [4:0] A_V_13_addr_reg_1890;
reg   [4:0] A_V_14_addr_reg_1895;
reg   [4:0] A_V_15_addr_reg_1900;
reg   [4:0] A_V_16_addr_reg_1905;
reg   [4:0] A_V_17_addr_reg_1910;
reg   [4:0] A_V_18_addr_reg_1915;
reg   [4:0] A_V_188_addr_reg_1920;
reg   [4:0] A_V_19_addr_reg_1925;
reg   [4:0] A_V_20_addr_reg_1930;
reg   [4:0] A_V_21_addr_reg_1935;
reg   [4:0] A_V_22_addr_reg_1940;
reg   [4:0] A_V_23_addr_reg_1945;
reg   [4:0] A_V_24_addr_reg_1950;
reg   [4:0] A_V_25_addr_reg_1955;
reg   [4:0] A_V_26_addr_reg_1960;
reg   [4:0] A_V_27_addr_reg_1965;
reg   [4:0] A_V_289_addr_reg_1970;
reg   [4:0] A_V_390_addr_reg_1975;
reg   [4:0] A_V_491_addr_reg_1980;
reg   [4:0] A_V_5_addr_reg_1985;
reg   [4:0] A_V_6_addr_reg_1990;
reg   [4:0] A_V_7_addr_reg_1995;
reg   [4:0] A_V_8_addr_reg_2000;
reg   [4:0] A_V_9_addr_reg_2005;
wire   [4:0] k_4_fu_1292_p2;
reg   [4:0] k_4_reg_2013;
reg    ap_block_state20;
wire   [7:0] tmp_139_fu_1298_p1;
reg   [7:0] tmp_139_reg_2018;
wire   [4:0] ia_3_fu_1314_p2;
wire    ap_CS_fsm_state24;
wire   [0:0] exitcond5_fu_1308_p2;
wire   [4:0] i_3_fu_1326_p2;
reg   [4:0] i_3_reg_2064;
wire    ap_CS_fsm_state25;
wire   [6:0] tmp_141_fu_1344_p2;
reg   [6:0] tmp_141_reg_2069;
wire   [0:0] exitcond7_fu_1320_p2;
wire   [4:0] ib_3_fu_1350_p2;
wire   [1:0] ka_4_fu_1366_p2;
reg   [1:0] ka_4_reg_2082;
reg    ap_block_state26;
reg   [4:0] A_V_0_addr_1_reg_2087;
reg   [4:0] A_V_10_addr_1_reg_2092;
reg   [4:0] A_V_11_addr_1_reg_2097;
reg   [4:0] A_V_12_addr_1_reg_2102;
reg   [4:0] A_V_13_addr_1_reg_2107;
reg   [4:0] A_V_14_addr_1_reg_2112;
reg   [4:0] A_V_15_addr_1_reg_2117;
reg   [4:0] A_V_16_addr_1_reg_2122;
reg   [4:0] A_V_17_addr_1_reg_2127;
reg   [4:0] A_V_18_addr_1_reg_2132;
reg   [4:0] A_V_188_addr_1_reg_2137;
reg   [4:0] A_V_19_addr_1_reg_2142;
reg   [4:0] A_V_20_addr_1_reg_2147;
reg   [4:0] A_V_21_addr_1_reg_2152;
reg   [4:0] A_V_22_addr_1_reg_2157;
reg   [4:0] A_V_23_addr_1_reg_2162;
reg   [4:0] A_V_24_addr_1_reg_2167;
reg   [4:0] A_V_25_addr_1_reg_2172;
reg   [4:0] A_V_26_addr_1_reg_2177;
reg   [4:0] A_V_27_addr_1_reg_2182;
reg   [4:0] A_V_289_addr_1_reg_2187;
reg   [4:0] A_V_390_addr_1_reg_2192;
reg   [4:0] A_V_491_addr_1_reg_2197;
reg   [4:0] A_V_5_addr_1_reg_2202;
reg   [4:0] A_V_6_addr_1_reg_2207;
reg   [4:0] A_V_7_addr_1_reg_2212;
reg   [4:0] A_V_8_addr_1_reg_2217;
reg   [4:0] A_V_9_addr_1_reg_2222;
reg   [5:0] B_V_0_addr_1_reg_2227;
reg   [5:0] B_V_192_addr_1_reg_2232;
reg   [5:0] B_V_293_addr_1_reg_2237;
wire   [1:0] kb_4_fu_1467_p2;
reg   [1:0] kb_4_reg_2245;
wire    ap_CS_fsm_state27;
wire   [4:0] tmp_120_0_t_fu_1487_p2;
reg   [4:0] tmp_120_0_t_reg_2250;
wire    ap_CS_fsm_state28;
reg   [7:0] A_V_0_load_reg_2255;
reg   [7:0] A_V_188_load_reg_2260;
reg   [7:0] A_V_289_load_reg_2265;
reg   [7:0] A_V_390_load_reg_2270;
reg   [7:0] A_V_491_load_reg_2275;
reg   [7:0] A_V_5_load_reg_2280;
reg   [7:0] A_V_6_load_reg_2285;
reg   [7:0] A_V_7_load_reg_2290;
reg   [7:0] A_V_8_load_reg_2295;
reg   [7:0] A_V_9_load_reg_2300;
reg   [7:0] A_V_10_load_reg_2305;
reg   [7:0] A_V_11_load_reg_2310;
reg   [7:0] A_V_12_load_reg_2315;
reg   [7:0] A_V_13_load_reg_2320;
reg   [7:0] A_V_14_load_reg_2325;
reg   [7:0] A_V_15_load_reg_2330;
reg   [7:0] A_V_16_load_reg_2335;
reg   [7:0] A_V_17_load_reg_2340;
reg   [7:0] A_V_18_load_reg_2345;
reg   [7:0] A_V_19_load_reg_2350;
reg   [7:0] A_V_20_load_reg_2355;
reg   [7:0] A_V_21_load_reg_2360;
reg   [7:0] A_V_22_load_reg_2365;
reg   [7:0] A_V_23_load_reg_2370;
reg   [7:0] A_V_24_load_reg_2375;
reg   [7:0] A_V_25_load_reg_2380;
reg   [7:0] A_V_26_load_reg_2385;
reg   [7:0] A_V_27_load_reg_2390;
wire   [7:0] tmp_32_fu_1493_p5;
reg   [7:0] tmp_32_reg_2395;
wire   [7:0] tmp_31_fu_1505_p30;
reg   [7:0] tmp_31_reg_2400;
wire    ap_CS_fsm_state29;
wire   [15:0] r_V_4_fu_1544_p2;
reg   [15:0] r_V_4_reg_2405;
wire    ap_CS_fsm_state30;
reg   [7:0] tmp_129_reg_2412;
wire    ap_CS_fsm_state31;
wire   [7:0] buf_V_fu_1598_p2;
wire    ap_CS_fsm_state32;
wire   [0:0] exitcond_flatten_fu_1604_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state33_pp1_stage0_iter0;
wire    ap_block_state34_pp1_stage0_iter1;
reg    ap_block_state35_pp1_stage0_iter2;
wire    ap_block_state36_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
wire   [7:0] indvar_flatten_next1_fu_1610_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten10_fu_1616_p2;
reg   [0:0] exitcond_flatten10_reg_2431;
wire   [3:0] indvar_flatten_next_fu_1628_p3;
wire   [4:0] tmp_63_mid2_v_fu_1656_p3;
reg   [4:0] tmp_63_mid2_v_reg_2445;
reg    ap_enable_reg_pp1_iter1;
wire  signed [2:0] kb_mid2_fu_1699_p3;
reg  signed [2:0] kb_mid2_reg_2452;
wire   [1:0] ka_0_t_mid2_fu_1711_p3;
reg   [1:0] ka_0_t_mid2_reg_2457;
reg   [1:0] ka_0_t_mid2_reg_2457_pp1_iter2_reg;
wire   [2:0] ka_mid2_fu_1719_p3;
reg   [2:0] ka_mid2_reg_2461;
wire   [2:0] kb_3_fu_1727_p2;
reg   [2:0] kb_3_reg_2466;
wire   [6:0] tmp_134_fu_1752_p2;
reg   [6:0] tmp_134_reg_2471;
wire   [7:0] tmp_138_fu_1758_p1;
reg   [7:0] tmp_138_reg_2476;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state15;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state33;
reg    ap_enable_reg_pp1_iter3;
reg   [14:0] num_img_reg_1015;
wire    ap_CS_fsm_state23;
wire   [0:0] exitcond4_fu_1302_p2;
reg   [4:0] j1_reg_1026;
wire   [0:0] tmp_67_fu_1231_p2;
wire   [4:0] ap_phi_mux_k_phi_fu_1041_p4;
reg   [4:0] k_reg_1037;
wire    ap_CS_fsm_state22;
reg   [4:0] ia_reg_1049;
reg   [4:0] ib_reg_1061;
reg   [4:0] i3_reg_1073;
reg   [7:0] p_0144_1_reg_1084;
wire   [0:0] exitcond8_fu_1461_p2;
reg   [1:0] ka5_reg_1096;
reg   [7:0] p_0144_2_reg_1107;
reg   [1:0] kb6_reg_1119;
reg   [4:0] ap_phi_mux_i_phi_fu_1146_p4;
reg   [2:0] ap_phi_mux_ka_phi_fu_1169_p4;
reg   [2:0] ap_phi_mux_kb_phi_fu_1181_p4;
wire   [63:0] tmp_69_fu_1254_p1;
wire   [63:0] tmp_117_fu_1388_p1;
wire  signed [63:0] tmp_145_cast_fu_1429_p1;
wire  signed [63:0] tmp_142_cast_fu_1762_p1;
reg    ap_block_state5;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] Outbuf_V_fu_1456_p1;
reg    ap_block_pp1_stage0_01001;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state10;
wire   [31:0] i7_cast_fu_1212_p1;
wire   [15:0] num_img_cast_fu_1227_p1;
wire   [6:0] tmp_140_fu_1336_p3;
wire   [6:0] tmp_70_cast_fu_1332_p1;
wire   [2:0] ka5_cast_cast_fu_1356_p1;
wire   [2:0] tmp1_fu_1372_p2;
wire  signed [4:0] tmp1_cast_fu_1378_p1;
wire   [4:0] tmp_116_fu_1382_p2;
wire   [6:0] tmp_118_cast_fu_1420_p1;
wire   [6:0] tmp_144_fu_1424_p2;
wire   [0:0] tmp_143_fu_1440_p3;
wire   [6:0] tmp_142_fu_1436_p1;
wire   [6:0] x_V_y_V_i_fu_1448_p3;
wire   [2:0] tmp_131_cast_fu_1473_p1;
wire   [2:0] tmp2_fu_1477_p2;
wire  signed [4:0] tmp2_cast_fu_1483_p1;
wire  signed [7:0] r_V_4_fu_1544_p0;
wire  signed [7:0] r_V_4_fu_1544_p1;
wire   [16:0] tmp_123_tr_s_fu_1550_p1;
wire   [16:0] p_neg_fu_1553_p2;
wire   [0:0] tmp_145_fu_1569_p3;
wire   [7:0] tmp_130_fu_1576_p2;
wire   [7:0] tmp_131_fu_1581_p4;
wire   [7:0] tmp_132_fu_1590_p3;
wire   [3:0] indvar_flatten_op_fu_1622_p2;
wire   [4:0] i_4_fu_1636_p2;
wire   [1:0] tmp_135_fu_1663_p1;
wire   [0:0] tmp_136_fu_1674_p3;
wire   [0:0] rev_fu_1682_p2;
wire   [2:0] ka_mid_fu_1642_p3;
wire   [0:0] tmp_109_mid_fu_1688_p2;
wire   [2:0] kb_mid_fu_1649_p3;
wire   [2:0] ka_3_fu_1693_p2;
wire   [1:0] ka_0_t_mid_fu_1667_p3;
wire   [1:0] tmp_137_fu_1707_p1;
wire   [6:0] tmp_128_fu_1736_p3;
wire   [6:0] tmp_63_mid2_cast_fu_1733_p1;
wire   [6:0] tmp_133_fu_1743_p2;
wire  signed [6:0] tmp_111_cast_fu_1749_p1;
wire  signed [15:0] grp_fu_1768_p0;
wire  signed [15:0] grp_fu_1768_p1;
reg    grp_fu_1768_ce;
wire    ap_CS_fsm_state8;
reg    grp_fu_1774_ce;
wire    ap_CS_fsm_state17;
reg   [32:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 33'd1;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_0_addr_1_reg_2087),
    .ce0(A_V_0_ce0),
    .q0(A_V_0_q0),
    .address1(A_V_0_addr_reg_1870),
    .ce1(A_V_0_ce1),
    .we1(A_V_0_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_188_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_188_addr_1_reg_2137),
    .ce0(A_V_188_ce0),
    .q0(A_V_188_q0),
    .address1(A_V_188_addr_reg_1920),
    .ce1(A_V_188_ce1),
    .we1(A_V_188_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_289_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_289_addr_1_reg_2187),
    .ce0(A_V_289_ce0),
    .q0(A_V_289_q0),
    .address1(A_V_289_addr_reg_1970),
    .ce1(A_V_289_ce1),
    .we1(A_V_289_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_390_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_390_addr_1_reg_2192),
    .ce0(A_V_390_ce0),
    .q0(A_V_390_q0),
    .address1(A_V_390_addr_reg_1975),
    .ce1(A_V_390_ce1),
    .we1(A_V_390_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_491_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_491_addr_1_reg_2197),
    .ce0(A_V_491_ce0),
    .q0(A_V_491_q0),
    .address1(A_V_491_addr_reg_1980),
    .ce1(A_V_491_ce1),
    .we1(A_V_491_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_addr_1_reg_2202),
    .ce0(A_V_5_ce0),
    .q0(A_V_5_q0),
    .address1(A_V_5_addr_reg_1985),
    .ce1(A_V_5_ce1),
    .we1(A_V_5_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_6_addr_1_reg_2207),
    .ce0(A_V_6_ce0),
    .q0(A_V_6_q0),
    .address1(A_V_6_addr_reg_1990),
    .ce1(A_V_6_ce1),
    .we1(A_V_6_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_addr_1_reg_2212),
    .ce0(A_V_7_ce0),
    .q0(A_V_7_q0),
    .address1(A_V_7_addr_reg_1995),
    .ce1(A_V_7_ce1),
    .we1(A_V_7_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_8_addr_1_reg_2217),
    .ce0(A_V_8_ce0),
    .q0(A_V_8_q0),
    .address1(A_V_8_addr_reg_2000),
    .ce1(A_V_8_ce1),
    .we1(A_V_8_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_9_addr_1_reg_2222),
    .ce0(A_V_9_ce0),
    .q0(A_V_9_q0),
    .address1(A_V_9_addr_reg_2005),
    .ce1(A_V_9_ce1),
    .we1(A_V_9_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_10_addr_1_reg_2092),
    .ce0(A_V_10_ce0),
    .q0(A_V_10_q0),
    .address1(A_V_10_addr_reg_1875),
    .ce1(A_V_10_ce1),
    .we1(A_V_10_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_11_addr_1_reg_2097),
    .ce0(A_V_11_ce0),
    .q0(A_V_11_q0),
    .address1(A_V_11_addr_reg_1880),
    .ce1(A_V_11_ce1),
    .we1(A_V_11_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_12_addr_1_reg_2102),
    .ce0(A_V_12_ce0),
    .q0(A_V_12_q0),
    .address1(A_V_12_addr_reg_1885),
    .ce1(A_V_12_ce1),
    .we1(A_V_12_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_13_addr_1_reg_2107),
    .ce0(A_V_13_ce0),
    .q0(A_V_13_q0),
    .address1(A_V_13_addr_reg_1890),
    .ce1(A_V_13_ce1),
    .we1(A_V_13_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_14_addr_1_reg_2112),
    .ce0(A_V_14_ce0),
    .q0(A_V_14_q0),
    .address1(A_V_14_addr_reg_1895),
    .ce1(A_V_14_ce1),
    .we1(A_V_14_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_15_addr_1_reg_2117),
    .ce0(A_V_15_ce0),
    .q0(A_V_15_q0),
    .address1(A_V_15_addr_reg_1900),
    .ce1(A_V_15_ce1),
    .we1(A_V_15_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_16_addr_1_reg_2122),
    .ce0(A_V_16_ce0),
    .q0(A_V_16_q0),
    .address1(A_V_16_addr_reg_1905),
    .ce1(A_V_16_ce1),
    .we1(A_V_16_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_17_addr_1_reg_2127),
    .ce0(A_V_17_ce0),
    .q0(A_V_17_q0),
    .address1(A_V_17_addr_reg_1910),
    .ce1(A_V_17_ce1),
    .we1(A_V_17_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_18_addr_1_reg_2132),
    .ce0(A_V_18_ce0),
    .q0(A_V_18_q0),
    .address1(A_V_18_addr_reg_1915),
    .ce1(A_V_18_ce1),
    .we1(A_V_18_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_19_addr_1_reg_2142),
    .ce0(A_V_19_ce0),
    .q0(A_V_19_q0),
    .address1(A_V_19_addr_reg_1925),
    .ce1(A_V_19_ce1),
    .we1(A_V_19_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_20_addr_1_reg_2147),
    .ce0(A_V_20_ce0),
    .q0(A_V_20_q0),
    .address1(A_V_20_addr_reg_1930),
    .ce1(A_V_20_ce1),
    .we1(A_V_20_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_21_addr_1_reg_2152),
    .ce0(A_V_21_ce0),
    .q0(A_V_21_q0),
    .address1(A_V_21_addr_reg_1935),
    .ce1(A_V_21_ce1),
    .we1(A_V_21_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_22_addr_1_reg_2157),
    .ce0(A_V_22_ce0),
    .q0(A_V_22_q0),
    .address1(A_V_22_addr_reg_1940),
    .ce1(A_V_22_ce1),
    .we1(A_V_22_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_23_addr_1_reg_2162),
    .ce0(A_V_23_ce0),
    .q0(A_V_23_q0),
    .address1(A_V_23_addr_reg_1945),
    .ce1(A_V_23_ce1),
    .we1(A_V_23_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_24_addr_1_reg_2167),
    .ce0(A_V_24_ce0),
    .q0(A_V_24_q0),
    .address1(A_V_24_addr_reg_1950),
    .ce1(A_V_24_ce1),
    .we1(A_V_24_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_25_addr_1_reg_2172),
    .ce0(A_V_25_ce0),
    .q0(A_V_25_q0),
    .address1(A_V_25_addr_reg_1955),
    .ce1(A_V_25_ce1),
    .we1(A_V_25_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_26_addr_1_reg_2177),
    .ce0(A_V_26_ce0),
    .q0(A_V_26_q0),
    .address1(A_V_26_addr_reg_1960),
    .ce1(A_V_26_ce1),
    .we1(A_V_26_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_27_addr_1_reg_2182),
    .ce0(A_V_27_ce0),
    .q0(A_V_27_q0),
    .address1(A_V_27_addr_reg_1965),
    .ce1(A_V_27_ce1),
    .we1(A_V_27_we1),
    .d1(tmp_139_reg_2018)
);

Conv_1_28_16_3_s_Ffa #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
B_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_0_addr_1_reg_2227),
    .ce0(B_V_0_ce0),
    .q0(B_V_0_q0),
    .address1(B_V_0_address1),
    .ce1(B_V_0_ce1),
    .we1(B_V_0_we1),
    .d1(tmp_138_reg_2476)
);

Conv_1_28_16_3_s_Ffa #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
B_V_192_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_192_addr_1_reg_2232),
    .ce0(B_V_192_ce0),
    .q0(B_V_192_q0),
    .address1(B_V_192_address1),
    .ce1(B_V_192_ce1),
    .we1(B_V_192_we1),
    .d1(tmp_138_reg_2476)
);

Conv_1_28_16_3_s_Ffa #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
B_V_293_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_293_addr_1_reg_2237),
    .ce0(B_V_293_ce0),
    .q0(B_V_293_q0),
    .address1(B_V_293_address1),
    .ce1(B_V_293_ce1),
    .we1(B_V_293_we1),
    .d1(tmp_138_reg_2476)
);

cnn_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mul_32s_32s_3bkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp4_reg_1835),
    .din1(tmp3_reg_1830),
    .ce(1'b1),
    .dout(grp_fu_1208_p2)
);

cnn_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
cnn_mux_32_8_1_1_U13(
    .din0(B_V_0_q0),
    .din1(B_V_192_q0),
    .din2(B_V_293_q0),
    .din3(kb6_reg_1119),
    .dout(tmp_32_fu_1493_p5)
);

cnn_mux_285_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
cnn_mux_285_8_1_1_U14(
    .din0(A_V_0_load_reg_2255),
    .din1(A_V_188_load_reg_2260),
    .din2(A_V_289_load_reg_2265),
    .din3(A_V_390_load_reg_2270),
    .din4(A_V_491_load_reg_2275),
    .din5(A_V_5_load_reg_2280),
    .din6(A_V_6_load_reg_2285),
    .din7(A_V_7_load_reg_2290),
    .din8(A_V_8_load_reg_2295),
    .din9(A_V_9_load_reg_2300),
    .din10(A_V_10_load_reg_2305),
    .din11(A_V_11_load_reg_2310),
    .din12(A_V_12_load_reg_2315),
    .din13(A_V_13_load_reg_2320),
    .din14(A_V_14_load_reg_2325),
    .din15(A_V_15_load_reg_2330),
    .din16(A_V_16_load_reg_2335),
    .din17(A_V_17_load_reg_2340),
    .din18(A_V_18_load_reg_2345),
    .din19(A_V_19_load_reg_2350),
    .din20(A_V_20_load_reg_2355),
    .din21(A_V_21_load_reg_2360),
    .din22(A_V_22_load_reg_2365),
    .din23(A_V_23_load_reg_2370),
    .din24(A_V_24_load_reg_2375),
    .din25(A_V_25_load_reg_2380),
    .din26(A_V_26_load_reg_2385),
    .din27(A_V_27_load_reg_2390),
    .din28(tmp_120_0_t_reg_2250),
    .dout(tmp_31_fu_1505_p30)
);

cnn_mul_mul_16s_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cnn_mul_mul_16s_1cud_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1768_p0),
    .din1(grp_fu_1768_p1),
    .ce(grp_fu_1768_ce),
    .dout(grp_fu_1768_p2)
);

cnn_mul_mul_16s_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cnn_mul_mul_16s_1cud_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_V_80_reg_1796),
    .din1(tmp_V_84_reg_1801),
    .ce(grp_fu_1774_ce),
    .dout(grp_fu_1774_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state17)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state15))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state15);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state33) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1189_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state33)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state33);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1189_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1308_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        i3_reg_1073 <= 5'd0;
    end else if ((~((exitcond1_fu_1360_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        i3_reg_1073 <= i_3_reg_2064;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_68_fu_1216_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i7_reg_1004 <= i_s_fu_1221_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        i7_reg_1004 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1189_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_reg_1142 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        i_reg_1142 <= tmp_63_mid2_v_reg_2445;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        ia_reg_1049 <= 5'd1;
    end else if (((exitcond5_fu_1308_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        ia_reg_1049 <= ia_3_fu_1314_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        ib_reg_1061 <= 5'd1;
    end else if (((exitcond7_fu_1320_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        ib_reg_1061 <= ib_3_fu_1350_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1189_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        indvar_flatten2_reg_1131 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_fu_1604_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten2_reg_1131 <= indvar_flatten_next1_fu_1610_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1189_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        indvar_flatten_reg_1154 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_fu_1604_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_1154 <= indvar_flatten_next_fu_1628_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond6_fu_1286_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (exitcond6_fu_1286_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        j1_reg_1026 <= j_reg_1865;
    end else if (((tmp_67_fu_1231_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        j1_reg_1026 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        k_reg_1037 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        k_reg_1037 <= k_4_reg_2013;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_1461_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        ka5_reg_1096 <= ka_4_reg_2082;
    end else if (((exitcond7_fu_1320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        ka5_reg_1096 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1189_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        ka_reg_1165 <= 3'd2;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ka_reg_1165 <= ka_mid2_reg_2461;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_1360_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        kb6_reg_1119 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        kb6_reg_1119 <= kb_4_reg_2245;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1189_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        kb_reg_1177 <= 3'd2;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        kb_reg_1177 <= kb_3_reg_2466;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_62_fu_1194_p2 == 1'd1) & (tmp_s_fu_1189_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        num_img_reg_1015 <= 15'd0;
    end else if (((exitcond4_fu_1302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        num_img_reg_1015 <= num_img_1_reg_1857;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_1461_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        p_0144_1_reg_1084 <= p_0144_2_reg_1107;
    end else if (((exitcond7_fu_1320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        p_0144_1_reg_1084 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_1360_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        p_0144_2_reg_1107 <= p_0144_1_reg_1084;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        p_0144_2_reg_1107 <= buf_V_fu_1598_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_1360_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        A_V_0_addr_1_reg_2087 <= tmp_117_fu_1388_p1;
        A_V_10_addr_1_reg_2092 <= tmp_117_fu_1388_p1;
        A_V_11_addr_1_reg_2097 <= tmp_117_fu_1388_p1;
        A_V_12_addr_1_reg_2102 <= tmp_117_fu_1388_p1;
        A_V_13_addr_1_reg_2107 <= tmp_117_fu_1388_p1;
        A_V_14_addr_1_reg_2112 <= tmp_117_fu_1388_p1;
        A_V_15_addr_1_reg_2117 <= tmp_117_fu_1388_p1;
        A_V_16_addr_1_reg_2122 <= tmp_117_fu_1388_p1;
        A_V_17_addr_1_reg_2127 <= tmp_117_fu_1388_p1;
        A_V_188_addr_1_reg_2137 <= tmp_117_fu_1388_p1;
        A_V_18_addr_1_reg_2132 <= tmp_117_fu_1388_p1;
        A_V_19_addr_1_reg_2142 <= tmp_117_fu_1388_p1;
        A_V_20_addr_1_reg_2147 <= tmp_117_fu_1388_p1;
        A_V_21_addr_1_reg_2152 <= tmp_117_fu_1388_p1;
        A_V_22_addr_1_reg_2157 <= tmp_117_fu_1388_p1;
        A_V_23_addr_1_reg_2162 <= tmp_117_fu_1388_p1;
        A_V_24_addr_1_reg_2167 <= tmp_117_fu_1388_p1;
        A_V_25_addr_1_reg_2172 <= tmp_117_fu_1388_p1;
        A_V_26_addr_1_reg_2177 <= tmp_117_fu_1388_p1;
        A_V_27_addr_1_reg_2182 <= tmp_117_fu_1388_p1;
        A_V_289_addr_1_reg_2187 <= tmp_117_fu_1388_p1;
        A_V_390_addr_1_reg_2192 <= tmp_117_fu_1388_p1;
        A_V_491_addr_1_reg_2197 <= tmp_117_fu_1388_p1;
        A_V_5_addr_1_reg_2202 <= tmp_117_fu_1388_p1;
        A_V_6_addr_1_reg_2207 <= tmp_117_fu_1388_p1;
        A_V_7_addr_1_reg_2212 <= tmp_117_fu_1388_p1;
        A_V_8_addr_1_reg_2217 <= tmp_117_fu_1388_p1;
        A_V_9_addr_1_reg_2222 <= tmp_117_fu_1388_p1;
        B_V_0_addr_1_reg_2227 <= tmp_145_cast_fu_1429_p1;
        B_V_192_addr_1_reg_2232 <= tmp_145_cast_fu_1429_p1;
        B_V_293_addr_1_reg_2237 <= tmp_145_cast_fu_1429_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1242_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        A_V_0_addr_reg_1870 <= tmp_69_fu_1254_p1;
        A_V_10_addr_reg_1875 <= tmp_69_fu_1254_p1;
        A_V_11_addr_reg_1880 <= tmp_69_fu_1254_p1;
        A_V_12_addr_reg_1885 <= tmp_69_fu_1254_p1;
        A_V_13_addr_reg_1890 <= tmp_69_fu_1254_p1;
        A_V_14_addr_reg_1895 <= tmp_69_fu_1254_p1;
        A_V_15_addr_reg_1900 <= tmp_69_fu_1254_p1;
        A_V_16_addr_reg_1905 <= tmp_69_fu_1254_p1;
        A_V_17_addr_reg_1910 <= tmp_69_fu_1254_p1;
        A_V_188_addr_reg_1920 <= tmp_69_fu_1254_p1;
        A_V_18_addr_reg_1915 <= tmp_69_fu_1254_p1;
        A_V_19_addr_reg_1925 <= tmp_69_fu_1254_p1;
        A_V_20_addr_reg_1930 <= tmp_69_fu_1254_p1;
        A_V_21_addr_reg_1935 <= tmp_69_fu_1254_p1;
        A_V_22_addr_reg_1940 <= tmp_69_fu_1254_p1;
        A_V_23_addr_reg_1945 <= tmp_69_fu_1254_p1;
        A_V_24_addr_reg_1950 <= tmp_69_fu_1254_p1;
        A_V_25_addr_reg_1955 <= tmp_69_fu_1254_p1;
        A_V_26_addr_reg_1960 <= tmp_69_fu_1254_p1;
        A_V_27_addr_reg_1965 <= tmp_69_fu_1254_p1;
        A_V_289_addr_reg_1970 <= tmp_69_fu_1254_p1;
        A_V_390_addr_reg_1975 <= tmp_69_fu_1254_p1;
        A_V_491_addr_reg_1980 <= tmp_69_fu_1254_p1;
        A_V_5_addr_reg_1985 <= tmp_69_fu_1254_p1;
        A_V_6_addr_reg_1990 <= tmp_69_fu_1254_p1;
        A_V_7_addr_reg_1995 <= tmp_69_fu_1254_p1;
        A_V_8_addr_reg_2000 <= tmp_69_fu_1254_p1;
        A_V_9_addr_reg_2005 <= tmp_69_fu_1254_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_0_load_reg_2255 <= A_V_0_q0;
        A_V_10_load_reg_2305 <= A_V_10_q0;
        A_V_11_load_reg_2310 <= A_V_11_q0;
        A_V_12_load_reg_2315 <= A_V_12_q0;
        A_V_13_load_reg_2320 <= A_V_13_q0;
        A_V_14_load_reg_2325 <= A_V_14_q0;
        A_V_15_load_reg_2330 <= A_V_15_q0;
        A_V_16_load_reg_2335 <= A_V_16_q0;
        A_V_17_load_reg_2340 <= A_V_17_q0;
        A_V_188_load_reg_2260 <= A_V_188_q0;
        A_V_18_load_reg_2345 <= A_V_18_q0;
        A_V_19_load_reg_2350 <= A_V_19_q0;
        A_V_20_load_reg_2355 <= A_V_20_q0;
        A_V_21_load_reg_2360 <= A_V_21_q0;
        A_V_22_load_reg_2365 <= A_V_22_q0;
        A_V_23_load_reg_2370 <= A_V_23_q0;
        A_V_24_load_reg_2375 <= A_V_24_q0;
        A_V_25_load_reg_2380 <= A_V_25_q0;
        A_V_26_load_reg_2385 <= A_V_26_q0;
        A_V_27_load_reg_2390 <= A_V_27_q0;
        A_V_289_load_reg_2265 <= A_V_289_q0;
        A_V_390_load_reg_2270 <= A_V_390_q0;
        A_V_491_load_reg_2275 <= A_V_491_q0;
        A_V_5_load_reg_2280 <= A_V_5_q0;
        A_V_6_load_reg_2285 <= A_V_6_q0;
        A_V_7_load_reg_2290 <= A_V_7_q0;
        A_V_8_load_reg_2295 <= A_V_8_q0;
        A_V_9_load_reg_2300 <= A_V_9_q0;
        tmp_120_0_t_reg_2250 <= tmp_120_0_t_fu_1487_p2;
        tmp_32_reg_2395 <= tmp_32_fu_1493_p5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        KER_bound_reg_1840 <= grp_fu_1208_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_fu_1604_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten10_reg_2431 <= exitcond_flatten10_fu_1616_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten_reg_2422 <= exitcond_flatten_fu_1604_p2;
        exitcond_flatten_reg_2422_pp1_iter1_reg <= exitcond_flatten_reg_2422;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i_3_reg_2064 <= i_3_fu_1326_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_reg_1865 <= j_fu_1248_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond6_fu_1286_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state20))) begin
        k_4_reg_2013 <= k_4_fu_1292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2422 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ka_0_t_mid2_reg_2457 <= ka_0_t_mid2_fu_1711_p3;
        kb_mid2_reg_2452 <= kb_mid2_fu_1699_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        ka_0_t_mid2_reg_2457_pp1_iter2_reg <= ka_0_t_mid2_reg_2457;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_1360_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state26))) begin
        ka_4_reg_2082 <= ka_4_fu_1366_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2422 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ka_mid2_reg_2461 <= ka_mid2_fu_1719_p3;
        kb_3_reg_2466 <= kb_3_fu_1727_p2;
        tmp_63_mid2_v_reg_2445 <= tmp_63_mid2_v_fu_1656_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        kb_4_reg_2245 <= kb_4_fu_1467_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        num_img_1_reg_1857 <= num_img_1_fu_1236_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        r_V_4_reg_2405 <= r_V_4_fu_1544_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp3_reg_1830 <= grp_fu_1768_p2;
        tmp4_reg_1835 <= grp_fu_1774_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        tmp_129_reg_2412 <= {{p_neg_fu_1553_p2[13:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0))) begin
        tmp_134_reg_2471 <= tmp_134_fu_1752_p2;
        tmp_138_reg_2476 <= tmp_138_fu_1758_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond6_fu_1286_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (exitcond6_fu_1286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        tmp_139_reg_2018 <= tmp_139_fu_1298_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_1320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        tmp_141_reg_2069 <= tmp_141_fu_1344_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_31_reg_2400 <= tmp_31_fu_1505_p30;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_68_reg_1845 <= tmp_68_fu_1216_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_76_reg_1786 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_78_reg_1791 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_80_reg_1796 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_84_reg_1801 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_V_reg_1780 <= stream_in_V_V_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_0_ce0 = 1'b1;
    end else begin
        A_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_0_ce1 = 1'b1;
    end else begin
        A_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_0_we1 = 1'b1;
    end else begin
        A_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_10_ce0 = 1'b1;
    end else begin
        A_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_10_ce1 = 1'b1;
    end else begin
        A_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd10) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_10_we1 = 1'b1;
    end else begin
        A_V_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_11_ce0 = 1'b1;
    end else begin
        A_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_11_ce1 = 1'b1;
    end else begin
        A_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd11) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_11_we1 = 1'b1;
    end else begin
        A_V_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_12_ce0 = 1'b1;
    end else begin
        A_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_12_ce1 = 1'b1;
    end else begin
        A_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd12) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_12_we1 = 1'b1;
    end else begin
        A_V_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_13_ce0 = 1'b1;
    end else begin
        A_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_13_ce1 = 1'b1;
    end else begin
        A_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd13) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_13_we1 = 1'b1;
    end else begin
        A_V_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_14_ce0 = 1'b1;
    end else begin
        A_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_14_ce1 = 1'b1;
    end else begin
        A_V_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd14) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_14_we1 = 1'b1;
    end else begin
        A_V_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_15_ce0 = 1'b1;
    end else begin
        A_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_15_ce1 = 1'b1;
    end else begin
        A_V_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd15) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_15_we1 = 1'b1;
    end else begin
        A_V_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_16_ce0 = 1'b1;
    end else begin
        A_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_16_ce1 = 1'b1;
    end else begin
        A_V_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd16) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_16_we1 = 1'b1;
    end else begin
        A_V_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_17_ce0 = 1'b1;
    end else begin
        A_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_17_ce1 = 1'b1;
    end else begin
        A_V_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd17) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_17_we1 = 1'b1;
    end else begin
        A_V_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_188_ce0 = 1'b1;
    end else begin
        A_V_188_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_188_ce1 = 1'b1;
    end else begin
        A_V_188_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_188_we1 = 1'b1;
    end else begin
        A_V_188_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_18_ce0 = 1'b1;
    end else begin
        A_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_18_ce1 = 1'b1;
    end else begin
        A_V_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd18) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_18_we1 = 1'b1;
    end else begin
        A_V_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_19_ce0 = 1'b1;
    end else begin
        A_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_19_ce1 = 1'b1;
    end else begin
        A_V_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd19) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_19_we1 = 1'b1;
    end else begin
        A_V_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_20_ce0 = 1'b1;
    end else begin
        A_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_20_ce1 = 1'b1;
    end else begin
        A_V_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd20) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_20_we1 = 1'b1;
    end else begin
        A_V_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_21_ce0 = 1'b1;
    end else begin
        A_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_21_ce1 = 1'b1;
    end else begin
        A_V_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd21) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_21_we1 = 1'b1;
    end else begin
        A_V_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_22_ce0 = 1'b1;
    end else begin
        A_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_22_ce1 = 1'b1;
    end else begin
        A_V_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd22) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_22_we1 = 1'b1;
    end else begin
        A_V_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_23_ce0 = 1'b1;
    end else begin
        A_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_23_ce1 = 1'b1;
    end else begin
        A_V_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd23) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_23_we1 = 1'b1;
    end else begin
        A_V_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_24_ce0 = 1'b1;
    end else begin
        A_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_24_ce1 = 1'b1;
    end else begin
        A_V_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd24) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_24_we1 = 1'b1;
    end else begin
        A_V_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_25_ce0 = 1'b1;
    end else begin
        A_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_25_ce1 = 1'b1;
    end else begin
        A_V_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd25) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_25_we1 = 1'b1;
    end else begin
        A_V_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_26_ce0 = 1'b1;
    end else begin
        A_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_26_ce1 = 1'b1;
    end else begin
        A_V_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd26) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_26_we1 = 1'b1;
    end else begin
        A_V_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_27_ce0 = 1'b1;
    end else begin
        A_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_27_ce1 = 1'b1;
    end else begin
        A_V_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & ((k_reg_1037 == 5'd31) | (k_reg_1037 == 5'd30) | (k_reg_1037 == 5'd29) | (k_reg_1037 == 5'd28) | (k_reg_1037 == 5'd27)))) begin
        A_V_27_we1 = 1'b1;
    end else begin
        A_V_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_289_ce0 = 1'b1;
    end else begin
        A_V_289_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_289_ce1 = 1'b1;
    end else begin
        A_V_289_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd2) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_289_we1 = 1'b1;
    end else begin
        A_V_289_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_390_ce0 = 1'b1;
    end else begin
        A_V_390_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_390_ce1 = 1'b1;
    end else begin
        A_V_390_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd3) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_390_we1 = 1'b1;
    end else begin
        A_V_390_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_491_ce0 = 1'b1;
    end else begin
        A_V_491_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_491_ce1 = 1'b1;
    end else begin
        A_V_491_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd4) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_491_we1 = 1'b1;
    end else begin
        A_V_491_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_5_ce0 = 1'b1;
    end else begin
        A_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_5_ce1 = 1'b1;
    end else begin
        A_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd5) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_5_we1 = 1'b1;
    end else begin
        A_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_6_ce0 = 1'b1;
    end else begin
        A_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_6_ce1 = 1'b1;
    end else begin
        A_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd6) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_6_we1 = 1'b1;
    end else begin
        A_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_7_ce0 = 1'b1;
    end else begin
        A_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_7_ce1 = 1'b1;
    end else begin
        A_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd7) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_7_we1 = 1'b1;
    end else begin
        A_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_8_ce0 = 1'b1;
    end else begin
        A_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_8_ce1 = 1'b1;
    end else begin
        A_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd8) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_8_we1 = 1'b1;
    end else begin
        A_V_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        A_V_9_ce0 = 1'b1;
    end else begin
        A_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        A_V_9_ce1 = 1'b1;
    end else begin
        A_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((k_reg_1037 == 5'd9) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_9_we1 = 1'b1;
    end else begin
        A_V_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        B_V_0_ce0 = 1'b1;
    end else begin
        B_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        B_V_0_ce1 = 1'b1;
    end else begin
        B_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ka_0_t_mid2_reg_2457_pp1_iter2_reg == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        B_V_0_we1 = 1'b1;
    end else begin
        B_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        B_V_192_ce0 = 1'b1;
    end else begin
        B_V_192_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        B_V_192_ce1 = 1'b1;
    end else begin
        B_V_192_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ka_0_t_mid2_reg_2457_pp1_iter2_reg == 2'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        B_V_192_we1 = 1'b1;
    end else begin
        B_V_192_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        B_V_293_ce0 = 1'b1;
    end else begin
        B_V_293_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        B_V_293_ce1 = 1'b1;
    end else begin
        B_V_293_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(ka_0_t_mid2_reg_2457_pp1_iter2_reg == 2'd1) & ~(ka_0_t_mid2_reg_2457_pp1_iter2_reg == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        B_V_293_we1 = 1'b1;
    end else begin
        B_V_293_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_68_fu_1216_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1604_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state33 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state33 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_i_phi_fu_1146_p4 = tmp_63_mid2_v_reg_2445;
    end else begin
        ap_phi_mux_i_phi_fu_1146_p4 = i_reg_1142;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_ka_phi_fu_1169_p4 = ka_mid2_reg_2461;
    end else begin
        ap_phi_mux_ka_phi_fu_1169_p4 = ka_reg_1165;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_kb_phi_fu_1181_p4 = kb_3_reg_2466;
    end else begin
        ap_phi_mux_kb_phi_fu_1181_p4 = kb_reg_1177;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_1768_ce = 1'b1;
    end else begin
        grp_fu_1768_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_1774_ce = 1'b1;
    end else begin
        grp_fu_1774_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_68_reg_1845 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond6_fu_1286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        stream_in_V_V_blk_n = stream_in_V_V_empty_n;
    end else begin
        stream_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_68_reg_1845 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((exitcond6_fu_1286_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (exitcond6_fu_1286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_in_V_V_read = 1'b1;
    end else begin
        stream_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond1_fu_1360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((tmp_68_reg_1845 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        stream_out_V_V_blk_n = stream_out_V_V_full_n;
    end else begin
        stream_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((exitcond1_fu_1360_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        stream_out_V_V_din = Outbuf_V_fu_1456_p1;
    end else if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_68_reg_1845 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_din = stream_in_V_V_dout;
    end else begin
        stream_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((exitcond1_fu_1360_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_68_reg_1845 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_write = 1'b1;
    end else begin
        stream_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1189_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_62_fu_1194_p2 == 1'd1) & (tmp_s_fu_1189_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_62_fu_1194_p2 == 1'd0) & (tmp_s_fu_1189_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_68_fu_1216_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_68_fu_1216_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state18 : begin
            if (((tmp_67_fu_1231_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((exitcond3_fu_1242_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            if ((~((exitcond6_fu_1286_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (exitcond6_fu_1286_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if ((~((exitcond6_fu_1286_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state20) & (((ap_phi_mux_k_phi_fu_1041_p4 == 5'd31) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd30) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd29) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd28) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd27) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd26) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd25) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd24) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd23) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd22) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd21) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd20) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd19) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd18) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd17) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd16) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd15) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd14) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd13) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd12) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd11) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd10) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd9) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd8) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd7) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd6) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd5) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd4) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd3) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd2) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd1) & (exitcond6_fu_1286_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd0) & (exitcond6_fu_1286_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state23 : begin
            if (((exitcond4_fu_1302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((exitcond5_fu_1308_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((exitcond7_fu_1320_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if ((~((exitcond1_fu_1360_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1360_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if ((~((exitcond1_fu_1360_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1360_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((exitcond8_fu_1461_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_flatten_fu_1604_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_flatten_fu_1604_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_V_0_address1 = tmp_142_cast_fu_1762_p1;

assign B_V_192_address1 = tmp_142_cast_fu_1762_p1;

assign B_V_293_address1 = tmp_142_cast_fu_1762_p1;

assign Outbuf_V_fu_1456_p1 = x_V_y_V_i_fu_1448_p3;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_68_reg_1845 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_68_reg_1845 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_68_reg_1845 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_68_reg_1845 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_68_reg_1845 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_68_reg_1845 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter2 == 1'b1) & (((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0));
end

assign ap_block_state15_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage0_iter1 = (((tmp_68_reg_1845 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_68_reg_1845 == 1'd1) & (stream_in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state20 = ((exitcond6_fu_1286_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state26 = ((exitcond1_fu_1360_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state33_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state35_pp1_stage0_iter2 = (((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_2422_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0)));
end

assign ap_block_state36_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_k_phi_fu_1041_p4 = k_reg_1037;

assign ap_ready = internal_ap_ready;

assign buf_V_fu_1598_p2 = (tmp_132_fu_1590_p3 + p_0144_2_reg_1107);

assign exitcond1_fu_1360_p2 = ((ka5_reg_1096 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond3_fu_1242_p2 = ((j1_reg_1026 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond4_fu_1302_p2 = ((ia_reg_1049 == 5'd27) ? 1'b1 : 1'b0);

assign exitcond5_fu_1308_p2 = ((ib_reg_1061 == 5'd27) ? 1'b1 : 1'b0);

assign exitcond6_fu_1286_p2 = ((k_reg_1037 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond7_fu_1320_p2 = ((i3_reg_1073 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond8_fu_1461_p2 = ((kb6_reg_1119 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_flatten10_fu_1616_p2 = ((indvar_flatten_reg_1154 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1604_p2 = ((indvar_flatten2_reg_1131 == 8'd144) ? 1'b1 : 1'b0);

assign grp_fu_1768_p0 = tmp_65_fu_1205_p1;

assign grp_fu_1768_p1 = tmp_65_fu_1205_p1;

assign i7_cast_fu_1212_p1 = i7_reg_1004;

assign i_3_fu_1326_p2 = (i3_reg_1073 + 5'd1);

assign i_4_fu_1636_p2 = (5'd1 + ap_phi_mux_i_phi_fu_1146_p4);

assign i_s_fu_1221_p2 = (i7_reg_1004 + 31'd1);

assign ia_3_fu_1314_p2 = (ia_reg_1049 + 5'd1);

assign ib_3_fu_1350_p2 = (ib_reg_1061 + 5'd1);

assign indvar_flatten_next1_fu_1610_p2 = (indvar_flatten2_reg_1131 + 8'd1);

assign indvar_flatten_next_fu_1628_p3 = ((exitcond_flatten10_fu_1616_p2[0:0] === 1'b1) ? 4'd1 : indvar_flatten_op_fu_1622_p2);

assign indvar_flatten_op_fu_1622_p2 = (indvar_flatten_reg_1154 + 4'd1);

assign j_fu_1248_p2 = (j1_reg_1026 + 5'd1);

assign k_4_fu_1292_p2 = (k_reg_1037 + 5'd1);

assign ka5_cast_cast_fu_1356_p1 = ka5_reg_1096;

assign ka_0_t_mid2_fu_1711_p3 = ((tmp_109_mid_fu_1688_p2[0:0] === 1'b1) ? ka_0_t_mid_fu_1667_p3 : tmp_137_fu_1707_p1);

assign ka_0_t_mid_fu_1667_p3 = ((exitcond_flatten10_reg_2431[0:0] === 1'b1) ? 2'd2 : tmp_135_fu_1663_p1);

assign ka_3_fu_1693_p2 = ($signed(3'd7) + $signed(ka_mid_fu_1642_p3));

assign ka_4_fu_1366_p2 = (ka5_reg_1096 + 2'd1);

assign ka_mid2_fu_1719_p3 = ((tmp_109_mid_fu_1688_p2[0:0] === 1'b1) ? ka_mid_fu_1642_p3 : ka_3_fu_1693_p2);

assign ka_mid_fu_1642_p3 = ((exitcond_flatten10_reg_2431[0:0] === 1'b1) ? 3'd2 : ap_phi_mux_ka_phi_fu_1169_p4);

assign kb_3_fu_1727_p2 = ($signed(kb_mid2_fu_1699_p3) + $signed(3'd7));

assign kb_4_fu_1467_p2 = (kb6_reg_1119 + 2'd1);

assign kb_mid2_fu_1699_p3 = ((tmp_109_mid_fu_1688_p2[0:0] === 1'b1) ? kb_mid_fu_1649_p3 : 3'd2);

assign kb_mid_fu_1649_p3 = ((exitcond_flatten10_reg_2431[0:0] === 1'b1) ? 3'd2 : ap_phi_mux_kb_phi_fu_1181_p4);

assign num_img_1_fu_1236_p2 = (num_img_reg_1015 + 15'd1);

assign num_img_cast_fu_1227_p1 = num_img_reg_1015;

assign p_neg_fu_1553_p2 = (17'd0 - tmp_123_tr_s_fu_1550_p1);

assign r_V_4_fu_1544_p0 = tmp_32_reg_2395;

assign r_V_4_fu_1544_p1 = tmp_31_reg_2400;

assign r_V_4_fu_1544_p2 = ($signed(r_V_4_fu_1544_p0) * $signed(r_V_4_fu_1544_p1));

assign rev_fu_1682_p2 = (tmp_136_fu_1674_p3 ^ 1'd1);

assign start_out = real_start;

assign tmp1_cast_fu_1378_p1 = $signed(tmp1_fu_1372_p2);

assign tmp1_fu_1372_p2 = ($signed(ka5_cast_cast_fu_1356_p1) + $signed(3'd7));

assign tmp2_cast_fu_1483_p1 = $signed(tmp2_fu_1477_p2);

assign tmp2_fu_1477_p2 = ($signed(tmp_131_cast_fu_1473_p1) + $signed(3'd7));

assign tmp_109_mid_fu_1688_p2 = (rev_fu_1682_p2 | exitcond_flatten10_reg_2431);

assign tmp_111_cast_fu_1749_p1 = kb_mid2_reg_2452;

assign tmp_116_fu_1382_p2 = ($signed(ia_reg_1049) + $signed(tmp1_cast_fu_1378_p1));

assign tmp_117_fu_1388_p1 = tmp_116_fu_1382_p2;

assign tmp_118_cast_fu_1420_p1 = ka5_reg_1096;

assign tmp_120_0_t_fu_1487_p2 = ($signed(tmp2_cast_fu_1483_p1) + $signed(ib_reg_1061));

assign tmp_123_tr_s_fu_1550_p1 = r_V_4_reg_2405;

assign tmp_128_fu_1736_p3 = {{tmp_63_mid2_v_reg_2445}, {2'd0}};

assign tmp_130_fu_1576_p2 = (8'd0 - tmp_129_reg_2412);

assign tmp_131_cast_fu_1473_p1 = kb6_reg_1119;

assign tmp_131_fu_1581_p4 = {{r_V_4_reg_2405[13:6]}};

assign tmp_132_fu_1590_p3 = ((tmp_145_fu_1569_p3[0:0] === 1'b1) ? tmp_130_fu_1576_p2 : tmp_131_fu_1581_p4);

assign tmp_133_fu_1743_p2 = (tmp_128_fu_1736_p3 - tmp_63_mid2_cast_fu_1733_p1);

assign tmp_134_fu_1752_p2 = ($signed(tmp_133_fu_1743_p2) + $signed(tmp_111_cast_fu_1749_p1));

assign tmp_135_fu_1663_p1 = ap_phi_mux_ka_phi_fu_1169_p4[1:0];

assign tmp_136_fu_1674_p3 = ap_phi_mux_kb_phi_fu_1181_p4[32'd2];

assign tmp_137_fu_1707_p1 = ka_3_fu_1693_p2[1:0];

assign tmp_138_fu_1758_p1 = stream_in_V_V_dout[7:0];

assign tmp_139_fu_1298_p1 = stream_in_V_V_dout[7:0];

assign tmp_140_fu_1336_p3 = {{i3_reg_1073}, {2'd0}};

assign tmp_141_fu_1344_p2 = (tmp_140_fu_1336_p3 - tmp_70_cast_fu_1332_p1);

assign tmp_142_cast_fu_1762_p1 = $signed(tmp_134_reg_2471);

assign tmp_142_fu_1436_p1 = p_0144_1_reg_1084[6:0];

assign tmp_143_fu_1440_p3 = p_0144_1_reg_1084[32'd7];

assign tmp_144_fu_1424_p2 = (tmp_141_reg_2069 + tmp_118_cast_fu_1420_p1);

assign tmp_145_cast_fu_1429_p1 = $signed(tmp_144_fu_1424_p2);

assign tmp_145_fu_1569_p3 = r_V_4_reg_2405[32'd15];

assign tmp_62_fu_1194_p2 = ((tmp_V_reg_1780 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_63_mid2_cast_fu_1733_p1 = tmp_63_mid2_v_reg_2445;

assign tmp_63_mid2_v_fu_1656_p3 = ((exitcond_flatten10_reg_2431[0:0] === 1'b1) ? i_4_fu_1636_p2 : ap_phi_mux_i_phi_fu_1146_p4);

assign tmp_65_fu_1205_p1 = tmp_V_78_reg_1791;

assign tmp_67_fu_1231_p2 = (($signed(num_img_cast_fu_1227_p1) < $signed(tmp_V_76_reg_1786)) ? 1'b1 : 1'b0);

assign tmp_68_fu_1216_p2 = (($signed(i7_cast_fu_1212_p1) < $signed(KER_bound_reg_1840)) ? 1'b1 : 1'b0);

assign tmp_69_fu_1254_p1 = j1_reg_1026;

assign tmp_70_cast_fu_1332_p1 = i3_reg_1073;

assign tmp_s_fu_1189_p2 = ((tmp_V_reg_1780 == 16'd1) ? 1'b1 : 1'b0);

assign x_V_y_V_i_fu_1448_p3 = ((tmp_143_fu_1440_p3[0:0] === 1'b1) ? 7'd0 : tmp_142_fu_1436_p1);

endmodule //Conv_1_28_16_3_s
