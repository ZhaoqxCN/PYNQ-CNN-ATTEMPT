// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cnn.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<16> cnn::ap_const_lv16_0 = "0000000000000000";
const sc_logic cnn::ap_const_logic_0 = sc_dt::Log_0;
const sc_logic cnn::ap_const_logic_1 = sc_dt::Log_1;

cnn::cnn(sc_module_name name) : sc_module(name), mVcdFile(0) {
    AXI_DMA_SLAVE_U0 = new AXI_DMA_SLAVE("AXI_DMA_SLAVE_U0");
    AXI_DMA_SLAVE_U0->ap_clk(ap_clk);
    AXI_DMA_SLAVE_U0->ap_rst(ap_rst_n_inv);
    AXI_DMA_SLAVE_U0->ap_start(AXI_DMA_SLAVE_U0_ap_start);
    AXI_DMA_SLAVE_U0->start_full_n(start_for_Conv_1_28_16_3_U0_full_n);
    AXI_DMA_SLAVE_U0->ap_done(AXI_DMA_SLAVE_U0_ap_done);
    AXI_DMA_SLAVE_U0->ap_continue(AXI_DMA_SLAVE_U0_ap_continue);
    AXI_DMA_SLAVE_U0->ap_idle(AXI_DMA_SLAVE_U0_ap_idle);
    AXI_DMA_SLAVE_U0->ap_ready(AXI_DMA_SLAVE_U0_ap_ready);
    AXI_DMA_SLAVE_U0->start_out(AXI_DMA_SLAVE_U0_start_out);
    AXI_DMA_SLAVE_U0->start_write(AXI_DMA_SLAVE_U0_start_write);
    AXI_DMA_SLAVE_U0->stream_in_TDATA(stream_in_TDATA);
    AXI_DMA_SLAVE_U0->stream_in_TVALID(stream_in_TVALID);
    AXI_DMA_SLAVE_U0->stream_in_TREADY(AXI_DMA_SLAVE_U0_stream_in_TREADY);
    AXI_DMA_SLAVE_U0->stream_in_TLAST(stream_in_TLAST);
    AXI_DMA_SLAVE_U0->stream_out_V_V_din(AXI_DMA_SLAVE_U0_stream_out_V_V_din);
    AXI_DMA_SLAVE_U0->stream_out_V_V_full_n(connect_0_V_V_full_n);
    AXI_DMA_SLAVE_U0->stream_out_V_V_write(AXI_DMA_SLAVE_U0_stream_out_V_V_write);
    Conv_1_28_16_3_U0 = new Conv_1_28_16_3_s("Conv_1_28_16_3_U0");
    Conv_1_28_16_3_U0->ap_clk(ap_clk);
    Conv_1_28_16_3_U0->ap_rst(ap_rst_n_inv);
    Conv_1_28_16_3_U0->ap_start(Conv_1_28_16_3_U0_ap_start);
    Conv_1_28_16_3_U0->start_full_n(start_for_Conv_16_26_32_3_U0_full_n);
    Conv_1_28_16_3_U0->ap_done(Conv_1_28_16_3_U0_ap_done);
    Conv_1_28_16_3_U0->ap_continue(Conv_1_28_16_3_U0_ap_continue);
    Conv_1_28_16_3_U0->ap_idle(Conv_1_28_16_3_U0_ap_idle);
    Conv_1_28_16_3_U0->ap_ready(Conv_1_28_16_3_U0_ap_ready);
    Conv_1_28_16_3_U0->start_out(Conv_1_28_16_3_U0_start_out);
    Conv_1_28_16_3_U0->start_write(Conv_1_28_16_3_U0_start_write);
    Conv_1_28_16_3_U0->stream_in_V_V_dout(connect_0_V_V_dout);
    Conv_1_28_16_3_U0->stream_in_V_V_empty_n(connect_0_V_V_empty_n);
    Conv_1_28_16_3_U0->stream_in_V_V_read(Conv_1_28_16_3_U0_stream_in_V_V_read);
    Conv_1_28_16_3_U0->stream_out_V_V_din(Conv_1_28_16_3_U0_stream_out_V_V_din);
    Conv_1_28_16_3_U0->stream_out_V_V_full_n(connect_1_V_V_full_n);
    Conv_1_28_16_3_U0->stream_out_V_V_write(Conv_1_28_16_3_U0_stream_out_V_V_write);
    Conv_16_26_32_3_U0 = new Conv_16_26_32_3_s("Conv_16_26_32_3_U0");
    Conv_16_26_32_3_U0->ap_clk(ap_clk);
    Conv_16_26_32_3_U0->ap_rst(ap_rst_n_inv);
    Conv_16_26_32_3_U0->ap_start(Conv_16_26_32_3_U0_ap_start);
    Conv_16_26_32_3_U0->start_full_n(start_for_Pool_32_24_4_U0_full_n);
    Conv_16_26_32_3_U0->ap_done(Conv_16_26_32_3_U0_ap_done);
    Conv_16_26_32_3_U0->ap_continue(Conv_16_26_32_3_U0_ap_continue);
    Conv_16_26_32_3_U0->ap_idle(Conv_16_26_32_3_U0_ap_idle);
    Conv_16_26_32_3_U0->ap_ready(Conv_16_26_32_3_U0_ap_ready);
    Conv_16_26_32_3_U0->start_out(Conv_16_26_32_3_U0_start_out);
    Conv_16_26_32_3_U0->start_write(Conv_16_26_32_3_U0_start_write);
    Conv_16_26_32_3_U0->stream_in_V_V_dout(connect_1_V_V_dout);
    Conv_16_26_32_3_U0->stream_in_V_V_empty_n(connect_1_V_V_empty_n);
    Conv_16_26_32_3_U0->stream_in_V_V_read(Conv_16_26_32_3_U0_stream_in_V_V_read);
    Conv_16_26_32_3_U0->stream_out_V_V_din(Conv_16_26_32_3_U0_stream_out_V_V_din);
    Conv_16_26_32_3_U0->stream_out_V_V_full_n(connect_2_V_V_full_n);
    Conv_16_26_32_3_U0->stream_out_V_V_write(Conv_16_26_32_3_U0_stream_out_V_V_write);
    Pool_32_24_4_U0 = new Pool_32_24_4_s("Pool_32_24_4_U0");
    Pool_32_24_4_U0->ap_clk(ap_clk);
    Pool_32_24_4_U0->ap_rst(ap_rst_n_inv);
    Pool_32_24_4_U0->ap_start(Pool_32_24_4_U0_ap_start);
    Pool_32_24_4_U0->start_full_n(start_for_FC_1152_128_U0_full_n);
    Pool_32_24_4_U0->ap_done(Pool_32_24_4_U0_ap_done);
    Pool_32_24_4_U0->ap_continue(Pool_32_24_4_U0_ap_continue);
    Pool_32_24_4_U0->ap_idle(Pool_32_24_4_U0_ap_idle);
    Pool_32_24_4_U0->ap_ready(Pool_32_24_4_U0_ap_ready);
    Pool_32_24_4_U0->start_out(Pool_32_24_4_U0_start_out);
    Pool_32_24_4_U0->start_write(Pool_32_24_4_U0_start_write);
    Pool_32_24_4_U0->stream_in_V_V_dout(connect_2_V_V_dout);
    Pool_32_24_4_U0->stream_in_V_V_empty_n(connect_2_V_V_empty_n);
    Pool_32_24_4_U0->stream_in_V_V_read(Pool_32_24_4_U0_stream_in_V_V_read);
    Pool_32_24_4_U0->stream_out_V_V_din(Pool_32_24_4_U0_stream_out_V_V_din);
    Pool_32_24_4_U0->stream_out_V_V_full_n(connect_3_V_V_full_n);
    Pool_32_24_4_U0->stream_out_V_V_write(Pool_32_24_4_U0_stream_out_V_V_write);
    FC_1152_128_U0 = new FC_1152_128_s("FC_1152_128_U0");
    FC_1152_128_U0->ap_clk(ap_clk);
    FC_1152_128_U0->ap_rst(ap_rst_n_inv);
    FC_1152_128_U0->ap_start(FC_1152_128_U0_ap_start);
    FC_1152_128_U0->start_full_n(start_for_FC_128_10_U0_full_n);
    FC_1152_128_U0->ap_done(FC_1152_128_U0_ap_done);
    FC_1152_128_U0->ap_continue(FC_1152_128_U0_ap_continue);
    FC_1152_128_U0->ap_idle(FC_1152_128_U0_ap_idle);
    FC_1152_128_U0->ap_ready(FC_1152_128_U0_ap_ready);
    FC_1152_128_U0->start_out(FC_1152_128_U0_start_out);
    FC_1152_128_U0->start_write(FC_1152_128_U0_start_write);
    FC_1152_128_U0->stream_in_V_V_dout(connect_3_V_V_dout);
    FC_1152_128_U0->stream_in_V_V_empty_n(connect_3_V_V_empty_n);
    FC_1152_128_U0->stream_in_V_V_read(FC_1152_128_U0_stream_in_V_V_read);
    FC_1152_128_U0->stream_out_V_V_din(FC_1152_128_U0_stream_out_V_V_din);
    FC_1152_128_U0->stream_out_V_V_full_n(connect_4_V_V_full_n);
    FC_1152_128_U0->stream_out_V_V_write(FC_1152_128_U0_stream_out_V_V_write);
    FC_128_10_U0 = new FC_128_10_s("FC_128_10_U0");
    FC_128_10_U0->ap_clk(ap_clk);
    FC_128_10_U0->ap_rst(ap_rst_n_inv);
    FC_128_10_U0->ap_start(FC_128_10_U0_ap_start);
    FC_128_10_U0->start_full_n(start_for_AXI_DMA_MASTER_U0_full_n);
    FC_128_10_U0->ap_done(FC_128_10_U0_ap_done);
    FC_128_10_U0->ap_continue(FC_128_10_U0_ap_continue);
    FC_128_10_U0->ap_idle(FC_128_10_U0_ap_idle);
    FC_128_10_U0->ap_ready(FC_128_10_U0_ap_ready);
    FC_128_10_U0->start_out(FC_128_10_U0_start_out);
    FC_128_10_U0->start_write(FC_128_10_U0_start_write);
    FC_128_10_U0->stream_in_V_V_dout(connect_4_V_V_dout);
    FC_128_10_U0->stream_in_V_V_empty_n(connect_4_V_V_empty_n);
    FC_128_10_U0->stream_in_V_V_read(FC_128_10_U0_stream_in_V_V_read);
    FC_128_10_U0->stream_out_V_V_din(FC_128_10_U0_stream_out_V_V_din);
    FC_128_10_U0->stream_out_V_V_full_n(connect_5_V_V_full_n);
    FC_128_10_U0->stream_out_V_V_write(FC_128_10_U0_stream_out_V_V_write);
    AXI_DMA_MASTER_U0 = new AXI_DMA_MASTER("AXI_DMA_MASTER_U0");
    AXI_DMA_MASTER_U0->ap_clk(ap_clk);
    AXI_DMA_MASTER_U0->ap_rst(ap_rst_n_inv);
    AXI_DMA_MASTER_U0->ap_start(AXI_DMA_MASTER_U0_ap_start);
    AXI_DMA_MASTER_U0->ap_done(AXI_DMA_MASTER_U0_ap_done);
    AXI_DMA_MASTER_U0->ap_continue(AXI_DMA_MASTER_U0_ap_continue);
    AXI_DMA_MASTER_U0->ap_idle(AXI_DMA_MASTER_U0_ap_idle);
    AXI_DMA_MASTER_U0->ap_ready(AXI_DMA_MASTER_U0_ap_ready);
    AXI_DMA_MASTER_U0->stream_in_V_V_dout(connect_5_V_V_dout);
    AXI_DMA_MASTER_U0->stream_in_V_V_empty_n(connect_5_V_V_empty_n);
    AXI_DMA_MASTER_U0->stream_in_V_V_read(AXI_DMA_MASTER_U0_stream_in_V_V_read);
    AXI_DMA_MASTER_U0->stream_out_TDATA(AXI_DMA_MASTER_U0_stream_out_TDATA);
    AXI_DMA_MASTER_U0->stream_out_TVALID(AXI_DMA_MASTER_U0_stream_out_TVALID);
    AXI_DMA_MASTER_U0->stream_out_TREADY(stream_out_TREADY);
    AXI_DMA_MASTER_U0->stream_out_TLAST(AXI_DMA_MASTER_U0_stream_out_TLAST);
    connect_0_V_V_U = new fifo_w16_d1000_A("connect_0_V_V_U");
    connect_0_V_V_U->clk(ap_clk);
    connect_0_V_V_U->reset(ap_rst_n_inv);
    connect_0_V_V_U->if_read_ce(ap_var_for_const0);
    connect_0_V_V_U->if_write_ce(ap_var_for_const0);
    connect_0_V_V_U->if_din(AXI_DMA_SLAVE_U0_stream_out_V_V_din);
    connect_0_V_V_U->if_full_n(connect_0_V_V_full_n);
    connect_0_V_V_U->if_write(AXI_DMA_SLAVE_U0_stream_out_V_V_write);
    connect_0_V_V_U->if_dout(connect_0_V_V_dout);
    connect_0_V_V_U->if_empty_n(connect_0_V_V_empty_n);
    connect_0_V_V_U->if_read(Conv_1_28_16_3_U0_stream_in_V_V_read);
    connect_1_V_V_U = new fifo_w16_d12000_A("connect_1_V_V_U");
    connect_1_V_V_U->clk(ap_clk);
    connect_1_V_V_U->reset(ap_rst_n_inv);
    connect_1_V_V_U->if_read_ce(ap_var_for_const0);
    connect_1_V_V_U->if_write_ce(ap_var_for_const0);
    connect_1_V_V_U->if_din(Conv_1_28_16_3_U0_stream_out_V_V_din);
    connect_1_V_V_U->if_full_n(connect_1_V_V_full_n);
    connect_1_V_V_U->if_write(Conv_1_28_16_3_U0_stream_out_V_V_write);
    connect_1_V_V_U->if_dout(connect_1_V_V_dout);
    connect_1_V_V_U->if_empty_n(connect_1_V_V_empty_n);
    connect_1_V_V_U->if_read(Conv_16_26_32_3_U0_stream_in_V_V_read);
    connect_2_V_V_U = new fifo_w16_d20000_A("connect_2_V_V_U");
    connect_2_V_V_U->clk(ap_clk);
    connect_2_V_V_U->reset(ap_rst_n_inv);
    connect_2_V_V_U->if_read_ce(ap_var_for_const0);
    connect_2_V_V_U->if_write_ce(ap_var_for_const0);
    connect_2_V_V_U->if_din(Conv_16_26_32_3_U0_stream_out_V_V_din);
    connect_2_V_V_U->if_full_n(connect_2_V_V_full_n);
    connect_2_V_V_U->if_write(Conv_16_26_32_3_U0_stream_out_V_V_write);
    connect_2_V_V_U->if_dout(connect_2_V_V_dout);
    connect_2_V_V_U->if_empty_n(connect_2_V_V_empty_n);
    connect_2_V_V_U->if_read(Pool_32_24_4_U0_stream_in_V_V_read);
    connect_3_V_V_U = new fifo_w16_d1500_A("connect_3_V_V_U");
    connect_3_V_V_U->clk(ap_clk);
    connect_3_V_V_U->reset(ap_rst_n_inv);
    connect_3_V_V_U->if_read_ce(ap_var_for_const0);
    connect_3_V_V_U->if_write_ce(ap_var_for_const0);
    connect_3_V_V_U->if_din(Pool_32_24_4_U0_stream_out_V_V_din);
    connect_3_V_V_U->if_full_n(connect_3_V_V_full_n);
    connect_3_V_V_U->if_write(Pool_32_24_4_U0_stream_out_V_V_write);
    connect_3_V_V_U->if_dout(connect_3_V_V_dout);
    connect_3_V_V_U->if_empty_n(connect_3_V_V_empty_n);
    connect_3_V_V_U->if_read(FC_1152_128_U0_stream_in_V_V_read);
    connect_4_V_V_U = new fifo_w16_d500_A("connect_4_V_V_U");
    connect_4_V_V_U->clk(ap_clk);
    connect_4_V_V_U->reset(ap_rst_n_inv);
    connect_4_V_V_U->if_read_ce(ap_var_for_const0);
    connect_4_V_V_U->if_write_ce(ap_var_for_const0);
    connect_4_V_V_U->if_din(FC_1152_128_U0_stream_out_V_V_din);
    connect_4_V_V_U->if_full_n(connect_4_V_V_full_n);
    connect_4_V_V_U->if_write(FC_1152_128_U0_stream_out_V_V_write);
    connect_4_V_V_U->if_dout(connect_4_V_V_dout);
    connect_4_V_V_U->if_empty_n(connect_4_V_V_empty_n);
    connect_4_V_V_U->if_read(FC_128_10_U0_stream_in_V_V_read);
    connect_5_V_V_U = new fifo_w16_d100_A("connect_5_V_V_U");
    connect_5_V_V_U->clk(ap_clk);
    connect_5_V_V_U->reset(ap_rst_n_inv);
    connect_5_V_V_U->if_read_ce(ap_var_for_const0);
    connect_5_V_V_U->if_write_ce(ap_var_for_const0);
    connect_5_V_V_U->if_din(FC_128_10_U0_stream_out_V_V_din);
    connect_5_V_V_U->if_full_n(connect_5_V_V_full_n);
    connect_5_V_V_U->if_write(FC_128_10_U0_stream_out_V_V_write);
    connect_5_V_V_U->if_dout(connect_5_V_V_dout);
    connect_5_V_V_U->if_empty_n(connect_5_V_V_empty_n);
    connect_5_V_V_U->if_read(AXI_DMA_MASTER_U0_stream_in_V_V_read);
    start_for_Conv_1_dUL_U = new start_for_Conv_1_dUL("start_for_Conv_1_dUL_U");
    start_for_Conv_1_dUL_U->clk(ap_clk);
    start_for_Conv_1_dUL_U->reset(ap_rst_n_inv);
    start_for_Conv_1_dUL_U->if_read_ce(ap_var_for_const0);
    start_for_Conv_1_dUL_U->if_write_ce(ap_var_for_const0);
    start_for_Conv_1_dUL_U->if_din(start_for_Conv_1_28_16_3_U0_din);
    start_for_Conv_1_dUL_U->if_full_n(start_for_Conv_1_28_16_3_U0_full_n);
    start_for_Conv_1_dUL_U->if_write(AXI_DMA_SLAVE_U0_start_write);
    start_for_Conv_1_dUL_U->if_dout(start_for_Conv_1_28_16_3_U0_dout);
    start_for_Conv_1_dUL_U->if_empty_n(start_for_Conv_1_28_16_3_U0_empty_n);
    start_for_Conv_1_dUL_U->if_read(Conv_1_28_16_3_U0_ap_ready);
    start_for_Conv_16dVL_U = new start_for_Conv_16dVL("start_for_Conv_16dVL_U");
    start_for_Conv_16dVL_U->clk(ap_clk);
    start_for_Conv_16dVL_U->reset(ap_rst_n_inv);
    start_for_Conv_16dVL_U->if_read_ce(ap_var_for_const0);
    start_for_Conv_16dVL_U->if_write_ce(ap_var_for_const0);
    start_for_Conv_16dVL_U->if_din(start_for_Conv_16_26_32_3_U0_din);
    start_for_Conv_16dVL_U->if_full_n(start_for_Conv_16_26_32_3_U0_full_n);
    start_for_Conv_16dVL_U->if_write(Conv_1_28_16_3_U0_start_write);
    start_for_Conv_16dVL_U->if_dout(start_for_Conv_16_26_32_3_U0_dout);
    start_for_Conv_16dVL_U->if_empty_n(start_for_Conv_16_26_32_3_U0_empty_n);
    start_for_Conv_16dVL_U->if_read(Conv_16_26_32_3_U0_ap_ready);
    start_for_Pool_32dWL_U = new start_for_Pool_32dWL("start_for_Pool_32dWL_U");
    start_for_Pool_32dWL_U->clk(ap_clk);
    start_for_Pool_32dWL_U->reset(ap_rst_n_inv);
    start_for_Pool_32dWL_U->if_read_ce(ap_var_for_const0);
    start_for_Pool_32dWL_U->if_write_ce(ap_var_for_const0);
    start_for_Pool_32dWL_U->if_din(start_for_Pool_32_24_4_U0_din);
    start_for_Pool_32dWL_U->if_full_n(start_for_Pool_32_24_4_U0_full_n);
    start_for_Pool_32dWL_U->if_write(Conv_16_26_32_3_U0_start_write);
    start_for_Pool_32dWL_U->if_dout(start_for_Pool_32_24_4_U0_dout);
    start_for_Pool_32dWL_U->if_empty_n(start_for_Pool_32_24_4_U0_empty_n);
    start_for_Pool_32dWL_U->if_read(Pool_32_24_4_U0_ap_ready);
    start_for_FC_1152dXL_U = new start_for_FC_1152dXL("start_for_FC_1152dXL_U");
    start_for_FC_1152dXL_U->clk(ap_clk);
    start_for_FC_1152dXL_U->reset(ap_rst_n_inv);
    start_for_FC_1152dXL_U->if_read_ce(ap_var_for_const0);
    start_for_FC_1152dXL_U->if_write_ce(ap_var_for_const0);
    start_for_FC_1152dXL_U->if_din(start_for_FC_1152_128_U0_din);
    start_for_FC_1152dXL_U->if_full_n(start_for_FC_1152_128_U0_full_n);
    start_for_FC_1152dXL_U->if_write(Pool_32_24_4_U0_start_write);
    start_for_FC_1152dXL_U->if_dout(start_for_FC_1152_128_U0_dout);
    start_for_FC_1152dXL_U->if_empty_n(start_for_FC_1152_128_U0_empty_n);
    start_for_FC_1152dXL_U->if_read(FC_1152_128_U0_ap_ready);
    start_for_FC_128_dYM_U = new start_for_FC_128_dYM("start_for_FC_128_dYM_U");
    start_for_FC_128_dYM_U->clk(ap_clk);
    start_for_FC_128_dYM_U->reset(ap_rst_n_inv);
    start_for_FC_128_dYM_U->if_read_ce(ap_var_for_const0);
    start_for_FC_128_dYM_U->if_write_ce(ap_var_for_const0);
    start_for_FC_128_dYM_U->if_din(start_for_FC_128_10_U0_din);
    start_for_FC_128_dYM_U->if_full_n(start_for_FC_128_10_U0_full_n);
    start_for_FC_128_dYM_U->if_write(FC_1152_128_U0_start_write);
    start_for_FC_128_dYM_U->if_dout(start_for_FC_128_10_U0_dout);
    start_for_FC_128_dYM_U->if_empty_n(start_for_FC_128_10_U0_empty_n);
    start_for_FC_128_dYM_U->if_read(FC_128_10_U0_ap_ready);
    start_for_AXI_DMAdZM_U = new start_for_AXI_DMAdZM("start_for_AXI_DMAdZM_U");
    start_for_AXI_DMAdZM_U->clk(ap_clk);
    start_for_AXI_DMAdZM_U->reset(ap_rst_n_inv);
    start_for_AXI_DMAdZM_U->if_read_ce(ap_var_for_const0);
    start_for_AXI_DMAdZM_U->if_write_ce(ap_var_for_const0);
    start_for_AXI_DMAdZM_U->if_din(start_for_AXI_DMA_MASTER_U0_din);
    start_for_AXI_DMAdZM_U->if_full_n(start_for_AXI_DMA_MASTER_U0_full_n);
    start_for_AXI_DMAdZM_U->if_write(FC_128_10_U0_start_write);
    start_for_AXI_DMAdZM_U->if_dout(start_for_AXI_DMA_MASTER_U0_dout);
    start_for_AXI_DMAdZM_U->if_empty_n(start_for_AXI_DMA_MASTER_U0_empty_n);
    start_for_AXI_DMAdZM_U->if_read(AXI_DMA_MASTER_U0_ap_ready);

    SC_METHOD(thread_AXI_DMA_MASTER_U0_ap_continue);

    SC_METHOD(thread_AXI_DMA_MASTER_U0_ap_start);
    sensitive << ( start_for_AXI_DMA_MASTER_U0_empty_n );

    SC_METHOD(thread_AXI_DMA_MASTER_U0_start_full_n);

    SC_METHOD(thread_AXI_DMA_MASTER_U0_start_write);

    SC_METHOD(thread_AXI_DMA_SLAVE_U0_ap_continue);

    SC_METHOD(thread_AXI_DMA_SLAVE_U0_ap_start);

    SC_METHOD(thread_Conv_16_26_32_3_U0_ap_continue);

    SC_METHOD(thread_Conv_16_26_32_3_U0_ap_start);
    sensitive << ( start_for_Conv_16_26_32_3_U0_empty_n );

    SC_METHOD(thread_Conv_1_28_16_3_U0_ap_continue);

    SC_METHOD(thread_Conv_1_28_16_3_U0_ap_start);
    sensitive << ( start_for_Conv_1_28_16_3_U0_empty_n );

    SC_METHOD(thread_FC_1152_128_U0_ap_continue);

    SC_METHOD(thread_FC_1152_128_U0_ap_start);
    sensitive << ( start_for_FC_1152_128_U0_empty_n );

    SC_METHOD(thread_FC_128_10_U0_ap_continue);

    SC_METHOD(thread_FC_128_10_U0_ap_start);
    sensitive << ( start_for_FC_128_10_U0_empty_n );

    SC_METHOD(thread_Pool_32_24_4_U0_ap_continue);

    SC_METHOD(thread_Pool_32_24_4_U0_ap_start);
    sensitive << ( start_for_Pool_32_24_4_U0_empty_n );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_start_for_AXI_DMA_MASTER_U0_din);

    SC_METHOD(thread_start_for_Conv_16_26_32_3_U0_din);

    SC_METHOD(thread_start_for_Conv_1_28_16_3_U0_din);

    SC_METHOD(thread_start_for_FC_1152_128_U0_din);

    SC_METHOD(thread_start_for_FC_128_10_U0_din);

    SC_METHOD(thread_start_for_Pool_32_24_4_U0_din);

    SC_METHOD(thread_stream_in_TREADY);
    sensitive << ( AXI_DMA_SLAVE_U0_stream_in_TREADY );

    SC_METHOD(thread_stream_out_TDATA);
    sensitive << ( AXI_DMA_MASTER_U0_stream_out_TDATA );

    SC_METHOD(thread_stream_out_TLAST);
    sensitive << ( AXI_DMA_MASTER_U0_stream_out_TLAST );

    SC_METHOD(thread_stream_out_TVALID);
    sensitive << ( AXI_DMA_MASTER_U0_stream_out_TVALID );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cnn_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, stream_in_TDATA, "(port)stream_in_TDATA");
    sc_trace(mVcdFile, stream_in_TLAST, "(port)stream_in_TLAST");
    sc_trace(mVcdFile, stream_out_TDATA, "(port)stream_out_TDATA");
    sc_trace(mVcdFile, stream_out_TLAST, "(port)stream_out_TLAST");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, stream_in_TVALID, "(port)stream_in_TVALID");
    sc_trace(mVcdFile, stream_in_TREADY, "(port)stream_in_TREADY");
    sc_trace(mVcdFile, stream_out_TVALID, "(port)stream_out_TVALID");
    sc_trace(mVcdFile, stream_out_TREADY, "(port)stream_out_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, AXI_DMA_SLAVE_U0_ap_start, "AXI_DMA_SLAVE_U0_ap_start");
    sc_trace(mVcdFile, AXI_DMA_SLAVE_U0_ap_done, "AXI_DMA_SLAVE_U0_ap_done");
    sc_trace(mVcdFile, AXI_DMA_SLAVE_U0_ap_continue, "AXI_DMA_SLAVE_U0_ap_continue");
    sc_trace(mVcdFile, AXI_DMA_SLAVE_U0_ap_idle, "AXI_DMA_SLAVE_U0_ap_idle");
    sc_trace(mVcdFile, AXI_DMA_SLAVE_U0_ap_ready, "AXI_DMA_SLAVE_U0_ap_ready");
    sc_trace(mVcdFile, AXI_DMA_SLAVE_U0_start_out, "AXI_DMA_SLAVE_U0_start_out");
    sc_trace(mVcdFile, AXI_DMA_SLAVE_U0_start_write, "AXI_DMA_SLAVE_U0_start_write");
    sc_trace(mVcdFile, AXI_DMA_SLAVE_U0_stream_in_TREADY, "AXI_DMA_SLAVE_U0_stream_in_TREADY");
    sc_trace(mVcdFile, AXI_DMA_SLAVE_U0_stream_out_V_V_din, "AXI_DMA_SLAVE_U0_stream_out_V_V_din");
    sc_trace(mVcdFile, AXI_DMA_SLAVE_U0_stream_out_V_V_write, "AXI_DMA_SLAVE_U0_stream_out_V_V_write");
    sc_trace(mVcdFile, Conv_1_28_16_3_U0_ap_start, "Conv_1_28_16_3_U0_ap_start");
    sc_trace(mVcdFile, Conv_1_28_16_3_U0_ap_done, "Conv_1_28_16_3_U0_ap_done");
    sc_trace(mVcdFile, Conv_1_28_16_3_U0_ap_continue, "Conv_1_28_16_3_U0_ap_continue");
    sc_trace(mVcdFile, Conv_1_28_16_3_U0_ap_idle, "Conv_1_28_16_3_U0_ap_idle");
    sc_trace(mVcdFile, Conv_1_28_16_3_U0_ap_ready, "Conv_1_28_16_3_U0_ap_ready");
    sc_trace(mVcdFile, Conv_1_28_16_3_U0_start_out, "Conv_1_28_16_3_U0_start_out");
    sc_trace(mVcdFile, Conv_1_28_16_3_U0_start_write, "Conv_1_28_16_3_U0_start_write");
    sc_trace(mVcdFile, Conv_1_28_16_3_U0_stream_in_V_V_read, "Conv_1_28_16_3_U0_stream_in_V_V_read");
    sc_trace(mVcdFile, Conv_1_28_16_3_U0_stream_out_V_V_din, "Conv_1_28_16_3_U0_stream_out_V_V_din");
    sc_trace(mVcdFile, Conv_1_28_16_3_U0_stream_out_V_V_write, "Conv_1_28_16_3_U0_stream_out_V_V_write");
    sc_trace(mVcdFile, Conv_16_26_32_3_U0_ap_start, "Conv_16_26_32_3_U0_ap_start");
    sc_trace(mVcdFile, Conv_16_26_32_3_U0_ap_done, "Conv_16_26_32_3_U0_ap_done");
    sc_trace(mVcdFile, Conv_16_26_32_3_U0_ap_continue, "Conv_16_26_32_3_U0_ap_continue");
    sc_trace(mVcdFile, Conv_16_26_32_3_U0_ap_idle, "Conv_16_26_32_3_U0_ap_idle");
    sc_trace(mVcdFile, Conv_16_26_32_3_U0_ap_ready, "Conv_16_26_32_3_U0_ap_ready");
    sc_trace(mVcdFile, Conv_16_26_32_3_U0_start_out, "Conv_16_26_32_3_U0_start_out");
    sc_trace(mVcdFile, Conv_16_26_32_3_U0_start_write, "Conv_16_26_32_3_U0_start_write");
    sc_trace(mVcdFile, Conv_16_26_32_3_U0_stream_in_V_V_read, "Conv_16_26_32_3_U0_stream_in_V_V_read");
    sc_trace(mVcdFile, Conv_16_26_32_3_U0_stream_out_V_V_din, "Conv_16_26_32_3_U0_stream_out_V_V_din");
    sc_trace(mVcdFile, Conv_16_26_32_3_U0_stream_out_V_V_write, "Conv_16_26_32_3_U0_stream_out_V_V_write");
    sc_trace(mVcdFile, Pool_32_24_4_U0_ap_start, "Pool_32_24_4_U0_ap_start");
    sc_trace(mVcdFile, Pool_32_24_4_U0_ap_done, "Pool_32_24_4_U0_ap_done");
    sc_trace(mVcdFile, Pool_32_24_4_U0_ap_continue, "Pool_32_24_4_U0_ap_continue");
    sc_trace(mVcdFile, Pool_32_24_4_U0_ap_idle, "Pool_32_24_4_U0_ap_idle");
    sc_trace(mVcdFile, Pool_32_24_4_U0_ap_ready, "Pool_32_24_4_U0_ap_ready");
    sc_trace(mVcdFile, Pool_32_24_4_U0_start_out, "Pool_32_24_4_U0_start_out");
    sc_trace(mVcdFile, Pool_32_24_4_U0_start_write, "Pool_32_24_4_U0_start_write");
    sc_trace(mVcdFile, Pool_32_24_4_U0_stream_in_V_V_read, "Pool_32_24_4_U0_stream_in_V_V_read");
    sc_trace(mVcdFile, Pool_32_24_4_U0_stream_out_V_V_din, "Pool_32_24_4_U0_stream_out_V_V_din");
    sc_trace(mVcdFile, Pool_32_24_4_U0_stream_out_V_V_write, "Pool_32_24_4_U0_stream_out_V_V_write");
    sc_trace(mVcdFile, FC_1152_128_U0_ap_start, "FC_1152_128_U0_ap_start");
    sc_trace(mVcdFile, FC_1152_128_U0_ap_done, "FC_1152_128_U0_ap_done");
    sc_trace(mVcdFile, FC_1152_128_U0_ap_continue, "FC_1152_128_U0_ap_continue");
    sc_trace(mVcdFile, FC_1152_128_U0_ap_idle, "FC_1152_128_U0_ap_idle");
    sc_trace(mVcdFile, FC_1152_128_U0_ap_ready, "FC_1152_128_U0_ap_ready");
    sc_trace(mVcdFile, FC_1152_128_U0_start_out, "FC_1152_128_U0_start_out");
    sc_trace(mVcdFile, FC_1152_128_U0_start_write, "FC_1152_128_U0_start_write");
    sc_trace(mVcdFile, FC_1152_128_U0_stream_in_V_V_read, "FC_1152_128_U0_stream_in_V_V_read");
    sc_trace(mVcdFile, FC_1152_128_U0_stream_out_V_V_din, "FC_1152_128_U0_stream_out_V_V_din");
    sc_trace(mVcdFile, FC_1152_128_U0_stream_out_V_V_write, "FC_1152_128_U0_stream_out_V_V_write");
    sc_trace(mVcdFile, FC_128_10_U0_ap_start, "FC_128_10_U0_ap_start");
    sc_trace(mVcdFile, FC_128_10_U0_ap_done, "FC_128_10_U0_ap_done");
    sc_trace(mVcdFile, FC_128_10_U0_ap_continue, "FC_128_10_U0_ap_continue");
    sc_trace(mVcdFile, FC_128_10_U0_ap_idle, "FC_128_10_U0_ap_idle");
    sc_trace(mVcdFile, FC_128_10_U0_ap_ready, "FC_128_10_U0_ap_ready");
    sc_trace(mVcdFile, FC_128_10_U0_start_out, "FC_128_10_U0_start_out");
    sc_trace(mVcdFile, FC_128_10_U0_start_write, "FC_128_10_U0_start_write");
    sc_trace(mVcdFile, FC_128_10_U0_stream_in_V_V_read, "FC_128_10_U0_stream_in_V_V_read");
    sc_trace(mVcdFile, FC_128_10_U0_stream_out_V_V_din, "FC_128_10_U0_stream_out_V_V_din");
    sc_trace(mVcdFile, FC_128_10_U0_stream_out_V_V_write, "FC_128_10_U0_stream_out_V_V_write");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_ap_start, "AXI_DMA_MASTER_U0_ap_start");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_ap_done, "AXI_DMA_MASTER_U0_ap_done");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_ap_continue, "AXI_DMA_MASTER_U0_ap_continue");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_ap_idle, "AXI_DMA_MASTER_U0_ap_idle");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_ap_ready, "AXI_DMA_MASTER_U0_ap_ready");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_stream_in_V_V_read, "AXI_DMA_MASTER_U0_stream_in_V_V_read");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_stream_out_TDATA, "AXI_DMA_MASTER_U0_stream_out_TDATA");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_stream_out_TVALID, "AXI_DMA_MASTER_U0_stream_out_TVALID");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_stream_out_TLAST, "AXI_DMA_MASTER_U0_stream_out_TLAST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, connect_0_V_V_full_n, "connect_0_V_V_full_n");
    sc_trace(mVcdFile, connect_0_V_V_dout, "connect_0_V_V_dout");
    sc_trace(mVcdFile, connect_0_V_V_empty_n, "connect_0_V_V_empty_n");
    sc_trace(mVcdFile, connect_1_V_V_full_n, "connect_1_V_V_full_n");
    sc_trace(mVcdFile, connect_1_V_V_dout, "connect_1_V_V_dout");
    sc_trace(mVcdFile, connect_1_V_V_empty_n, "connect_1_V_V_empty_n");
    sc_trace(mVcdFile, connect_2_V_V_full_n, "connect_2_V_V_full_n");
    sc_trace(mVcdFile, connect_2_V_V_dout, "connect_2_V_V_dout");
    sc_trace(mVcdFile, connect_2_V_V_empty_n, "connect_2_V_V_empty_n");
    sc_trace(mVcdFile, connect_3_V_V_full_n, "connect_3_V_V_full_n");
    sc_trace(mVcdFile, connect_3_V_V_dout, "connect_3_V_V_dout");
    sc_trace(mVcdFile, connect_3_V_V_empty_n, "connect_3_V_V_empty_n");
    sc_trace(mVcdFile, connect_4_V_V_full_n, "connect_4_V_V_full_n");
    sc_trace(mVcdFile, connect_4_V_V_dout, "connect_4_V_V_dout");
    sc_trace(mVcdFile, connect_4_V_V_empty_n, "connect_4_V_V_empty_n");
    sc_trace(mVcdFile, connect_5_V_V_full_n, "connect_5_V_V_full_n");
    sc_trace(mVcdFile, connect_5_V_V_dout, "connect_5_V_V_dout");
    sc_trace(mVcdFile, connect_5_V_V_empty_n, "connect_5_V_V_empty_n");
    sc_trace(mVcdFile, start_for_Conv_1_28_16_3_U0_din, "start_for_Conv_1_28_16_3_U0_din");
    sc_trace(mVcdFile, start_for_Conv_1_28_16_3_U0_full_n, "start_for_Conv_1_28_16_3_U0_full_n");
    sc_trace(mVcdFile, start_for_Conv_1_28_16_3_U0_dout, "start_for_Conv_1_28_16_3_U0_dout");
    sc_trace(mVcdFile, start_for_Conv_1_28_16_3_U0_empty_n, "start_for_Conv_1_28_16_3_U0_empty_n");
    sc_trace(mVcdFile, start_for_Conv_16_26_32_3_U0_din, "start_for_Conv_16_26_32_3_U0_din");
    sc_trace(mVcdFile, start_for_Conv_16_26_32_3_U0_full_n, "start_for_Conv_16_26_32_3_U0_full_n");
    sc_trace(mVcdFile, start_for_Conv_16_26_32_3_U0_dout, "start_for_Conv_16_26_32_3_U0_dout");
    sc_trace(mVcdFile, start_for_Conv_16_26_32_3_U0_empty_n, "start_for_Conv_16_26_32_3_U0_empty_n");
    sc_trace(mVcdFile, start_for_Pool_32_24_4_U0_din, "start_for_Pool_32_24_4_U0_din");
    sc_trace(mVcdFile, start_for_Pool_32_24_4_U0_full_n, "start_for_Pool_32_24_4_U0_full_n");
    sc_trace(mVcdFile, start_for_Pool_32_24_4_U0_dout, "start_for_Pool_32_24_4_U0_dout");
    sc_trace(mVcdFile, start_for_Pool_32_24_4_U0_empty_n, "start_for_Pool_32_24_4_U0_empty_n");
    sc_trace(mVcdFile, start_for_FC_1152_128_U0_din, "start_for_FC_1152_128_U0_din");
    sc_trace(mVcdFile, start_for_FC_1152_128_U0_full_n, "start_for_FC_1152_128_U0_full_n");
    sc_trace(mVcdFile, start_for_FC_1152_128_U0_dout, "start_for_FC_1152_128_U0_dout");
    sc_trace(mVcdFile, start_for_FC_1152_128_U0_empty_n, "start_for_FC_1152_128_U0_empty_n");
    sc_trace(mVcdFile, start_for_FC_128_10_U0_din, "start_for_FC_128_10_U0_din");
    sc_trace(mVcdFile, start_for_FC_128_10_U0_full_n, "start_for_FC_128_10_U0_full_n");
    sc_trace(mVcdFile, start_for_FC_128_10_U0_dout, "start_for_FC_128_10_U0_dout");
    sc_trace(mVcdFile, start_for_FC_128_10_U0_empty_n, "start_for_FC_128_10_U0_empty_n");
    sc_trace(mVcdFile, start_for_AXI_DMA_MASTER_U0_din, "start_for_AXI_DMA_MASTER_U0_din");
    sc_trace(mVcdFile, start_for_AXI_DMA_MASTER_U0_full_n, "start_for_AXI_DMA_MASTER_U0_full_n");
    sc_trace(mVcdFile, start_for_AXI_DMA_MASTER_U0_dout, "start_for_AXI_DMA_MASTER_U0_dout");
    sc_trace(mVcdFile, start_for_AXI_DMA_MASTER_U0_empty_n, "start_for_AXI_DMA_MASTER_U0_empty_n");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_start_full_n, "AXI_DMA_MASTER_U0_start_full_n");
    sc_trace(mVcdFile, AXI_DMA_MASTER_U0_start_write, "AXI_DMA_MASTER_U0_start_write");
#endif

    }
    mHdltvinHandle.open("cnn.hdltvin.dat");
    mHdltvoutHandle.open("cnn.hdltvout.dat");
}

cnn::~cnn() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete AXI_DMA_SLAVE_U0;
    delete Conv_1_28_16_3_U0;
    delete Conv_16_26_32_3_U0;
    delete Pool_32_24_4_U0;
    delete FC_1152_128_U0;
    delete FC_128_10_U0;
    delete AXI_DMA_MASTER_U0;
    delete connect_0_V_V_U;
    delete connect_1_V_V_U;
    delete connect_2_V_V_U;
    delete connect_3_V_V_U;
    delete connect_4_V_V_U;
    delete connect_5_V_V_U;
    delete start_for_Conv_1_dUL_U;
    delete start_for_Conv_16dVL_U;
    delete start_for_Pool_32dWL_U;
    delete start_for_FC_1152dXL_U;
    delete start_for_FC_128_dYM_U;
    delete start_for_AXI_DMAdZM_U;
}

void cnn::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void cnn::thread_AXI_DMA_MASTER_U0_ap_continue() {
    AXI_DMA_MASTER_U0_ap_continue = ap_const_logic_1;
}

void cnn::thread_AXI_DMA_MASTER_U0_ap_start() {
    AXI_DMA_MASTER_U0_ap_start = start_for_AXI_DMA_MASTER_U0_empty_n.read();
}

void cnn::thread_AXI_DMA_MASTER_U0_start_full_n() {
    AXI_DMA_MASTER_U0_start_full_n = ap_const_logic_1;
}

void cnn::thread_AXI_DMA_MASTER_U0_start_write() {
    AXI_DMA_MASTER_U0_start_write = ap_const_logic_0;
}

void cnn::thread_AXI_DMA_SLAVE_U0_ap_continue() {
    AXI_DMA_SLAVE_U0_ap_continue = ap_const_logic_1;
}

void cnn::thread_AXI_DMA_SLAVE_U0_ap_start() {
    AXI_DMA_SLAVE_U0_ap_start = ap_const_logic_1;
}

void cnn::thread_Conv_16_26_32_3_U0_ap_continue() {
    Conv_16_26_32_3_U0_ap_continue = ap_const_logic_1;
}

void cnn::thread_Conv_16_26_32_3_U0_ap_start() {
    Conv_16_26_32_3_U0_ap_start = start_for_Conv_16_26_32_3_U0_empty_n.read();
}

void cnn::thread_Conv_1_28_16_3_U0_ap_continue() {
    Conv_1_28_16_3_U0_ap_continue = ap_const_logic_1;
}

void cnn::thread_Conv_1_28_16_3_U0_ap_start() {
    Conv_1_28_16_3_U0_ap_start = start_for_Conv_1_28_16_3_U0_empty_n.read();
}

void cnn::thread_FC_1152_128_U0_ap_continue() {
    FC_1152_128_U0_ap_continue = ap_const_logic_1;
}

void cnn::thread_FC_1152_128_U0_ap_start() {
    FC_1152_128_U0_ap_start = start_for_FC_1152_128_U0_empty_n.read();
}

void cnn::thread_FC_128_10_U0_ap_continue() {
    FC_128_10_U0_ap_continue = ap_const_logic_1;
}

void cnn::thread_FC_128_10_U0_ap_start() {
    FC_128_10_U0_ap_start = start_for_FC_128_10_U0_empty_n.read();
}

void cnn::thread_Pool_32_24_4_U0_ap_continue() {
    Pool_32_24_4_U0_ap_continue = ap_const_logic_1;
}

void cnn::thread_Pool_32_24_4_U0_ap_start() {
    Pool_32_24_4_U0_ap_start = start_for_Pool_32_24_4_U0_empty_n.read();
}

void cnn::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void cnn::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_0;
}

void cnn::thread_start_for_AXI_DMA_MASTER_U0_din() {
    start_for_AXI_DMA_MASTER_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void cnn::thread_start_for_Conv_16_26_32_3_U0_din() {
    start_for_Conv_16_26_32_3_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void cnn::thread_start_for_Conv_1_28_16_3_U0_din() {
    start_for_Conv_1_28_16_3_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void cnn::thread_start_for_FC_1152_128_U0_din() {
    start_for_FC_1152_128_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void cnn::thread_start_for_FC_128_10_U0_din() {
    start_for_FC_128_10_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void cnn::thread_start_for_Pool_32_24_4_U0_din() {
    start_for_Pool_32_24_4_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void cnn::thread_stream_in_TREADY() {
    stream_in_TREADY = AXI_DMA_SLAVE_U0_stream_in_TREADY.read();
}

void cnn::thread_stream_out_TDATA() {
    stream_out_TDATA = AXI_DMA_MASTER_U0_stream_out_TDATA.read();
}

void cnn::thread_stream_out_TLAST() {
    stream_out_TLAST = AXI_DMA_MASTER_U0_stream_out_TLAST.read();
}

void cnn::thread_stream_out_TVALID() {
    stream_out_TVALID = AXI_DMA_MASTER_U0_stream_out_TVALID.read();
}

void cnn::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"stream_in_TDATA\" :  \"" << stream_in_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_TLAST\" :  \"" << stream_in_TLAST.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"stream_out_TDATA\" :  \"" << stream_out_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_TLAST\" :  \"" << stream_out_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_in_TVALID\" :  \"" << stream_in_TVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_in_TREADY\" :  \"" << stream_in_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"stream_out_TVALID\" :  \"" << stream_out_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"stream_out_TREADY\" :  \"" << stream_out_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

