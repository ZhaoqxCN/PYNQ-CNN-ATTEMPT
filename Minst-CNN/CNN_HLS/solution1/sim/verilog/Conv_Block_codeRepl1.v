// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_Block_codeRepl1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_in_V_V_dout,
        stream_in_V_V_empty_n,
        stream_in_V_V_read,
        stream_out_V_V_din,
        stream_out_V_V_full_n,
        stream_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_pp0_stage0 = 24'd8192;
parameter    ap_ST_fsm_state16 = 24'd16384;
parameter    ap_ST_fsm_state17 = 24'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 24'd65536;
parameter    ap_ST_fsm_state25 = 24'd131072;
parameter    ap_ST_fsm_state26 = 24'd262144;
parameter    ap_ST_fsm_state27 = 24'd524288;
parameter    ap_ST_fsm_pp2_stage0 = 24'd1048576;
parameter    ap_ST_fsm_state40 = 24'd2097152;
parameter    ap_ST_fsm_pp3_stage0 = 24'd4194304;
parameter    ap_ST_fsm_state47 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] stream_in_V_V_dout;
input   stream_in_V_V_empty_n;
output   stream_in_V_V_read;
output  [7:0] stream_out_V_V_din;
input   stream_out_V_V_full_n;
output   stream_out_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_in_V_V_read;
reg[7:0] stream_out_V_V_din;
reg stream_out_V_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [12:0] B_V_1_address0;
reg    B_V_1_ce0;
wire   [7:0] B_V_1_q0;
wire   [12:0] B_V_1_address1;
reg    B_V_1_ce1;
reg    B_V_1_we1;
wire   [13:0] A_V_3_address0;
reg    A_V_3_ce0;
wire   [7:0] A_V_3_q0;
wire   [13:0] A_V_3_address1;
reg    A_V_3_ce1;
reg    A_V_3_we1;
reg    stream_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    ap_enable_reg_pp3_iter4;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond_flatten7_reg_1809;
reg   [0:0] exitcond_flatten7_reg_1809_pp3_iter3_reg;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_49_reg_1528;
reg    ap_enable_reg_pp1_iter5;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_flatten9_reg_1546;
reg   [0:0] exitcond_flatten9_reg_1546_pp1_iter4_reg;
reg    stream_out_V_V_blk_n;
wire    ap_CS_fsm_state40;
reg   [28:0] i7_reg_234;
reg   [13:0] indvar_flatten8_reg_256;
reg   [4:0] j1_reg_267;
reg   [9:0] indvar_flatten9_reg_279;
reg   [4:0] k_reg_290;
reg   [4:0] i2_reg_302;
reg   [7:0] indvar_flatten3_reg_372;
reg   [3:0] indvar_flatten4_reg_383;
reg   [4:0] j4_reg_394;
reg   [1:0] ka5_reg_405;
reg   [7:0] p_0133_2_reg_416;
reg   [1:0] kb6_reg_428;
reg   [12:0] indvar_flatten6_reg_439;
reg   [5:0] i_reg_450;
reg   [8:0] indvar_flatten7_reg_462;
reg   [4:0] j_reg_473;
reg   [3:0] indvar_flatten_reg_485;
reg  signed [2:0] ka_reg_497;
reg   [2:0] kb_reg_509;
reg   [7:0] reg_521;
reg    ap_block_state1;
wire    ap_block_state18_pp1_stage0_iter0;
wire    ap_block_state19_pp1_stage0_iter1;
wire    ap_block_state20_pp1_stage0_iter2;
wire    ap_block_state21_pp1_stage0_iter3;
wire    ap_block_state22_pp1_stage0_iter4;
reg    ap_block_state23_pp1_stage0_iter5;
wire    ap_block_state24_pp1_stage0_iter6;
reg    ap_block_pp1_stage0_11001;
wire    ap_block_state41_pp3_stage0_iter0;
wire    ap_block_state42_pp3_stage0_iter1;
wire    ap_block_state43_pp3_stage0_iter2;
wire    ap_block_state44_pp3_stage0_iter3;
reg    ap_block_state45_pp3_stage0_iter4;
wire    ap_block_state46_pp3_stage0_iter5;
reg    ap_block_pp3_stage0_11001;
reg   [7:0] tmp_V_77_reg_1464;
reg    ap_block_state2;
reg  signed [7:0] tmp_V_79_reg_1469;
reg    ap_block_state3;
reg  signed [7:0] tmp_V_81_reg_1475;
reg    ap_block_state4;
reg  signed [7:0] tmp_V_85_reg_1480;
reg    ap_block_state6;
wire   [0:0] tmp_s_fu_527_p2;
reg    ap_block_state7;
wire   [0:0] tmp_45_fu_533_p2;
wire   [15:0] r_V_fu_545_p2;
reg  signed [15:0] r_V_reg_1493;
wire    ap_CS_fsm_state8;
wire  signed [23:0] grp_fu_1434_p2;
reg  signed [23:0] r_V_5_reg_1508;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire  signed [29:0] grp_fu_1440_p2;
reg  signed [29:0] r_V_s_reg_1523;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_49_fu_567_p2;
wire    ap_block_state14_pp0_stage0_iter0;
reg    ap_block_state15_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [28:0] i_s_fu_572_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_48_fu_582_p2;
wire    ap_CS_fsm_state17;
wire   [6:0] num_img_4_fu_587_p2;
reg   [6:0] num_img_4_reg_1541;
wire   [0:0] exitcond_flatten9_fu_593_p2;
wire    ap_CS_fsm_pp1_stage0;
reg   [0:0] exitcond_flatten9_reg_1546_pp1_iter1_reg;
reg   [0:0] exitcond_flatten9_reg_1546_pp1_iter2_reg;
reg   [0:0] exitcond_flatten9_reg_1546_pp1_iter3_reg;
reg   [0:0] exitcond_flatten9_reg_1546_pp1_iter5_reg;
wire   [13:0] indvar_flatten_next9_fu_599_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten5_fu_605_p2;
reg   [0:0] exitcond_flatten5_reg_1555;
reg   [0:0] exitcond_flatten5_reg_1555_pp1_iter1_reg;
wire   [9:0] indvar_flatten_next8_fu_617_p3;
wire   [0:0] exitcond8_mid_fu_636_p2;
reg   [0:0] exitcond8_mid_reg_1568;
wire   [4:0] i2_mid2_fu_647_p3;
reg   [4:0] i2_mid2_reg_1573;
wire   [4:0] i_2_fu_655_p2;
reg   [4:0] i_2_reg_1578;
reg    ap_enable_reg_pp1_iter1;
wire   [4:0] tmp_52_mid2_v_fu_674_p3;
reg   [4:0] tmp_52_mid2_v_reg_1583;
reg    ap_enable_reg_pp1_iter2;
wire   [4:0] tmp_55_mid2_fu_687_p3;
reg   [4:0] tmp_55_mid2_reg_1589;
reg   [4:0] tmp_55_mid2_reg_1589_pp1_iter3_reg;
reg   [4:0] tmp_55_mid2_reg_1589_pp1_iter4_reg;
wire   [9:0] tmp_118_fu_697_p2;
reg   [9:0] tmp_118_reg_1595;
wire   [14:0] grp_fu_1446_p4;
reg   [14:0] tmp_121_reg_1600;
wire   [14:0] indvar_flatten_next1_1_fu_719_p2;
reg   [14:0] indvar_flatten_next1_1_reg_1608;
wire    ap_CS_fsm_state26;
wire   [0:0] exitcond_flatten8_fu_725_p2;
reg   [0:0] exitcond_flatten8_reg_1613;
wire   [0:0] exitcond_flatten6_fu_713_p2;
wire   [4:0] ib_mid_fu_731_p3;
reg   [4:0] ib_mid_reg_1621;
wire   [0:0] exitcond8_fu_739_p2;
reg   [0:0] exitcond8_reg_1627;
wire   [4:0] ia_mid2_fu_761_p3;
reg   [4:0] ia_mid2_reg_1632;
wire    ap_CS_fsm_state27;
wire   [5:0] i3_mid2_fu_778_p3;
reg   [5:0] i3_mid2_reg_1638;
wire   [4:0] ib_mid2_fu_786_p3;
reg   [4:0] ib_mid2_reg_1643;
wire   [10:0] tmp_128_cast_fu_801_p1;
reg   [10:0] tmp_128_cast_reg_1649;
wire   [0:0] exitcond_flatten10_fu_805_p2;
reg   [0:0] exitcond_flatten10_reg_1654;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state28_pp2_stage0_iter0;
wire    ap_block_state29_pp2_stage0_iter1;
wire    ap_block_state30_pp2_stage0_iter2;
wire    ap_block_state31_pp2_stage0_iter3;
wire    ap_block_state32_pp2_stage0_iter4;
wire    ap_block_state33_pp2_stage0_iter5;
wire    ap_block_state34_pp2_stage0_iter6;
wire    ap_block_state35_pp2_stage0_iter7;
wire    ap_block_state36_pp2_stage0_iter8;
wire    ap_block_state37_pp2_stage0_iter9;
wire    ap_block_state38_pp2_stage0_iter10;
wire    ap_block_state39_pp2_stage0_iter11;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond_flatten10_reg_1654_pp2_iter1_reg;
reg   [0:0] exitcond_flatten10_reg_1654_pp2_iter2_reg;
reg   [0:0] exitcond_flatten10_reg_1654_pp2_iter3_reg;
reg   [0:0] exitcond_flatten10_reg_1654_pp2_iter4_reg;
reg   [0:0] exitcond_flatten10_reg_1654_pp2_iter5_reg;
reg   [0:0] exitcond_flatten10_reg_1654_pp2_iter6_reg;
reg   [0:0] exitcond_flatten10_reg_1654_pp2_iter7_reg;
reg   [0:0] exitcond_flatten10_reg_1654_pp2_iter8_reg;
reg   [0:0] exitcond_flatten10_reg_1654_pp2_iter9_reg;
reg   [0:0] exitcond_flatten10_reg_1654_pp2_iter10_reg;
wire   [7:0] indvar_flatten_next1_3_fu_811_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] exitcond_flatten11_fu_817_p2;
reg   [0:0] exitcond_flatten11_reg_1663;
reg   [0:0] exitcond_flatten11_reg_1663_pp2_iter1_reg;
wire   [3:0] indvar_flatten_next1_2_fu_829_p3;
wire   [2:0] tmp1_fu_841_p2;
reg   [2:0] tmp1_reg_1677;
wire   [4:0] tmp_62_mid2_v_fu_860_p3;
reg   [4:0] tmp_62_mid2_v_reg_1682;
reg    ap_enable_reg_pp2_iter1;
wire   [0:0] exitcond_mid_fu_878_p2;
reg   [0:0] exitcond_mid_reg_1689;
wire   [1:0] ka_2_fu_884_p2;
reg   [1:0] ka_2_reg_1694;
wire   [1:0] kb6_mid2_fu_895_p3;
reg   [1:0] kb6_mid2_reg_1699;
reg   [1:0] kb6_mid2_reg_1699_pp2_iter2_reg;
reg   [1:0] kb6_mid2_reg_1699_pp2_iter3_reg;
wire   [1:0] tmp_65_mid2_fu_903_p3;
reg   [1:0] tmp_65_mid2_reg_1705;
reg   [1:0] tmp_65_mid2_reg_1705_pp2_iter2_reg;
wire   [1:0] kb_2_fu_911_p2;
wire   [9:0] tmp_127_fu_923_p2;
reg   [9:0] tmp_127_reg_1716;
wire   [10:0] tmp_128_fu_929_p2;
reg   [10:0] tmp_128_reg_1721;
wire   [4:0] tmp_64_mid2_v_fu_960_p2;
reg   [4:0] tmp_64_mid2_v_reg_1727;
wire   [13:0] tmp_135_fu_997_p1;
reg   [13:0] tmp_135_reg_1732;
wire   [11:0] tmp_136_fu_1001_p1;
reg   [11:0] tmp_136_reg_1737;
wire   [4:0] tmp_63_fu_1030_p2;
reg   [4:0] tmp_63_reg_1742;
wire   [13:0] tmp_139_fu_1038_p2;
reg   [13:0] tmp_139_reg_1747;
wire   [14:0] grp_fu_1455_p4;
reg   [14:0] tmp_138_reg_1752;
reg    ap_enable_reg_pp2_iter5;
reg   [7:0] B_V_1_load_reg_1767;
reg    ap_enable_reg_pp2_iter6;
reg   [7:0] B_V_1_load_reg_1767_pp2_iter7_reg;
reg   [7:0] A_V_3_load_reg_1772;
reg    ap_enable_reg_pp2_iter7;
wire   [15:0] r_V_2_fu_1061_p2;
reg   [15:0] r_V_2_reg_1777;
reg   [15:0] r_V_2_reg_1777_pp2_iter9_reg;
reg   [15:0] r_V_2_reg_1777_pp2_iter10_reg;
reg   [7:0] tmp_67_reg_1784;
wire   [7:0] tmp_69_fu_1086_p2;
reg   [7:0] tmp_69_reg_1789;
wire   [7:0] sum_V_fu_1114_p2;
reg    ap_enable_reg_pp2_iter11;
wire   [5:0] i_3_fu_1145_p2;
wire   [10:0] indvar_flatten_next1_fu_1156_p3;
wire   [0:0] exitcond_flatten7_fu_1163_p2;
wire    ap_CS_fsm_pp3_stage0;
reg   [0:0] exitcond_flatten7_reg_1809_pp3_iter1_reg;
reg   [0:0] exitcond_flatten7_reg_1809_pp3_iter2_reg;
reg   [0:0] exitcond_flatten7_reg_1809_pp3_iter4_reg;
wire   [12:0] indvar_flatten_next7_fu_1169_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [0:0] exitcond_flatten_fu_1175_p2;
reg   [0:0] exitcond_flatten_reg_1818;
reg   [0:0] exitcond_flatten_reg_1818_pp3_iter1_reg;
wire   [8:0] indvar_flatten_next6_fu_1187_p3;
wire   [5:0] tmp_46_mid2_v_fu_1208_p3;
reg   [5:0] tmp_46_mid2_v_reg_1832;
reg    ap_enable_reg_pp3_iter1;
wire   [0:0] exitcond_flatten_mid_fu_1226_p2;
reg   [0:0] exitcond_flatten_mid_reg_1838;
wire   [0:0] tmp_104_fu_1238_p2;
reg   [0:0] tmp_104_reg_1843;
reg   [0:0] tmp_104_reg_1843_pp3_iter2_reg;
wire   [4:0] tmp_50_mid2_fu_1243_p3;
reg   [4:0] tmp_50_mid2_reg_1850;
wire   [3:0] indvar_flatten_next_fu_1257_p3;
reg   [3:0] indvar_flatten_next_reg_1856;
wire   [63:0] tmp_107_fu_1334_p2;
reg   [63:0] tmp_107_reg_1861;
wire   [0:0] tmp_54_mid1_fu_1340_p2;
reg   [0:0] tmp_54_mid1_reg_1866;
wire  signed [2:0] ka_1_fu_1345_p2;
reg  signed [2:0] ka_1_reg_1871;
wire  signed [2:0] kb_mid2_fu_1351_p3;
reg  signed [2:0] kb_mid2_reg_1876;
wire   [2:0] ka_mid2_fu_1359_p3;
reg   [2:0] ka_mid2_reg_1882;
reg    ap_enable_reg_pp3_iter2;
wire   [13:0] tmp_111_fu_1381_p3;
reg   [13:0] tmp_111_reg_1887;
wire   [13:0] tmp_113_fu_1400_p1;
reg   [13:0] tmp_113_reg_1892;
wire   [11:0] tmp_114_fu_1404_p1;
reg   [11:0] tmp_114_reg_1897;
wire   [2:0] kb_1_fu_1408_p2;
reg    ap_enable_reg_pp3_iter3;
wire   [13:0] tmp_116_fu_1425_p2;
reg   [13:0] tmp_116_reg_1907;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state14;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state18;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter6;
wire    ap_block_pp2_stage0_subdone;
reg    ap_enable_reg_pp2_iter2;
reg    ap_condition_pp2_exit_iter1_state29;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state41;
reg    ap_enable_reg_pp3_iter5;
reg   [6:0] num_img_reg_245;
reg   [4:0] ap_phi_mux_j1_phi_fu_271_p4;
reg   [4:0] ap_phi_mux_k_phi_fu_294_p4;
reg   [4:0] ap_phi_mux_i2_phi_fu_306_p4;
reg   [14:0] indvar_flatten1_reg_314;
wire    ap_CS_fsm_state25;
reg   [4:0] ia_reg_325;
reg   [10:0] indvar_flatten2_reg_337;
reg   [4:0] ib_reg_349;
reg   [5:0] i3_reg_360;
reg   [4:0] ap_phi_mux_j4_phi_fu_398_p4;
wire    ap_block_pp2_stage0;
reg   [1:0] ap_phi_mux_ka5_phi_fu_409_p4;
reg   [5:0] ap_phi_mux_i_phi_fu_454_p4;
reg   [4:0] ap_phi_mux_j_phi_fu_477_p4;
reg   [3:0] ap_phi_mux_indvar_flatten_phi_fu_489_p4;
reg  signed [2:0] ap_phi_mux_ka_phi_fu_501_p4;
reg   [2:0] ap_phi_mux_kb_phi_fu_513_p4;
wire  signed [63:0] tmp_125_cast_fu_709_p1;
wire   [63:0] tmp_140_cast_fu_1047_p1;
wire  signed [63:0] tmp_139_cast_fu_1051_p1;
wire   [63:0] tmp_119_cast_fu_1430_p1;
reg    ap_block_state5;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] tmp_V_94_fu_1140_p1;
reg    ap_block_pp3_stage0_01001;
wire  signed [7:0] r_V_fu_545_p0;
wire  signed [7:0] r_V_fu_545_p1;
wire   [29:0] i7_cast_fu_563_p1;
wire   [7:0] num_img_cast_fu_578_p1;
wire   [9:0] indvar_flatten48_op_fu_611_p2;
wire   [0:0] exitcond_fu_630_p2;
wire   [0:0] not_exitcond_flatten_5_fu_625_p2;
wire   [0:0] tmp_117_fu_642_p2;
wire   [4:0] j_5_fu_661_p2;
wire   [4:0] k_mid_fu_667_p3;
wire   [4:0] k_3_fu_681_p2;
wire   [4:0] tmp_118_fu_697_p0;
wire   [0:0] not_exitcond_flatten_4_fu_751_p2;
wire   [4:0] ia_2_fu_745_p2;
wire   [0:0] exitcond9_mid_fu_756_p2;
wire   [0:0] tmp_122_fu_773_p2;
wire   [4:0] ib_2_fu_768_p2;
wire   [9:0] tmp_123_fu_793_p3;
wire   [3:0] indvar_flatten69_op_fu_823_p2;
wire   [2:0] ka5_cast_cast_fu_837_p1;
wire   [4:0] j_6_fu_847_p2;
wire   [0:0] exitcond9_fu_872_p2;
wire   [0:0] not_exitcond_flatten_6_fu_867_p2;
wire   [1:0] ka5_mid_fu_853_p3;
wire   [0:0] tmp_131_fu_890_p2;
wire   [4:0] tmp_127_fu_923_p1;
wire   [10:0] tmp_62_mid2_cast_fu_917_p1;
wire   [2:0] ka5_cast_cast_mid1_fu_940_p1;
wire   [2:0] tmp1_mid1_fu_943_p2;
wire   [2:0] tmp_64_mid290_v_v_fu_934_p3;
wire   [2:0] tmp_64_mid2_v_v_fu_949_p3;
wire  signed [4:0] tmp_64_mid2_v_v_cast_fu_956_p1;
wire   [12:0] tmp_129_fu_968_p3;
wire   [63:0] p_shl1_fu_975_p1;
wire   [63:0] tmp_130_cast_fu_965_p1;
wire   [63:0] tmp_65_mid2_cast_fu_988_p1;
wire   [63:0] tmp_130_fu_979_p2;
wire   [63:0] tmp_134_fu_991_p2;
wire   [13:0] p_shl21_cast_fu_1005_p3;
wire   [2:0] kb6_cast9_cast_fu_1017_p1;
wire   [2:0] tmp2_fu_1020_p2;
wire  signed [4:0] tmp2_cast_fu_1026_p1;
wire   [13:0] tmp_65_cast_fu_1035_p1;
wire   [13:0] tmp_137_fu_1012_p2;
wire  signed [7:0] r_V_2_fu_1061_p0;
wire  signed [7:0] r_V_2_fu_1061_p1;
wire   [16:0] tmp_93_tr5_fu_1067_p1;
wire   [16:0] p_neg_fu_1070_p2;
wire   [0:0] tmp_140_fu_1091_p3;
wire   [7:0] tmp_68_fu_1098_p4;
wire   [7:0] tmp_70_fu_1107_p3;
wire   [0:0] tmp_125_fu_1124_p3;
wire   [6:0] tmp_124_fu_1120_p1;
wire   [6:0] Outbuf_V_fu_1132_p3;
wire   [10:0] indvar_flatten102_op_fu_1150_p2;
wire   [8:0] indvar_flatten15_op_fu_1181_p2;
wire   [5:0] i_8_fu_1195_p2;
wire   [0:0] exitcond_flatten4_fu_1220_p2;
wire   [0:0] not_exitcond_flatten_fu_1215_p2;
wire   [4:0] j_mid_fu_1201_p3;
wire   [4:0] j_4_fu_1232_p2;
wire   [3:0] indvar_flatten_op_fu_1251_p2;
wire   [9:0] tmp_102_fu_1265_p3;
wire   [0:0] tmp_103_fu_1276_p3;
wire   [0:0] rev_fu_1284_p2;
wire   [10:0] tmp_50_mid2_cast_fu_1309_p1;
wire   [10:0] tmp_109_cast_fu_1272_p1;
wire   [10:0] tmp_105_fu_1312_p2;
wire   [12:0] tmp_106_fu_1322_p3;
wire   [63:0] p_shl_fu_1330_p1;
wire   [63:0] tmp_112_cast_fu_1318_p1;
wire   [0:0] tmp_54_mid_fu_1290_p2;
wire   [2:0] ka_mid_fu_1295_p3;
wire   [2:0] kb_mid_fu_1302_p3;
wire  signed [13:0] tmp_108_fu_1367_p1;
wire   [13:0] tmp_109_fu_1371_p3;
wire  signed [13:0] tmp_110_fu_1378_p1;
wire  signed [31:0] kb_cast_fu_1388_p1;
wire   [63:0] tmp_57_fu_1391_p1;
wire   [63:0] tmp_112_fu_1395_p2;
wire   [13:0] p_shl_cast_fu_1413_p3;
wire   [13:0] tmp_115_fu_1420_p2;
wire   [4:0] grp_fu_1446_p0;
wire   [5:0] grp_fu_1446_p2;
wire   [4:0] grp_fu_1446_p3;
wire   [4:0] grp_fu_1455_p0;
wire   [5:0] grp_fu_1455_p2;
wire   [4:0] grp_fu_1455_p3;
reg    grp_fu_1446_ce;
wire    ap_CS_fsm_state16;
reg   [23:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [9:0] grp_fu_1446_p00;
wire   [14:0] grp_fu_1446_p30;
wire   [9:0] grp_fu_1455_p00;
wire   [14:0] grp_fu_1455_p30;
wire   [9:0] tmp_118_fu_697_p00;
wire   [9:0] tmp_127_fu_923_p10;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 24'd1;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
end

Conv_Block_codeRefYi #(
    .DataWidth( 8 ),
    .AddressRange( 4608 ),
    .AddressWidth( 13 ))
B_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_1_address0),
    .ce0(B_V_1_ce0),
    .q0(B_V_1_q0),
    .address1(B_V_1_address1),
    .ce1(B_V_1_ce1),
    .we1(B_V_1_we1),
    .d1(reg_521)
);

Conv_Block_codeReg8j #(
    .DataWidth( 8 ),
    .AddressRange( 10816 ),
    .AddressWidth( 14 ))
A_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_address0),
    .ce0(A_V_3_ce0),
    .q0(A_V_3_q0),
    .address1(A_V_3_address1),
    .ce1(A_V_3_ce1),
    .we1(A_V_3_we1),
    .d1(reg_521)
);

cnn_mul_mul_16s_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_16s_8bkb_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_V_reg_1493),
    .din1(tmp_V_79_reg_1469),
    .ce(1'b1),
    .dout(grp_fu_1434_p2)
);

cnn_mul_mul_24s_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 30 ))
cnn_mul_mul_24s_8cud_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_V_5_reg_1508),
    .din1(tmp_V_79_reg_1469),
    .ce(1'b1),
    .dout(grp_fu_1440_p2)
);

cnn_ama_addmuladdhbi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 5 ),
    .dout_WIDTH( 15 ))
cnn_ama_addmuladdhbi_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1446_p0),
    .din1(tmp_118_reg_1595),
    .din2(grp_fu_1446_p2),
    .din3(grp_fu_1446_p3),
    .ce(grp_fu_1446_ce),
    .dout(grp_fu_1446_p4)
);

cnn_ama_addmuladdhbi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 6 ),
    .din3_WIDTH( 5 ),
    .dout_WIDTH( 15 ))
cnn_ama_addmuladdhbi_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1455_p0),
    .din1(tmp_127_reg_1716),
    .din2(grp_fu_1455_p2),
    .din3(grp_fu_1455_p3),
    .ce(1'b1),
    .dout(grp_fu_1455_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state14))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state14);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state17) & (tmp_48_fu_582_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state18)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state18);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end else if (((1'b1 == ap_CS_fsm_state17) & (tmp_48_fu_582_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten10_fu_805_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp2_iter11 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter1_state29)) begin
                ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter0;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state41) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_527_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state41)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state41);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_527_p2 == 1'd1))) begin
            ap_enable_reg_pp3_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_48_fu_582_p2 == 1'd1))) begin
        i2_reg_302 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond_flatten9_reg_1546_pp1_iter1_reg == 1'd0))) begin
        i2_reg_302 <= i_2_reg_1578;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i3_reg_360 <= 6'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        i3_reg_360 <= i_3_fu_1145_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_49_fu_567_p2 == 1'd1))) begin
        i7_reg_234 <= i_s_fu_572_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i7_reg_234 <= 29'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_527_p2 == 1'd1))) begin
        i_reg_450 <= 6'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter1_reg == 1'd0))) begin
        i_reg_450 <= tmp_46_mid2_v_reg_1832;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ia_reg_325 <= 5'd1;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        ia_reg_325 <= ia_mid2_reg_1632;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ib_reg_349 <= 5'd1;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        ib_reg_349 <= ib_mid2_reg_1643;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        indvar_flatten1_reg_314 <= 15'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        indvar_flatten1_reg_314 <= indvar_flatten_next1_1_reg_1608;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        indvar_flatten2_reg_337 <= 11'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        indvar_flatten2_reg_337 <= indvar_flatten_next1_fu_1156_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten10_fu_805_p2 == 1'd0))) begin
        indvar_flatten3_reg_372 <= indvar_flatten_next1_3_fu_811_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten3_reg_372 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten10_fu_805_p2 == 1'd0))) begin
        indvar_flatten4_reg_383 <= indvar_flatten_next1_2_fu_829_p3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        indvar_flatten4_reg_383 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_527_p2 == 1'd1))) begin
        indvar_flatten6_reg_439 <= 13'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_flatten7_fu_1163_p2 == 1'd0))) begin
        indvar_flatten6_reg_439 <= indvar_flatten_next7_fu_1169_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_527_p2 == 1'd1))) begin
        indvar_flatten7_reg_462 <= 9'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_flatten7_fu_1163_p2 == 1'd0))) begin
        indvar_flatten7_reg_462 <= indvar_flatten_next6_fu_1187_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_48_fu_582_p2 == 1'd1))) begin
        indvar_flatten8_reg_256 <= 14'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten9_fu_593_p2 == 1'd0))) begin
        indvar_flatten8_reg_256 <= indvar_flatten_next9_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_48_fu_582_p2 == 1'd1))) begin
        indvar_flatten9_reg_279 <= 10'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten9_fu_593_p2 == 1'd0))) begin
        indvar_flatten9_reg_279 <= indvar_flatten_next8_fu_617_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_527_p2 == 1'd1))) begin
        indvar_flatten_reg_485 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter1_reg == 1'd0))) begin
        indvar_flatten_reg_485 <= indvar_flatten_next_reg_1856;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_48_fu_582_p2 == 1'd1))) begin
        j1_reg_267 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_flatten9_reg_1546_pp1_iter2_reg == 1'd0))) begin
        j1_reg_267 <= tmp_52_mid2_v_reg_1583;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_flatten10_reg_1654_pp2_iter1_reg == 1'd0))) begin
        j4_reg_394 <= tmp_62_mid2_v_reg_1682;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        j4_reg_394 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_527_p2 == 1'd1))) begin
        j_reg_473 <= 5'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter1_reg == 1'd0))) begin
        j_reg_473 <= tmp_50_mid2_reg_1850;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_48_fu_582_p2 == 1'd1))) begin
        k_reg_290 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_flatten9_reg_1546_pp1_iter2_reg == 1'd0))) begin
        k_reg_290 <= tmp_55_mid2_reg_1589;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_flatten10_reg_1654_pp2_iter1_reg == 1'd0))) begin
        ka5_reg_405 <= tmp_65_mid2_reg_1705;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        ka5_reg_405 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_527_p2 == 1'd1))) begin
        ka_reg_497 <= 3'd2;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter2_reg == 1'd0))) begin
        ka_reg_497 <= ka_mid2_reg_1882;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten10_reg_1654 == 1'd0))) begin
        kb6_reg_428 <= kb_2_fu_911_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        kb6_reg_428 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_527_p2 == 1'd1))) begin
        kb_reg_509 <= 3'd2;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter3 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter2_reg == 1'd0))) begin
        kb_reg_509 <= kb_1_fu_1408_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_45_fu_533_p2 == 1'd1) & (tmp_s_fu_527_p2 == 1'd0))) begin
        num_img_reg_245 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state26) & (exitcond_flatten6_fu_713_p2 == 1'd1))) begin
        num_img_reg_245 <= num_img_4_reg_1541;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1) & (exitcond_flatten10_reg_1654_pp2_iter10_reg == 1'd0))) begin
        p_0133_2_reg_416 <= sum_V_fu_1114_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        p_0133_2_reg_416 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter7 == 1'b1) & (exitcond_flatten10_reg_1654_pp2_iter6_reg == 1'd0))) begin
        A_V_3_load_reg_1772 <= A_V_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1) & (exitcond_flatten10_reg_1654_pp2_iter5_reg == 1'd0))) begin
        B_V_1_load_reg_1767 <= B_V_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        B_V_1_load_reg_1767_pp2_iter7_reg <= B_V_1_load_reg_1767;
        exitcond_flatten10_reg_1654_pp2_iter10_reg <= exitcond_flatten10_reg_1654_pp2_iter9_reg;
        exitcond_flatten10_reg_1654_pp2_iter2_reg <= exitcond_flatten10_reg_1654_pp2_iter1_reg;
        exitcond_flatten10_reg_1654_pp2_iter3_reg <= exitcond_flatten10_reg_1654_pp2_iter2_reg;
        exitcond_flatten10_reg_1654_pp2_iter4_reg <= exitcond_flatten10_reg_1654_pp2_iter3_reg;
        exitcond_flatten10_reg_1654_pp2_iter5_reg <= exitcond_flatten10_reg_1654_pp2_iter4_reg;
        exitcond_flatten10_reg_1654_pp2_iter6_reg <= exitcond_flatten10_reg_1654_pp2_iter5_reg;
        exitcond_flatten10_reg_1654_pp2_iter7_reg <= exitcond_flatten10_reg_1654_pp2_iter6_reg;
        exitcond_flatten10_reg_1654_pp2_iter8_reg <= exitcond_flatten10_reg_1654_pp2_iter7_reg;
        exitcond_flatten10_reg_1654_pp2_iter9_reg <= exitcond_flatten10_reg_1654_pp2_iter8_reg;
        kb6_mid2_reg_1699_pp2_iter2_reg <= kb6_mid2_reg_1699;
        kb6_mid2_reg_1699_pp2_iter3_reg <= kb6_mid2_reg_1699_pp2_iter2_reg;
        r_V_2_reg_1777_pp2_iter10_reg <= r_V_2_reg_1777_pp2_iter9_reg;
        r_V_2_reg_1777_pp2_iter9_reg <= r_V_2_reg_1777;
        tmp_65_mid2_reg_1705_pp2_iter2_reg <= tmp_65_mid2_reg_1705;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten9_reg_1546 == 1'd0))) begin
        exitcond8_mid_reg_1568 <= exitcond8_mid_fu_636_p2;
        i2_mid2_reg_1573 <= i2_mid2_fu_647_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state26) & (exitcond_flatten6_fu_713_p2 == 1'd0))) begin
        exitcond8_reg_1627 <= exitcond8_fu_739_p2;
        exitcond_flatten8_reg_1613 <= exitcond_flatten8_fu_725_p2;
        ib_mid_reg_1621 <= ib_mid_fu_731_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_flatten10_reg_1654 <= exitcond_flatten10_fu_805_p2;
        exitcond_flatten10_reg_1654_pp2_iter1_reg <= exitcond_flatten10_reg_1654;
        exitcond_flatten11_reg_1663_pp2_iter1_reg <= exitcond_flatten11_reg_1663;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten10_fu_805_p2 == 1'd0))) begin
        exitcond_flatten11_reg_1663 <= exitcond_flatten11_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten9_fu_593_p2 == 1'd0))) begin
        exitcond_flatten5_reg_1555 <= exitcond_flatten5_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten5_reg_1555_pp1_iter1_reg <= exitcond_flatten5_reg_1555;
        exitcond_flatten9_reg_1546 <= exitcond_flatten9_fu_593_p2;
        exitcond_flatten9_reg_1546_pp1_iter1_reg <= exitcond_flatten9_reg_1546;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond_flatten7_reg_1809 <= exitcond_flatten7_fu_1163_p2;
        exitcond_flatten7_reg_1809_pp3_iter1_reg <= exitcond_flatten7_reg_1809;
        exitcond_flatten_reg_1818_pp3_iter1_reg <= exitcond_flatten_reg_1818;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        exitcond_flatten7_reg_1809_pp3_iter2_reg <= exitcond_flatten7_reg_1809_pp3_iter1_reg;
        exitcond_flatten7_reg_1809_pp3_iter3_reg <= exitcond_flatten7_reg_1809_pp3_iter2_reg;
        exitcond_flatten7_reg_1809_pp3_iter4_reg <= exitcond_flatten7_reg_1809_pp3_iter3_reg;
        tmp_104_reg_1843_pp3_iter2_reg <= tmp_104_reg_1843;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_flatten9_reg_1546_pp1_iter2_reg <= exitcond_flatten9_reg_1546_pp1_iter1_reg;
        exitcond_flatten9_reg_1546_pp1_iter3_reg <= exitcond_flatten9_reg_1546_pp1_iter2_reg;
        exitcond_flatten9_reg_1546_pp1_iter4_reg <= exitcond_flatten9_reg_1546_pp1_iter3_reg;
        exitcond_flatten9_reg_1546_pp1_iter5_reg <= exitcond_flatten9_reg_1546_pp1_iter4_reg;
        tmp_55_mid2_reg_1589_pp1_iter3_reg <= tmp_55_mid2_reg_1589;
        tmp_55_mid2_reg_1589_pp1_iter4_reg <= tmp_55_mid2_reg_1589_pp1_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_flatten7_reg_1809 == 1'd0))) begin
        exitcond_flatten_mid_reg_1838 <= exitcond_flatten_mid_fu_1226_p2;
        tmp_104_reg_1843 <= tmp_104_fu_1238_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_flatten7_fu_1163_p2 == 1'd0))) begin
        exitcond_flatten_reg_1818 <= exitcond_flatten_fu_1175_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten10_reg_1654 == 1'd0))) begin
        exitcond_mid_reg_1689 <= exitcond_mid_fu_878_p2;
        ka_2_reg_1694 <= ka_2_fu_884_p2;
        kb6_mid2_reg_1699 <= kb6_mid2_fu_895_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        i3_mid2_reg_1638 <= i3_mid2_fu_778_p3;
        ia_mid2_reg_1632 <= ia_mid2_fu_761_p3;
        ib_mid2_reg_1643 <= ib_mid2_fu_786_p3;
        tmp_128_cast_reg_1649[9 : 4] <= tmp_128_cast_fu_801_p1[9 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten9_reg_1546 == 1'd0))) begin
        i_2_reg_1578 <= i_2_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        indvar_flatten_next1_1_reg_1608 <= indvar_flatten_next1_1_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (exitcond_flatten7_reg_1809 == 1'd0))) begin
        indvar_flatten_next_reg_1856 <= indvar_flatten_next_fu_1257_p3;
        tmp_46_mid2_v_reg_1832 <= tmp_46_mid2_v_fu_1208_p3;
        tmp_50_mid2_reg_1850 <= tmp_50_mid2_fu_1243_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten7_reg_1809_pp3_iter1_reg == 1'd0))) begin
        ka_1_reg_1871 <= ka_1_fu_1345_p2;
        kb_mid2_reg_1876 <= kb_mid2_fu_1351_p3;
        tmp_107_reg_1861 <= tmp_107_fu_1334_p2;
        tmp_54_mid1_reg_1866 <= tmp_54_mid1_fu_1340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter1_reg == 1'd0))) begin
        ka_mid2_reg_1882 <= ka_mid2_fu_1359_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        num_img_4_reg_1541 <= num_img_4_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten10_reg_1654_pp2_iter7_reg == 1'd0))) begin
        r_V_2_reg_1777 <= r_V_2_fu_1061_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r_V_5_reg_1508 <= grp_fu_1434_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_45_fu_533_p2 == 1'd0) & (tmp_s_fu_527_p2 == 1'd0))) begin
        r_V_reg_1493 <= r_V_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        r_V_s_reg_1523 <= grp_fu_1440_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (exitcond_flatten9_reg_1546_pp1_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0)))) begin
        reg_521 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten11_reg_1663 == 1'd0))) begin
        tmp1_reg_1677 <= tmp1_fu_841_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten7_reg_1809_pp3_iter2_reg == 1'd0))) begin
        tmp_111_reg_1887 <= tmp_111_fu_1381_p3;
        tmp_113_reg_1892 <= tmp_113_fu_1400_p1;
        tmp_114_reg_1897 <= tmp_114_fu_1404_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0))) begin
        tmp_116_reg_1907 <= tmp_116_fu_1425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten9_reg_1546_pp1_iter1_reg == 1'd0))) begin
        tmp_118_reg_1595[9 : 1] <= tmp_118_fu_697_p2[9 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (exitcond_flatten9_reg_1546_pp1_iter4_reg == 1'd0))) begin
        tmp_121_reg_1600 <= grp_fu_1446_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten10_reg_1654_pp2_iter1_reg == 1'd0))) begin
        tmp_127_reg_1716 <= tmp_127_fu_923_p2;
        tmp_128_reg_1721 <= tmp_128_fu_929_p2;
        tmp_64_mid2_v_reg_1727 <= tmp_64_mid2_v_fu_960_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten10_reg_1654_pp2_iter2_reg == 1'd0))) begin
        tmp_135_reg_1732 <= tmp_135_fu_997_p1;
        tmp_136_reg_1737 <= tmp_136_fu_1001_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1) & (exitcond_flatten10_reg_1654_pp2_iter4_reg == 1'd0))) begin
        tmp_138_reg_1752 <= grp_fu_1455_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten10_reg_1654_pp2_iter3_reg == 1'd0))) begin
        tmp_139_reg_1747 <= tmp_139_fu_1038_p2;
        tmp_63_reg_1742 <= tmp_63_fu_1030_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_49_reg_1528 <= tmp_49_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond_flatten9_reg_1546_pp1_iter1_reg == 1'd0))) begin
        tmp_52_mid2_v_reg_1583 <= tmp_52_mid2_v_fu_674_p3;
        tmp_55_mid2_reg_1589 <= tmp_55_mid2_fu_687_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten10_reg_1654 == 1'd0))) begin
        tmp_62_mid2_v_reg_1682 <= tmp_62_mid2_v_fu_860_p3;
        tmp_65_mid2_reg_1705 <= tmp_65_mid2_fu_903_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten10_reg_1654_pp2_iter8_reg == 1'd0))) begin
        tmp_67_reg_1784 <= {{p_neg_fu_1070_p2[13:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten10_reg_1654_pp2_iter9_reg == 1'd0))) begin
        tmp_69_reg_1789 <= tmp_69_fu_1086_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_77_reg_1464 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_79_reg_1469 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_81_reg_1475 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_85_reg_1480 <= stream_in_V_V_dout;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        A_V_3_ce0 = 1'b1;
    end else begin
        A_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        A_V_3_ce1 = 1'b1;
    end else begin
        A_V_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1) & (exitcond_flatten9_reg_1546_pp1_iter5_reg == 1'd0))) begin
        A_V_3_we1 = 1'b1;
    end else begin
        A_V_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        B_V_1_ce0 = 1'b1;
    end else begin
        B_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1))) begin
        B_V_1_ce1 = 1'b1;
    end else begin
        B_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter5 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter4_reg == 1'd0))) begin
        B_V_1_we1 = 1'b1;
    end else begin
        B_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_49_fu_567_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten9_fu_593_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_condition_pp2_exit_iter1_state29 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter1_state29 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten7_fu_1163_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state41 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state41 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (exitcond_flatten9_reg_1546_pp1_iter1_reg == 1'd0))) begin
        ap_phi_mux_i2_phi_fu_306_p4 = i_2_reg_1578;
    end else begin
        ap_phi_mux_i2_phi_fu_306_p4 = i2_reg_302;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_i_phi_fu_454_p4 = tmp_46_mid2_v_reg_1832;
    end else begin
        ap_phi_mux_i_phi_fu_454_p4 = i_reg_450;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_489_p4 = indvar_flatten_next_reg_1856;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_489_p4 = indvar_flatten_reg_485;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (exitcond_flatten9_reg_1546_pp1_iter2_reg == 1'd0))) begin
        ap_phi_mux_j1_phi_fu_271_p4 = tmp_52_mid2_v_reg_1583;
    end else begin
        ap_phi_mux_j1_phi_fu_271_p4 = j1_reg_267;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_flatten10_reg_1654_pp2_iter1_reg == 1'd0))) begin
        ap_phi_mux_j4_phi_fu_398_p4 = tmp_62_mid2_v_reg_1682;
    end else begin
        ap_phi_mux_j4_phi_fu_398_p4 = j4_reg_394;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_j_phi_fu_477_p4 = tmp_50_mid2_reg_1850;
    end else begin
        ap_phi_mux_j_phi_fu_477_p4 = j_reg_473;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (exitcond_flatten9_reg_1546_pp1_iter2_reg == 1'd0))) begin
        ap_phi_mux_k_phi_fu_294_p4 = tmp_55_mid2_reg_1589;
    end else begin
        ap_phi_mux_k_phi_fu_294_p4 = k_reg_290;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_flatten10_reg_1654_pp2_iter1_reg == 1'd0))) begin
        ap_phi_mux_ka5_phi_fu_409_p4 = tmp_65_mid2_reg_1705;
    end else begin
        ap_phi_mux_ka5_phi_fu_409_p4 = ka5_reg_405;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_ka_phi_fu_501_p4 = ka_mid2_reg_1882;
    end else begin
        ap_phi_mux_ka_phi_fu_501_p4 = ka_reg_497;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter2_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0))) begin
        ap_phi_mux_kb_phi_fu_513_p4 = kb_1_fu_1408_p2;
    end else begin
        ap_phi_mux_kb_phi_fu_513_p4 = kb_reg_509;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1446_ce = 1'b1;
    end else begin
        grp_fu_1446_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp1_iter5 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (exitcond_flatten9_reg_1546_pp1_iter4_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_49_reg_1528 == 1'd1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp3_iter4 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0)))) begin
        stream_in_V_V_blk_n = stream_in_V_V_empty_n;
    end else begin
        stream_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (exitcond_flatten9_reg_1546_pp1_iter4_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_49_reg_1528 == 1'd1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        stream_in_V_V_read = 1'b1;
    end else begin
        stream_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_49_reg_1528 == 1'd1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp3_iter4 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0)))) begin
        stream_out_V_V_blk_n = stream_out_V_V_full_n;
    end else begin
        stream_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        stream_out_V_V_din = tmp_V_94_fu_1140_p1;
    end else if (((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_49_reg_1528 == 1'd1)) | ((1'b0 == ap_block_pp3_stage0_01001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        stream_out_V_V_din = stream_in_V_V_dout;
    end else begin
        stream_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_49_reg_1528 == 1'd1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter4 == 1'b1) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)))) begin
        stream_out_V_V_write = 1'b1;
    end else begin
        stream_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_527_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_45_fu_533_p2 == 1'd1) & (tmp_s_fu_527_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_45_fu_533_p2 == 1'd0) & (tmp_s_fu_527_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_49_fu_567_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_49_fu_567_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (tmp_48_fu_582_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten9_fu_593_p2 == 1'd1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter6 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter6 == 1'b1) & (ap_enable_reg_pp1_iter5 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten9_fu_593_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & (exitcond_flatten6_fu_713_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) & ~((ap_enable_reg_pp2_iter10 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter11 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter10 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter11 == 1'b1)) | ((ap_enable_reg_pp2_iter2 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_flatten7_fu_1163_p2 == 1'd1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter5 == 1'b1) & (ap_enable_reg_pp3_iter4 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter5 == 1'b1) & (ap_enable_reg_pp3_iter4 == 1'b0)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (exitcond_flatten7_fu_1163_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_V_3_address0 = tmp_139_cast_fu_1051_p1;

assign A_V_3_address1 = tmp_125_cast_fu_709_p1;

assign B_V_1_address0 = tmp_140_cast_fu_1047_p1;

assign B_V_1_address1 = tmp_119_cast_fu_1430_p1;

assign Outbuf_V_fu_1132_p3 = ((tmp_125_fu_1124_p3[0:0] === 1'b1) ? 7'd0 : tmp_124_fu_1120_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (tmp_49_reg_1528 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_49_reg_1528 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (tmp_49_reg_1528 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_49_reg_1528 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (tmp_49_reg_1528 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_49_reg_1528 == 1'd1))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((stream_in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (exitcond_flatten9_reg_1546_pp1_iter4_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((stream_in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b1) & (exitcond_flatten9_reg_1546_pp1_iter4_reg == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((ap_enable_reg_pp3_iter4 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((ap_enable_reg_pp3_iter4 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((ap_enable_reg_pp3_iter4 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state14_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage0_iter1 = (((stream_out_V_V_full_n == 1'b0) & (tmp_49_reg_1528 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_49_reg_1528 == 1'd1)));
end

assign ap_block_state18_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state20_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp1_stage0_iter5 = ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten9_reg_1546_pp1_iter4_reg == 1'd0));
end

assign ap_block_state24_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state30_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state41_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state45_pp3_stage0_iter4 = (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten7_reg_1809_pp3_iter3_reg == 1'd0)));
end

assign ap_block_state46_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign exitcond8_fu_739_p2 = ((i3_reg_360 == 6'd32) ? 1'b1 : 1'b0);

assign exitcond8_mid_fu_636_p2 = (not_exitcond_flatten_5_fu_625_p2 & exitcond_fu_630_p2);

assign exitcond9_fu_872_p2 = ((kb6_reg_428 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond9_mid_fu_756_p2 = (not_exitcond_flatten_4_fu_751_p2 & exitcond8_reg_1627);

assign exitcond_flatten10_fu_805_p2 = ((indvar_flatten3_reg_372 == 8'd144) ? 1'b1 : 1'b0);

assign exitcond_flatten11_fu_817_p2 = ((indvar_flatten4_reg_383 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_1220_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_489_p4 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten5_fu_605_p2 = ((indvar_flatten9_reg_279 == 10'd416) ? 1'b1 : 1'b0);

assign exitcond_flatten6_fu_713_p2 = ((indvar_flatten1_reg_314 == 15'd18432) ? 1'b1 : 1'b0);

assign exitcond_flatten7_fu_1163_p2 = ((indvar_flatten6_reg_439 == 13'd4608) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_725_p2 = ((indvar_flatten2_reg_337 == 11'd768) ? 1'b1 : 1'b0);

assign exitcond_flatten9_fu_593_p2 = ((indvar_flatten8_reg_256 == 14'd10816) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1175_p2 = ((indvar_flatten7_reg_462 == 9'd144) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_fu_1226_p2 = (not_exitcond_flatten_fu_1215_p2 & exitcond_flatten4_fu_1220_p2);

assign exitcond_fu_630_p2 = ((ap_phi_mux_i2_phi_fu_306_p4 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond_mid_fu_878_p2 = (not_exitcond_flatten_6_fu_867_p2 & exitcond9_fu_872_p2);

assign grp_fu_1446_p0 = grp_fu_1446_p00;

assign grp_fu_1446_p00 = tmp_52_mid2_v_reg_1583;

assign grp_fu_1446_p2 = 15'd26;

assign grp_fu_1446_p3 = grp_fu_1446_p30;

assign grp_fu_1446_p30 = tmp_55_mid2_reg_1589_pp1_iter4_reg;

assign grp_fu_1455_p0 = grp_fu_1455_p00;

assign grp_fu_1455_p00 = tmp_64_mid2_v_reg_1727;

assign grp_fu_1455_p2 = 15'd26;

assign grp_fu_1455_p3 = grp_fu_1455_p30;

assign grp_fu_1455_p30 = tmp_63_reg_1742;

assign i2_mid2_fu_647_p3 = ((tmp_117_fu_642_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_i2_phi_fu_306_p4);

assign i3_mid2_fu_778_p3 = ((tmp_122_fu_773_p2[0:0] === 1'b1) ? 6'd0 : i3_reg_360);

assign i7_cast_fu_563_p1 = i7_reg_234;

assign i_2_fu_655_p2 = (i2_mid2_fu_647_p3 + 5'd1);

assign i_3_fu_1145_p2 = (6'd1 + i3_mid2_reg_1638);

assign i_8_fu_1195_p2 = (6'd1 + ap_phi_mux_i_phi_fu_454_p4);

assign i_s_fu_572_p2 = (i7_reg_234 + 29'd1);

assign ia_2_fu_745_p2 = (ia_reg_325 + 5'd1);

assign ia_mid2_fu_761_p3 = ((exitcond_flatten8_reg_1613[0:0] === 1'b1) ? ia_2_fu_745_p2 : ia_reg_325);

assign ib_2_fu_768_p2 = (ib_mid_reg_1621 + 5'd1);

assign ib_mid2_fu_786_p3 = ((exitcond9_mid_fu_756_p2[0:0] === 1'b1) ? ib_2_fu_768_p2 : ib_mid_reg_1621);

assign ib_mid_fu_731_p3 = ((exitcond_flatten8_fu_725_p2[0:0] === 1'b1) ? 5'd1 : ib_reg_349);

assign indvar_flatten102_op_fu_1150_p2 = (11'd1 + indvar_flatten2_reg_337);

assign indvar_flatten15_op_fu_1181_p2 = (9'd1 + indvar_flatten7_reg_462);

assign indvar_flatten48_op_fu_611_p2 = (indvar_flatten9_reg_279 + 10'd1);

assign indvar_flatten69_op_fu_823_p2 = (4'd1 + indvar_flatten4_reg_383);

assign indvar_flatten_next1_1_fu_719_p2 = (indvar_flatten1_reg_314 + 15'd1);

assign indvar_flatten_next1_2_fu_829_p3 = ((exitcond_flatten11_fu_817_p2[0:0] === 1'b1) ? 4'd1 : indvar_flatten69_op_fu_823_p2);

assign indvar_flatten_next1_3_fu_811_p2 = (indvar_flatten3_reg_372 + 8'd1);

assign indvar_flatten_next1_fu_1156_p3 = ((exitcond_flatten8_reg_1613[0:0] === 1'b1) ? 11'd1 : indvar_flatten102_op_fu_1150_p2);

assign indvar_flatten_next6_fu_1187_p3 = ((exitcond_flatten_fu_1175_p2[0:0] === 1'b1) ? 9'd1 : indvar_flatten15_op_fu_1181_p2);

assign indvar_flatten_next7_fu_1169_p2 = (indvar_flatten6_reg_439 + 13'd1);

assign indvar_flatten_next8_fu_617_p3 = ((exitcond_flatten5_fu_605_p2[0:0] === 1'b1) ? 10'd1 : indvar_flatten48_op_fu_611_p2);

assign indvar_flatten_next9_fu_599_p2 = (indvar_flatten8_reg_256 + 14'd1);

assign indvar_flatten_next_fu_1257_p3 = ((tmp_104_fu_1238_p2[0:0] === 1'b1) ? 4'd1 : indvar_flatten_op_fu_1251_p2);

assign indvar_flatten_op_fu_1251_p2 = (4'd1 + ap_phi_mux_indvar_flatten_phi_fu_489_p4);

assign j_4_fu_1232_p2 = (5'd1 + j_mid_fu_1201_p3);

assign j_5_fu_661_p2 = (ap_phi_mux_j1_phi_fu_271_p4 + 5'd1);

assign j_6_fu_847_p2 = (5'd1 + ap_phi_mux_j4_phi_fu_398_p4);

assign j_mid_fu_1201_p3 = ((exitcond_flatten_reg_1818[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_j_phi_fu_477_p4);

assign k_3_fu_681_p2 = (k_mid_fu_667_p3 + 5'd1);

assign k_mid_fu_667_p3 = ((exitcond_flatten5_reg_1555_pp1_iter1_reg[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_k_phi_fu_294_p4);

assign ka5_cast_cast_fu_837_p1 = ap_phi_mux_ka5_phi_fu_409_p4;

assign ka5_cast_cast_mid1_fu_940_p1 = ka_2_reg_1694;

assign ka5_mid_fu_853_p3 = ((exitcond_flatten11_reg_1663[0:0] === 1'b1) ? 2'd0 : ap_phi_mux_ka5_phi_fu_409_p4);

assign ka_1_fu_1345_p2 = ($signed(3'd7) + $signed(ka_mid_fu_1295_p3));

assign ka_2_fu_884_p2 = (2'd1 + ka5_mid_fu_853_p3);

assign ka_mid2_fu_1359_p3 = ((tmp_54_mid1_fu_1340_p2[0:0] === 1'b1) ? ka_mid_fu_1295_p3 : ka_1_fu_1345_p2);

assign ka_mid_fu_1295_p3 = ((tmp_104_reg_1843[0:0] === 1'b1) ? 3'd2 : ap_phi_mux_ka_phi_fu_501_p4);

assign kb6_cast9_cast_fu_1017_p1 = kb6_mid2_reg_1699_pp2_iter3_reg;

assign kb6_mid2_fu_895_p3 = ((tmp_131_fu_890_p2[0:0] === 1'b1) ? 2'd0 : kb6_reg_428);

assign kb_1_fu_1408_p2 = ($signed(3'd7) + $signed(kb_mid2_reg_1876));

assign kb_2_fu_911_p2 = (2'd1 + kb6_mid2_fu_895_p3);

assign kb_cast_fu_1388_p1 = kb_mid2_reg_1876;

assign kb_mid2_fu_1351_p3 = ((tmp_54_mid1_fu_1340_p2[0:0] === 1'b1) ? kb_mid_fu_1302_p3 : 3'd2);

assign kb_mid_fu_1302_p3 = ((tmp_104_reg_1843[0:0] === 1'b1) ? 3'd2 : ap_phi_mux_kb_phi_fu_513_p4);

assign not_exitcond_flatten_4_fu_751_p2 = (exitcond_flatten8_reg_1613 ^ 1'd1);

assign not_exitcond_flatten_5_fu_625_p2 = (exitcond_flatten5_reg_1555 ^ 1'd1);

assign not_exitcond_flatten_6_fu_867_p2 = (exitcond_flatten11_reg_1663 ^ 1'd1);

assign not_exitcond_flatten_fu_1215_p2 = (exitcond_flatten_reg_1818 ^ 1'd1);

assign num_img_4_fu_587_p2 = (num_img_reg_245 + 7'd1);

assign num_img_cast_fu_578_p1 = num_img_reg_245;

assign p_neg_fu_1070_p2 = (17'd0 - tmp_93_tr5_fu_1067_p1);

assign p_shl1_fu_975_p1 = tmp_129_fu_968_p3;

assign p_shl21_cast_fu_1005_p3 = {{tmp_136_reg_1737}, {2'd0}};

assign p_shl_cast_fu_1413_p3 = {{tmp_114_reg_1897}, {2'd0}};

assign p_shl_fu_1330_p1 = tmp_106_fu_1322_p3;

assign r_V_2_fu_1061_p0 = B_V_1_load_reg_1767_pp2_iter7_reg;

assign r_V_2_fu_1061_p1 = A_V_3_load_reg_1772;

assign r_V_2_fu_1061_p2 = ($signed(r_V_2_fu_1061_p0) * $signed(r_V_2_fu_1061_p1));

assign r_V_fu_545_p0 = tmp_V_85_reg_1480;

assign r_V_fu_545_p1 = tmp_V_81_reg_1475;

assign r_V_fu_545_p2 = ($signed(r_V_fu_545_p0) * $signed(r_V_fu_545_p1));

assign rev_fu_1284_p2 = (tmp_103_fu_1276_p3 ^ 1'd1);

assign sum_V_fu_1114_p2 = (tmp_70_fu_1107_p3 + p_0133_2_reg_416);

assign tmp1_fu_841_p2 = ($signed(ka5_cast_cast_fu_837_p1) + $signed(3'd7));

assign tmp1_mid1_fu_943_p2 = ($signed(3'd7) + $signed(ka5_cast_cast_mid1_fu_940_p1));

assign tmp2_cast_fu_1026_p1 = $signed(tmp2_fu_1020_p2);

assign tmp2_fu_1020_p2 = ($signed(3'd7) + $signed(kb6_cast9_cast_fu_1017_p1));

assign tmp_102_fu_1265_p3 = {{tmp_46_mid2_v_reg_1832}, {4'd0}};

assign tmp_103_fu_1276_p3 = ap_phi_mux_kb_phi_fu_513_p4[32'd2];

assign tmp_104_fu_1238_p2 = (exitcond_flatten_reg_1818 | exitcond_flatten_mid_fu_1226_p2);

assign tmp_105_fu_1312_p2 = (tmp_50_mid2_cast_fu_1309_p1 + tmp_109_cast_fu_1272_p1);

assign tmp_106_fu_1322_p3 = {{tmp_105_fu_1312_p2}, {2'd0}};

assign tmp_107_fu_1334_p2 = (p_shl_fu_1330_p1 - tmp_112_cast_fu_1318_p1);

assign tmp_108_fu_1367_p1 = ka_reg_497;

assign tmp_109_cast_fu_1272_p1 = tmp_102_fu_1265_p3;

assign tmp_109_fu_1371_p3 = ((tmp_104_reg_1843_pp3_iter2_reg[0:0] === 1'b1) ? 14'd2 : tmp_108_fu_1367_p1);

assign tmp_110_fu_1378_p1 = ka_1_reg_1871;

assign tmp_111_fu_1381_p3 = ((tmp_54_mid1_reg_1866[0:0] === 1'b1) ? tmp_109_fu_1371_p3 : tmp_110_fu_1378_p1);

assign tmp_112_cast_fu_1318_p1 = tmp_105_fu_1312_p2;

assign tmp_112_fu_1395_p2 = (tmp_57_fu_1391_p1 + tmp_107_reg_1861);

assign tmp_113_fu_1400_p1 = tmp_112_fu_1395_p2[13:0];

assign tmp_114_fu_1404_p1 = tmp_112_fu_1395_p2[11:0];

assign tmp_115_fu_1420_p2 = (p_shl_cast_fu_1413_p3 - tmp_113_reg_1892);

assign tmp_116_fu_1425_p2 = (tmp_111_reg_1887 + tmp_115_fu_1420_p2);

assign tmp_117_fu_642_p2 = (exitcond_flatten5_reg_1555 | exitcond8_mid_fu_636_p2);

assign tmp_118_fu_697_p0 = tmp_118_fu_697_p00;

assign tmp_118_fu_697_p00 = i2_mid2_reg_1573;

assign tmp_118_fu_697_p2 = (tmp_118_fu_697_p0 * $signed('h1A));

assign tmp_119_cast_fu_1430_p1 = tmp_116_reg_1907;

assign tmp_122_fu_773_p2 = (exitcond_flatten8_reg_1613 | exitcond9_mid_fu_756_p2);

assign tmp_123_fu_793_p3 = {{i3_mid2_fu_778_p3}, {4'd0}};

assign tmp_124_fu_1120_p1 = p_0133_2_reg_416[6:0];

assign tmp_125_cast_fu_709_p1 = $signed(tmp_121_reg_1600);

assign tmp_125_fu_1124_p3 = p_0133_2_reg_416[32'd7];

assign tmp_127_fu_923_p1 = tmp_127_fu_923_p10;

assign tmp_127_fu_923_p10 = tmp_62_mid2_v_reg_1682;

assign tmp_127_fu_923_p2 = (10'd26 * tmp_127_fu_923_p1);

assign tmp_128_cast_fu_801_p1 = tmp_123_fu_793_p3;

assign tmp_128_fu_929_p2 = (tmp_62_mid2_cast_fu_917_p1 + tmp_128_cast_reg_1649);

assign tmp_129_fu_968_p3 = {{tmp_128_reg_1721}, {2'd0}};

assign tmp_130_cast_fu_965_p1 = tmp_128_reg_1721;

assign tmp_130_fu_979_p2 = (p_shl1_fu_975_p1 - tmp_130_cast_fu_965_p1);

assign tmp_131_fu_890_p2 = (exitcond_mid_fu_878_p2 | exitcond_flatten11_reg_1663);

assign tmp_134_fu_991_p2 = (tmp_65_mid2_cast_fu_988_p1 + tmp_130_fu_979_p2);

assign tmp_135_fu_997_p1 = tmp_134_fu_991_p2[13:0];

assign tmp_136_fu_1001_p1 = tmp_134_fu_991_p2[11:0];

assign tmp_137_fu_1012_p2 = (p_shl21_cast_fu_1005_p3 - tmp_135_reg_1732);

assign tmp_139_cast_fu_1051_p1 = $signed(tmp_138_reg_1752);

assign tmp_139_fu_1038_p2 = (tmp_65_cast_fu_1035_p1 + tmp_137_fu_1012_p2);

assign tmp_140_cast_fu_1047_p1 = tmp_139_reg_1747;

assign tmp_140_fu_1091_p3 = r_V_2_reg_1777_pp2_iter10_reg[32'd15];

assign tmp_45_fu_533_p2 = ((reg_521 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_46_mid2_v_fu_1208_p3 = ((exitcond_flatten_reg_1818[0:0] === 1'b1) ? i_8_fu_1195_p2 : ap_phi_mux_i_phi_fu_454_p4);

assign tmp_48_fu_582_p2 = (($signed(num_img_cast_fu_578_p1) < $signed(tmp_V_77_reg_1464)) ? 1'b1 : 1'b0);

assign tmp_49_fu_567_p2 = (($signed(i7_cast_fu_563_p1) < $signed(r_V_s_reg_1523)) ? 1'b1 : 1'b0);

assign tmp_50_mid2_cast_fu_1309_p1 = tmp_50_mid2_reg_1850;

assign tmp_50_mid2_fu_1243_p3 = ((exitcond_flatten_mid_fu_1226_p2[0:0] === 1'b1) ? j_4_fu_1232_p2 : j_mid_fu_1201_p3);

assign tmp_52_mid2_v_fu_674_p3 = ((exitcond_flatten5_reg_1555_pp1_iter1_reg[0:0] === 1'b1) ? j_5_fu_661_p2 : ap_phi_mux_j1_phi_fu_271_p4);

assign tmp_54_mid1_fu_1340_p2 = (tmp_54_mid_fu_1290_p2 | exitcond_flatten_mid_reg_1838);

assign tmp_54_mid_fu_1290_p2 = (rev_fu_1284_p2 | exitcond_flatten_reg_1818_pp3_iter1_reg);

assign tmp_55_mid2_fu_687_p3 = ((exitcond8_mid_reg_1568[0:0] === 1'b1) ? k_3_fu_681_p2 : k_mid_fu_667_p3);

assign tmp_57_fu_1391_p1 = $unsigned(kb_cast_fu_1388_p1);

assign tmp_62_mid2_cast_fu_917_p1 = tmp_62_mid2_v_reg_1682;

assign tmp_62_mid2_v_fu_860_p3 = ((exitcond_flatten11_reg_1663[0:0] === 1'b1) ? j_6_fu_847_p2 : ap_phi_mux_j4_phi_fu_398_p4);

assign tmp_63_fu_1030_p2 = ($signed(tmp2_cast_fu_1026_p1) + $signed(ib_mid2_reg_1643));

assign tmp_64_mid290_v_v_fu_934_p3 = ((exitcond_flatten11_reg_1663_pp2_iter1_reg[0:0] === 1'b1) ? 3'd7 : tmp1_reg_1677);

assign tmp_64_mid2_v_fu_960_p2 = ($signed(tmp_64_mid2_v_v_cast_fu_956_p1) + $signed(ia_mid2_reg_1632));

assign tmp_64_mid2_v_v_cast_fu_956_p1 = $signed(tmp_64_mid2_v_v_fu_949_p3);

assign tmp_64_mid2_v_v_fu_949_p3 = ((exitcond_mid_reg_1689[0:0] === 1'b1) ? tmp1_mid1_fu_943_p2 : tmp_64_mid290_v_v_fu_934_p3);

assign tmp_65_cast_fu_1035_p1 = kb6_mid2_reg_1699_pp2_iter3_reg;

assign tmp_65_mid2_cast_fu_988_p1 = tmp_65_mid2_reg_1705_pp2_iter2_reg;

assign tmp_65_mid2_fu_903_p3 = ((exitcond_mid_fu_878_p2[0:0] === 1'b1) ? ka_2_fu_884_p2 : ka5_mid_fu_853_p3);

assign tmp_68_fu_1098_p4 = {{r_V_2_reg_1777_pp2_iter10_reg[13:6]}};

assign tmp_69_fu_1086_p2 = (8'd0 - tmp_67_reg_1784);

assign tmp_70_fu_1107_p3 = ((tmp_140_fu_1091_p3[0:0] === 1'b1) ? tmp_69_reg_1789 : tmp_68_fu_1098_p4);

assign tmp_93_tr5_fu_1067_p1 = r_V_2_reg_1777;

assign tmp_V_94_fu_1140_p1 = Outbuf_V_fu_1132_p3;

assign tmp_s_fu_527_p2 = ((reg_521 == 8'd2) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_118_reg_1595[0] <= 1'b0;
    tmp_128_cast_reg_1649[3:0] <= 4'b0000;
    tmp_128_cast_reg_1649[10] <= 1'b0;
end

endmodule //Conv_Block_codeRepl1
