// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_Block_codeRepl1_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_in_V_V_dout,
        stream_in_V_V_empty_n,
        stream_in_V_V_read,
        stream_out_V_V_din,
        stream_out_V_V_full_n,
        stream_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_pp0_stage0 = 25'd8192;
parameter    ap_ST_fsm_state16 = 25'd16384;
parameter    ap_ST_fsm_state17 = 25'd32768;
parameter    ap_ST_fsm_state18 = 25'd65536;
parameter    ap_ST_fsm_state19 = 25'd131072;
parameter    ap_ST_fsm_state20 = 25'd262144;
parameter    ap_ST_fsm_state21 = 25'd524288;
parameter    ap_ST_fsm_state22 = 25'd1048576;
parameter    ap_ST_fsm_pp1_stage0 = 25'd2097152;
parameter    ap_ST_fsm_state32 = 25'd4194304;
parameter    ap_ST_fsm_pp2_stage0 = 25'd8388608;
parameter    ap_ST_fsm_state38 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] stream_in_V_V_dout;
input   stream_in_V_V_empty_n;
output   stream_in_V_V_read;
output  [7:0] stream_out_V_V_din;
input   stream_out_V_V_full_n;
output   stream_out_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_in_V_V_read;
reg[7:0] stream_out_V_V_din;
reg stream_out_V_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] B_V_address0;
reg    B_V_ce0;
wire   [7:0] B_V_q0;
wire   [7:0] B_V_address1;
reg    B_V_ce1;
reg    B_V_we1;
wire   [9:0] A_V_address0;
reg    A_V_ce0;
wire   [7:0] A_V_q0;
wire   [9:0] A_V_address1;
reg    A_V_ce1;
reg    A_V_we1;
reg    stream_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    ap_enable_reg_pp2_iter3;
wire    ap_block_pp2_stage0;
reg   [0:0] exitcond_flatten2_reg_1377;
reg   [0:0] exitcond_flatten2_reg_1377_pp2_iter2_reg;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_40_reg_1179;
wire    ap_CS_fsm_state19;
wire   [0:0] exitcond2_fu_518_p2;
reg    stream_out_V_V_blk_n;
wire    ap_CS_fsm_state32;
reg   [28:0] i7_reg_200;
reg   [3:0] indvar_flatten5_reg_302;
reg   [1:0] ka5_reg_313;
reg   [7:0] p_0133_2_reg_324;
reg   [1:0] kb6_reg_336;
reg   [7:0] indvar_flatten2_reg_347;
reg   [4:0] i_reg_358;
reg   [3:0] indvar_flatten_reg_369;
reg  signed [2:0] ka_reg_380;
reg   [2:0] kb_reg_392;
reg   [7:0] reg_404;
reg    ap_block_state1;
reg    ap_block_state19;
wire    ap_block_state33_pp2_stage0_iter0;
wire    ap_block_state34_pp2_stage0_iter1;
wire    ap_block_state35_pp2_stage0_iter2;
reg    ap_block_state36_pp2_stage0_iter3;
wire    ap_block_state37_pp2_stage0_iter4;
reg    ap_block_pp2_stage0_11001;
reg   [7:0] tmp_V_59_reg_1115;
reg    ap_block_state2;
reg  signed [7:0] tmp_V_61_reg_1120;
reg    ap_block_state3;
reg  signed [7:0] tmp_V_63_reg_1126;
reg    ap_block_state4;
reg  signed [7:0] tmp_V_67_reg_1131;
reg    ap_block_state6;
wire   [0:0] tmp_s_fu_410_p2;
reg    ap_block_state7;
wire   [0:0] tmp_34_fu_416_p2;
wire   [15:0] r_V_fu_428_p2;
reg  signed [15:0] r_V_reg_1144;
wire    ap_CS_fsm_state8;
wire  signed [23:0] grp_fu_1103_p2;
reg  signed [23:0] r_V_4_reg_1159;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire  signed [29:0] grp_fu_1109_p2;
reg  signed [29:0] r_V_s_reg_1174;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_40_fu_450_p2;
wire    ap_block_state14_pp0_stage0_iter0;
reg    ap_block_state15_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [28:0] i_s_fu_455_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [6:0] num_img_5_fu_470_p2;
reg   [6:0] num_img_5_reg_1191;
wire    ap_CS_fsm_state17;
wire   [4:0] j_fu_482_p2;
reg   [4:0] j_reg_1199;
wire    ap_CS_fsm_state18;
wire   [10:0] tmp_86_fu_512_p2;
reg   [10:0] tmp_86_reg_1204;
wire   [0:0] exitcond_fu_476_p2;
wire   [4:0] k_2_fu_524_p2;
reg   [4:0] k_2_reg_1212;
wire   [10:0] tmp_91_fu_534_p2;
reg   [10:0] tmp_91_reg_1217;
wire   [13:0] indvar_flatten_next4_fu_549_p2;
reg   [13:0] indvar_flatten_next4_reg_1225;
wire    ap_CS_fsm_state21;
wire   [0:0] exitcond_flatten3_fu_555_p2;
reg   [0:0] exitcond_flatten3_reg_1230;
wire   [0:0] exitcond_flatten4_fu_543_p2;
wire   [4:0] ib_mid_fu_561_p3;
reg   [4:0] ib_mid_reg_1237;
wire   [0:0] exitcond15_mid_fu_581_p2;
reg   [0:0] exitcond15_mid_reg_1243;
wire   [4:0] ia_mid2_fu_593_p3;
reg   [4:0] ia_mid2_reg_1249;
wire    ap_CS_fsm_state22;
wire   [4:0] i3_mid2_fu_609_p3;
reg   [4:0] i3_mid2_reg_1255;
wire   [4:0] ib_mid2_fu_617_p3;
reg   [4:0] ib_mid2_reg_1260;
wire  signed [8:0] tmp_95_cast_fu_645_p1;
reg  signed [8:0] tmp_95_cast_reg_1266;
wire   [0:0] exitcond_flatten5_fu_649_p2;
reg   [0:0] exitcond_flatten5_reg_1271;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state23_pp1_stage0_iter0;
wire    ap_block_state24_pp1_stage0_iter1;
wire    ap_block_state25_pp1_stage0_iter2;
wire    ap_block_state26_pp1_stage0_iter3;
wire    ap_block_state27_pp1_stage0_iter4;
wire    ap_block_state28_pp1_stage0_iter5;
wire    ap_block_state29_pp1_stage0_iter6;
wire    ap_block_state30_pp1_stage0_iter7;
wire    ap_block_state31_pp1_stage0_iter8;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_flatten5_reg_1271_pp1_iter1_reg;
reg   [0:0] exitcond_flatten5_reg_1271_pp1_iter2_reg;
reg   [0:0] exitcond_flatten5_reg_1271_pp1_iter3_reg;
reg   [0:0] exitcond_flatten5_reg_1271_pp1_iter4_reg;
reg   [0:0] exitcond_flatten5_reg_1271_pp1_iter5_reg;
reg   [0:0] exitcond_flatten5_reg_1271_pp1_iter6_reg;
reg   [0:0] exitcond_flatten5_reg_1271_pp1_iter7_reg;
wire   [3:0] indvar_flatten_next5_fu_655_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [1:0] kb6_mid2_fu_673_p3;
reg   [1:0] kb6_mid2_reg_1280;
reg   [1:0] kb6_mid2_reg_1280_pp1_iter1_reg;
wire   [1:0] tmp_95_mid2_v_v_v_v_s_fu_681_p3;
reg   [1:0] tmp_95_mid2_v_v_v_v_s_reg_1286;
wire   [1:0] kb_4_fu_689_p2;
wire   [4:0] tmp_95_mid2_v_fu_708_p2;
reg   [4:0] tmp_95_mid2_v_reg_1298;
wire   [8:0] tmp_97_fu_716_p2;
reg   [8:0] tmp_97_reg_1304;
wire   [4:0] tmp_45_fu_734_p2;
reg   [4:0] tmp_45_reg_1310;
wire   [10:0] tmp_100_fu_780_p2;
reg   [10:0] tmp_100_reg_1315;
wire   [8:0] tmp_101_fu_789_p2;
reg   [8:0] tmp_101_reg_1320;
reg   [7:0] A_V_load_reg_1335;
reg    ap_enable_reg_pp1_iter4;
reg   [7:0] B_V_load_reg_1340;
wire   [15:0] r_V_3_fu_809_p2;
reg   [15:0] r_V_3_reg_1345;
reg   [15:0] r_V_3_reg_1345_pp1_iter6_reg;
reg   [15:0] r_V_3_reg_1345_pp1_iter7_reg;
reg   [7:0] tmp_49_reg_1352;
wire   [7:0] tmp_51_fu_834_p2;
reg   [7:0] tmp_51_reg_1357;
wire   [7:0] sum_V_fu_862_p2;
reg    ap_enable_reg_pp1_iter8;
wire   [4:0] i_1_fu_893_p2;
wire   [9:0] indvar_flatten_next3_fu_904_p3;
wire   [0:0] exitcond_flatten2_fu_911_p2;
wire    ap_CS_fsm_pp2_stage0;
reg   [0:0] exitcond_flatten2_reg_1377_pp2_iter1_reg;
reg   [0:0] exitcond_flatten2_reg_1377_pp2_iter3_reg;
wire   [7:0] indvar_flatten_next2_fu_917_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] exitcond_flatten_fu_929_p2;
reg   [0:0] exitcond_flatten_reg_1386;
reg   [0:0] exitcond_flatten_reg_1386_pp2_iter1_reg;
wire   [4:0] tmp_73_mid2_v_fu_935_p3;
reg   [4:0] tmp_73_mid2_v_reg_1394;
wire   [3:0] indvar_flatten_next_fu_949_p3;
wire   [7:0] tmp_74_fu_985_p2;
reg   [7:0] tmp_74_reg_1406;
wire   [0:0] tmp_92_mid_fu_1005_p2;
reg   [0:0] tmp_92_mid_reg_1411;
wire  signed [2:0] ka_3_fu_1010_p2;
reg  signed [2:0] ka_3_reg_1416;
wire  signed [2:0] kb_mid2_fu_1016_p3;
reg  signed [2:0] kb_mid2_reg_1421;
wire   [2:0] ka_mid2_fu_1024_p3;
reg   [2:0] ka_mid2_reg_1427;
reg    ap_enable_reg_pp2_iter1;
wire   [8:0] tmp_84_fu_1049_p3;
reg   [8:0] tmp_84_reg_1432;
wire   [8:0] tmp_85_fu_1069_p1;
reg   [8:0] tmp_85_reg_1437;
wire   [6:0] tmp_87_fu_1073_p1;
reg   [6:0] tmp_87_reg_1442;
wire   [2:0] kb_3_fu_1077_p2;
reg    ap_enable_reg_pp2_iter2;
wire   [8:0] tmp_77_fu_1094_p2;
reg   [8:0] tmp_77_reg_1452;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state14;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state23;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state33;
reg    ap_enable_reg_pp2_iter4;
reg   [6:0] num_img_reg_211;
reg   [4:0] j1_reg_222;
wire   [0:0] tmp_39_fu_465_p2;
reg   [4:0] k_reg_233;
wire    ap_CS_fsm_state20;
reg   [13:0] indvar_flatten3_reg_244;
reg   [4:0] ia_reg_255;
reg   [9:0] indvar_flatten4_reg_267;
reg   [4:0] ib_reg_279;
reg   [4:0] i3_reg_290;
reg   [1:0] ap_phi_mux_ka5_phi_fu_317_p4;
wire    ap_block_pp1_stage0;
reg   [4:0] ap_phi_mux_i_phi_fu_362_p4;
reg  signed [2:0] ap_phi_mux_ka_phi_fu_384_p4;
reg   [2:0] ap_phi_mux_kb_phi_fu_396_p4;
wire  signed [63:0] tmp_96_cast_fu_539_p1;
wire  signed [63:0] tmp_106_cast_fu_795_p1;
wire   [63:0] tmp_107_cast_fu_799_p1;
wire   [63:0] tmp_86_cast_fu_1099_p1;
reg    ap_block_state5;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] tmp_V_75_fu_888_p1;
reg    ap_block_pp2_stage0_01001;
wire  signed [7:0] r_V_fu_428_p0;
wire  signed [7:0] r_V_fu_428_p1;
wire   [29:0] i7_cast_fu_446_p1;
wire   [7:0] num_img_cast_fu_461_p1;
wire   [9:0] tmp_78_fu_488_p3;
wire   [6:0] tmp_83_fu_500_p3;
wire   [10:0] p_shl13_cast_fu_496_p1;
wire   [10:0] p_shl14_cast_fu_508_p1;
wire   [10:0] tmp_42_cast_fu_530_p1;
wire   [0:0] exitcond6_fu_575_p2;
wire   [0:0] not_exitcond_flatten_fu_569_p2;
wire   [4:0] ia_2_fu_587_p2;
wire   [0:0] tmp_88_fu_605_p2;
wire   [4:0] ib_2_fu_600_p2;
wire   [6:0] tmp_89_fu_627_p3;
wire   [7:0] p_shl15_cast_fu_635_p1;
wire   [7:0] tmp_41_cast_fu_623_p1;
wire   [7:0] tmp_90_fu_639_p2;
wire   [0:0] exitcond7_fu_667_p2;
wire   [1:0] ka_4_fu_661_p2;
wire   [2:0] tmp_95_mid2_v_v_v_v_fu_695_p1;
wire   [2:0] tmp_95_mid2_v_v_v_fu_698_p2;
wire  signed [4:0] tmp_95_mid2_v_v_fu_704_p1;
wire   [8:0] tmp_96_mid2_cast_fu_713_p1;
wire   [2:0] kb6_cast_cast_fu_721_p1;
wire   [2:0] tmp2_fu_724_p2;
wire  signed [4:0] tmp2_cast_fu_730_p1;
wire   [9:0] tmp_94_fu_739_p3;
wire   [6:0] tmp_95_fu_750_p3;
wire   [10:0] p_shl16_cast_fu_746_p1;
wire   [10:0] p_shl17_cast_fu_757_p1;
wire   [8:0] tmp_98_fu_767_p2;
wire   [10:0] tmp_46_cast_fu_777_p1;
wire   [10:0] tmp_96_fu_761_p2;
wire   [8:0] tmp_47_cast_fu_786_p1;
wire   [8:0] tmp_99_fu_772_p2;
wire  signed [7:0] r_V_3_fu_809_p0;
wire  signed [7:0] r_V_3_fu_809_p1;
wire   [16:0] tmp_125_tr_s_fu_815_p1;
wire   [16:0] p_neg_fu_818_p2;
wire   [0:0] tmp_102_fu_839_p3;
wire   [7:0] tmp_50_fu_846_p4;
wire   [7:0] tmp_52_fu_855_p3;
wire   [0:0] tmp_93_fu_872_p3;
wire   [6:0] tmp_92_fu_868_p1;
wire   [6:0] Outbuf_V_fu_880_p3;
wire   [9:0] indvar_flatten29_op_fu_898_p2;
wire   [4:0] i_7_fu_923_p2;
wire   [3:0] indvar_flatten_op_fu_943_p2;
wire   [6:0] tmp_73_fu_974_p3;
wire   [7:0] p_shl12_cast_fu_981_p1;
wire   [7:0] tmp_73_mid2_cast_fu_971_p1;
wire   [0:0] tmp_79_fu_991_p3;
wire   [0:0] rev_fu_999_p2;
wire   [2:0] ka_mid_fu_957_p3;
wire   [2:0] kb_mid_fu_964_p3;
wire  signed [8:0] tmp_80_fu_1035_p1;
wire   [8:0] tmp_81_fu_1039_p3;
wire  signed [8:0] tmp_82_fu_1046_p1;
wire  signed [31:0] kb_cast_fu_1056_p1;
wire  signed [33:0] tmp_74_cast_fu_1032_p1;
wire   [33:0] tmp_38_cast_fu_1059_p1;
wire   [33:0] tmp_75_fu_1063_p2;
wire   [8:0] p_shl_cast_fu_1082_p3;
wire   [8:0] tmp_76_fu_1089_p2;
wire    ap_CS_fsm_state16;
reg   [24:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 25'd1;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
end

Conv_Block_codeRedEe #(
    .DataWidth( 8 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
B_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_address0),
    .ce0(B_V_ce0),
    .q0(B_V_q0),
    .address1(B_V_address1),
    .ce1(B_V_ce1),
    .we1(B_V_we1),
    .d1(reg_404)
);

Conv_Block_codeReeOg #(
    .DataWidth( 8 ),
    .AddressRange( 784 ),
    .AddressWidth( 10 ))
A_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_address0),
    .ce0(A_V_ce0),
    .q0(A_V_q0),
    .address1(A_V_address1),
    .ce1(A_V_ce1),
    .we1(A_V_we1),
    .d1(reg_404)
);

cnn_mul_mul_16s_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_16s_8bkb_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_V_reg_1144),
    .din1(tmp_V_61_reg_1120),
    .ce(1'b1),
    .dout(grp_fu_1103_p2)
);

cnn_mul_mul_24s_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 30 ))
cnn_mul_mul_24s_8cud_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_V_4_reg_1159),
    .din1(tmp_V_61_reg_1120),
    .ce(1'b1),
    .dout(grp_fu_1109_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state14))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state14);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state23) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state23)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state23);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end else if ((1'b1 == ap_CS_fsm_state22)) begin
            ap_enable_reg_pp1_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state33) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_410_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state33)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state33);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_410_p2 == 1'd1))) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_fu_476_p2 == 1'd1))) begin
        i3_reg_290 <= 5'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        i3_reg_290 <= i_1_fu_893_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_40_fu_450_p2 == 1'd1))) begin
        i7_reg_200 <= i_s_fu_455_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i7_reg_200 <= 29'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_410_p2 == 1'd1))) begin
        i_reg_358 <= 5'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten2_reg_1377 == 1'd0))) begin
        i_reg_358 <= tmp_73_mid2_v_reg_1394;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_fu_476_p2 == 1'd1))) begin
        ia_reg_255 <= 5'd1;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        ia_reg_255 <= ia_mid2_reg_1249;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_fu_476_p2 == 1'd1))) begin
        ib_reg_279 <= 5'd1;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        ib_reg_279 <= ib_mid2_reg_1260;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_410_p2 == 1'd1))) begin
        indvar_flatten2_reg_347 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten2_fu_911_p2 == 1'd0))) begin
        indvar_flatten2_reg_347 <= indvar_flatten_next2_fu_917_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_fu_476_p2 == 1'd1))) begin
        indvar_flatten3_reg_244 <= 14'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        indvar_flatten3_reg_244 <= indvar_flatten_next4_reg_1225;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_fu_476_p2 == 1'd1))) begin
        indvar_flatten4_reg_267 <= 10'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        indvar_flatten4_reg_267 <= indvar_flatten_next3_fu_904_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten5_fu_649_p2 == 1'd0))) begin
        indvar_flatten5_reg_302 <= indvar_flatten_next5_fu_655_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        indvar_flatten5_reg_302 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_410_p2 == 1'd1))) begin
        indvar_flatten_reg_369 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten2_fu_911_p2 == 1'd0))) begin
        indvar_flatten_reg_369 <= indvar_flatten_next_fu_949_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_39_fu_465_p2 == 1'd1))) begin
        j1_reg_222 <= 5'd0;
    end else if ((~((stream_in_V_V_empty_n == 1'b0) & (exitcond2_fu_518_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state19) & (exitcond2_fu_518_p2 == 1'd1))) begin
        j1_reg_222 <= j_reg_1199;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_fu_476_p2 == 1'd0))) begin
        k_reg_233 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        k_reg_233 <= k_2_reg_1212;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten5_reg_1271 == 1'd0))) begin
        ka5_reg_313 <= tmp_95_mid2_v_v_v_v_s_reg_1286;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        ka5_reg_313 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_410_p2 == 1'd1))) begin
        ka_reg_380 <= 3'd2;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter1_reg == 1'd0))) begin
        ka_reg_380 <= ka_mid2_reg_1427;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten5_fu_649_p2 == 1'd0))) begin
        kb6_reg_336 <= kb_4_fu_689_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        kb6_reg_336 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_410_p2 == 1'd1))) begin
        kb_reg_392 <= 3'd2;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter1_reg == 1'd0))) begin
        kb_reg_392 <= kb_3_fu_1077_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_34_fu_416_p2 == 1'd1) & (tmp_s_fu_410_p2 == 1'd0))) begin
        num_img_reg_211 <= 7'd0;
    end else if (((1'b1 == ap_CS_fsm_state21) & (exitcond_flatten4_fu_543_p2 == 1'd1))) begin
        num_img_reg_211 <= num_img_5_reg_1191;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1) & (exitcond_flatten5_reg_1271_pp1_iter7_reg == 1'd0))) begin
        p_0133_2_reg_324 <= sum_V_fu_862_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        p_0133_2_reg_324 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_flatten5_reg_1271_pp1_iter3_reg == 1'd0))) begin
        A_V_load_reg_1335 <= A_V_q0;
        B_V_load_reg_1340 <= B_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (exitcond_flatten4_fu_543_p2 == 1'd0))) begin
        exitcond15_mid_reg_1243 <= exitcond15_mid_fu_581_p2;
        exitcond_flatten3_reg_1230 <= exitcond_flatten3_fu_555_p2;
        ib_mid_reg_1237 <= ib_mid_fu_561_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_flatten2_reg_1377 <= exitcond_flatten2_fu_911_p2;
        exitcond_flatten2_reg_1377_pp2_iter1_reg <= exitcond_flatten2_reg_1377;
        exitcond_flatten_reg_1386_pp2_iter1_reg <= exitcond_flatten_reg_1386;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond_flatten2_reg_1377_pp2_iter2_reg <= exitcond_flatten2_reg_1377_pp2_iter1_reg;
        exitcond_flatten2_reg_1377_pp2_iter3_reg <= exitcond_flatten2_reg_1377_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten5_reg_1271 <= exitcond_flatten5_fu_649_p2;
        exitcond_flatten5_reg_1271_pp1_iter1_reg <= exitcond_flatten5_reg_1271;
        kb6_mid2_reg_1280_pp1_iter1_reg <= kb6_mid2_reg_1280;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_flatten5_reg_1271_pp1_iter2_reg <= exitcond_flatten5_reg_1271_pp1_iter1_reg;
        exitcond_flatten5_reg_1271_pp1_iter3_reg <= exitcond_flatten5_reg_1271_pp1_iter2_reg;
        exitcond_flatten5_reg_1271_pp1_iter4_reg <= exitcond_flatten5_reg_1271_pp1_iter3_reg;
        exitcond_flatten5_reg_1271_pp1_iter5_reg <= exitcond_flatten5_reg_1271_pp1_iter4_reg;
        exitcond_flatten5_reg_1271_pp1_iter6_reg <= exitcond_flatten5_reg_1271_pp1_iter5_reg;
        exitcond_flatten5_reg_1271_pp1_iter7_reg <= exitcond_flatten5_reg_1271_pp1_iter6_reg;
        r_V_3_reg_1345_pp1_iter6_reg <= r_V_3_reg_1345;
        r_V_3_reg_1345_pp1_iter7_reg <= r_V_3_reg_1345_pp1_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten2_fu_911_p2 == 1'd0))) begin
        exitcond_flatten_reg_1386 <= exitcond_flatten_fu_929_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i3_mid2_reg_1255 <= i3_mid2_fu_609_p3;
        ia_mid2_reg_1249 <= ia_mid2_fu_593_p3;
        ib_mid2_reg_1260 <= ib_mid2_fu_617_p3;
        tmp_95_cast_reg_1266 <= tmp_95_cast_fu_645_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        indvar_flatten_next4_reg_1225 <= indvar_flatten_next4_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j_reg_1199 <= j_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_in_V_V_empty_n == 1'b0) & (exitcond2_fu_518_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state19))) begin
        k_2_reg_1212 <= k_2_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten2_reg_1377 == 1'd0))) begin
        ka_3_reg_1416 <= ka_3_fu_1010_p2;
        kb_mid2_reg_1421 <= kb_mid2_fu_1016_p3;
        tmp_74_reg_1406 <= tmp_74_fu_985_p2;
        tmp_92_mid_reg_1411 <= tmp_92_mid_fu_1005_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten2_reg_1377 == 1'd0))) begin
        ka_mid2_reg_1427 <= ka_mid2_fu_1024_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten5_fu_649_p2 == 1'd0))) begin
        kb6_mid2_reg_1280 <= kb6_mid2_fu_673_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        num_img_5_reg_1191 <= num_img_5_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten5_reg_1271_pp1_iter4_reg == 1'd0))) begin
        r_V_3_reg_1345 <= r_V_3_fu_809_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r_V_4_reg_1159 <= grp_fu_1103_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_34_fu_416_p2 == 1'd0) & (tmp_s_fu_410_p2 == 1'd0))) begin
        r_V_reg_1144 <= r_V_fu_428_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        r_V_s_reg_1174 <= grp_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((stream_in_V_V_empty_n == 1'b0) & (exitcond2_fu_518_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state19) & (exitcond2_fu_518_p2 == 1'd0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0)))) begin
        reg_404 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten5_reg_1271_pp1_iter1_reg == 1'd0))) begin
        tmp_100_reg_1315 <= tmp_100_fu_780_p2;
        tmp_101_reg_1320 <= tmp_101_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_40_reg_1179 <= tmp_40_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten5_reg_1271 == 1'd0))) begin
        tmp_45_reg_1310 <= tmp_45_fu_734_p2;
        tmp_95_mid2_v_reg_1298 <= tmp_95_mid2_v_fu_708_p2;
        tmp_97_reg_1304 <= tmp_97_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten5_reg_1271_pp1_iter5_reg == 1'd0))) begin
        tmp_49_reg_1352 <= {{p_neg_fu_818_p2[13:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten5_reg_1271_pp1_iter6_reg == 1'd0))) begin
        tmp_51_reg_1357 <= tmp_51_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten2_fu_911_p2 == 1'd0))) begin
        tmp_73_mid2_v_reg_1394 <= tmp_73_mid2_v_fu_935_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0))) begin
        tmp_77_reg_1452 <= tmp_77_fu_1094_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten2_reg_1377_pp2_iter1_reg == 1'd0))) begin
        tmp_84_reg_1432 <= tmp_84_fu_1049_p3;
        tmp_85_reg_1437 <= tmp_85_fu_1069_p1;
        tmp_87_reg_1442 <= tmp_87_fu_1073_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (exitcond_fu_476_p2 == 1'd0))) begin
        tmp_86_reg_1204[10 : 2] <= tmp_86_fu_512_p2[10 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_in_V_V_empty_n == 1'b0) & (exitcond2_fu_518_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state19) & (exitcond2_fu_518_p2 == 1'd0))) begin
        tmp_91_reg_1217 <= tmp_91_fu_534_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten5_fu_649_p2 == 1'd0))) begin
        tmp_95_mid2_v_v_v_v_s_reg_1286 <= tmp_95_mid2_v_v_v_v_s_fu_681_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_59_reg_1115 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_61_reg_1120 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_63_reg_1126 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_67_reg_1131 <= stream_in_V_V_dout;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_ce0 = 1'b1;
    end else begin
        A_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        A_V_ce1 = 1'b1;
    end else begin
        A_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        A_V_we1 = 1'b1;
    end else begin
        A_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        B_V_ce0 = 1'b1;
    end else begin
        B_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        B_V_ce1 = 1'b1;
    end else begin
        B_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter3_reg == 1'd0))) begin
        B_V_we1 = 1'b1;
    end else begin
        B_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_40_fu_450_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten5_fu_649_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state23 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state23 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten2_fu_911_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state33 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state33 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (exitcond_flatten2_reg_1377 == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_i_phi_fu_362_p4 = tmp_73_mid2_v_reg_1394;
    end else begin
        ap_phi_mux_i_phi_fu_362_p4 = i_reg_358;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_flatten5_reg_1271 == 1'd0))) begin
        ap_phi_mux_ka5_phi_fu_317_p4 = tmp_95_mid2_v_v_v_v_s_reg_1286;
    end else begin
        ap_phi_mux_ka5_phi_fu_317_p4 = ka5_reg_313;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_ka_phi_fu_384_p4 = ka_mid2_reg_1427;
    end else begin
        ap_phi_mux_ka_phi_fu_384_p4 = ka_reg_380;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0))) begin
        ap_phi_mux_kb_phi_fu_396_p4 = kb_3_fu_1077_p2;
    end else begin
        ap_phi_mux_kb_phi_fu_396_p4 = kb_reg_392;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state19) & (exitcond2_fu_518_p2 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_40_reg_1179 == 1'd1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0)))) begin
        stream_in_V_V_blk_n = stream_in_V_V_empty_n;
    end else begin
        stream_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((stream_in_V_V_empty_n == 1'b0) & (exitcond2_fu_518_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state19) & (exitcond2_fu_518_p2 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_40_reg_1179 == 1'd1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        stream_in_V_V_read = 1'b1;
    end else begin
        stream_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_40_reg_1179 == 1'd1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp2_iter3 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0)))) begin
        stream_out_V_V_blk_n = stream_out_V_V_full_n;
    end else begin
        stream_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        stream_out_V_V_din = tmp_V_75_fu_888_p1;
    end else if (((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_40_reg_1179 == 1'd1)) | ((1'b0 == ap_block_pp2_stage0_01001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        stream_out_V_V_din = stream_in_V_V_dout;
    end else begin
        stream_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_40_reg_1179 == 1'd1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)))) begin
        stream_out_V_V_write = 1'b1;
    end else begin
        stream_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_s_fu_410_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_34_fu_416_p2 == 1'd1) & (tmp_s_fu_410_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7) & (tmp_34_fu_416_p2 == 1'd0) & (tmp_s_fu_410_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_40_fu_450_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_40_fu_450_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (tmp_39_fu_465_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (exitcond_fu_476_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if ((~((stream_in_V_V_empty_n == 1'b0) & (exitcond2_fu_518_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state19) & (exitcond2_fu_518_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if ((~((stream_in_V_V_empty_n == 1'b0) & (exitcond2_fu_518_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state19) & (exitcond2_fu_518_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (exitcond_flatten4_fu_543_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten5_fu_649_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter7 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter7 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_flatten5_fu_649_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state32 : begin
            if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_flatten2_fu_911_p2 == 1'd1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1) & (ap_enable_reg_pp2_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1) & (ap_enable_reg_pp2_iter3 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (exitcond_flatten2_fu_911_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_V_address0 = tmp_106_cast_fu_795_p1;

assign A_V_address1 = tmp_96_cast_fu_539_p1;

assign B_V_address0 = tmp_107_cast_fu_799_p1;

assign B_V_address1 = tmp_86_cast_fu_1099_p1;

assign Outbuf_V_fu_880_p3 = ((tmp_93_fu_872_p3[0:0] === 1'b1) ? 7'd0 : tmp_92_fu_868_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (tmp_40_reg_1179 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_40_reg_1179 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (tmp_40_reg_1179 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_40_reg_1179 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (tmp_40_reg_1179 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_40_reg_1179 == 1'd1))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((ap_enable_reg_pp2_iter3 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((ap_enable_reg_pp2_iter3 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((ap_enable_reg_pp2_iter3 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state14_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage0_iter1 = (((stream_out_V_V_full_n == 1'b0) & (tmp_40_reg_1179 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_40_reg_1179 == 1'd1)));
end

always @ (*) begin
    ap_block_state19 = ((stream_in_V_V_empty_n == 1'b0) & (exitcond2_fu_518_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state2 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state23_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state30_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state36_pp2_stage0_iter3 = (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten2_reg_1377_pp2_iter2_reg == 1'd0)));
end

assign ap_block_state37_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign exitcond15_mid_fu_581_p2 = (not_exitcond_flatten_fu_569_p2 & exitcond6_fu_575_p2);

assign exitcond2_fu_518_p2 = ((k_reg_233 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond6_fu_575_p2 = ((i3_reg_290 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond7_fu_667_p2 = ((kb6_reg_336 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_911_p2 = ((indvar_flatten2_reg_347 == 8'd144) ? 1'b1 : 1'b0);

assign exitcond_flatten3_fu_555_p2 = ((indvar_flatten4_reg_267 == 10'd416) ? 1'b1 : 1'b0);

assign exitcond_flatten4_fu_543_p2 = ((indvar_flatten3_reg_244 == 14'd10816) ? 1'b1 : 1'b0);

assign exitcond_flatten5_fu_649_p2 = ((indvar_flatten5_reg_302 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_929_p2 = ((indvar_flatten_reg_369 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_fu_476_p2 = ((j1_reg_222 == 5'd28) ? 1'b1 : 1'b0);

assign i3_mid2_fu_609_p3 = ((tmp_88_fu_605_p2[0:0] === 1'b1) ? 5'd0 : i3_reg_290);

assign i7_cast_fu_446_p1 = i7_reg_200;

assign i_1_fu_893_p2 = (5'd1 + i3_mid2_reg_1255);

assign i_7_fu_923_p2 = (5'd1 + ap_phi_mux_i_phi_fu_362_p4);

assign i_s_fu_455_p2 = (i7_reg_200 + 29'd1);

assign ia_2_fu_587_p2 = (ia_reg_255 + 5'd1);

assign ia_mid2_fu_593_p3 = ((exitcond_flatten3_reg_1230[0:0] === 1'b1) ? ia_2_fu_587_p2 : ia_reg_255);

assign ib_2_fu_600_p2 = (ib_mid_reg_1237 + 5'd1);

assign ib_mid2_fu_617_p3 = ((exitcond15_mid_reg_1243[0:0] === 1'b1) ? ib_2_fu_600_p2 : ib_mid_reg_1237);

assign ib_mid_fu_561_p3 = ((exitcond_flatten3_fu_555_p2[0:0] === 1'b1) ? 5'd1 : ib_reg_279);

assign indvar_flatten29_op_fu_898_p2 = (10'd1 + indvar_flatten4_reg_267);

assign indvar_flatten_next2_fu_917_p2 = (indvar_flatten2_reg_347 + 8'd1);

assign indvar_flatten_next3_fu_904_p3 = ((exitcond_flatten3_reg_1230[0:0] === 1'b1) ? 10'd1 : indvar_flatten29_op_fu_898_p2);

assign indvar_flatten_next4_fu_549_p2 = (indvar_flatten3_reg_244 + 14'd1);

assign indvar_flatten_next5_fu_655_p2 = (indvar_flatten5_reg_302 + 4'd1);

assign indvar_flatten_next_fu_949_p3 = ((exitcond_flatten_fu_929_p2[0:0] === 1'b1) ? 4'd1 : indvar_flatten_op_fu_943_p2);

assign indvar_flatten_op_fu_943_p2 = (4'd1 + indvar_flatten_reg_369);

assign j_fu_482_p2 = (j1_reg_222 + 5'd1);

assign k_2_fu_524_p2 = (k_reg_233 + 5'd1);

assign ka_3_fu_1010_p2 = ($signed(3'd7) + $signed(ka_mid_fu_957_p3));

assign ka_4_fu_661_p2 = (2'd1 + ap_phi_mux_ka5_phi_fu_317_p4);

assign ka_mid2_fu_1024_p3 = ((tmp_92_mid_fu_1005_p2[0:0] === 1'b1) ? ka_mid_fu_957_p3 : ka_3_fu_1010_p2);

assign ka_mid_fu_957_p3 = ((exitcond_flatten_reg_1386[0:0] === 1'b1) ? 3'd2 : ap_phi_mux_ka_phi_fu_384_p4);

assign kb6_cast_cast_fu_721_p1 = kb6_mid2_reg_1280;

assign kb6_mid2_fu_673_p3 = ((exitcond7_fu_667_p2[0:0] === 1'b1) ? 2'd0 : kb6_reg_336);

assign kb_3_fu_1077_p2 = ($signed(3'd7) + $signed(kb_mid2_reg_1421));

assign kb_4_fu_689_p2 = (2'd1 + kb6_mid2_fu_673_p3);

assign kb_cast_fu_1056_p1 = kb_mid2_reg_1421;

assign kb_mid2_fu_1016_p3 = ((tmp_92_mid_fu_1005_p2[0:0] === 1'b1) ? kb_mid_fu_964_p3 : 3'd2);

assign kb_mid_fu_964_p3 = ((exitcond_flatten_reg_1386[0:0] === 1'b1) ? 3'd2 : ap_phi_mux_kb_phi_fu_396_p4);

assign not_exitcond_flatten_fu_569_p2 = (exitcond_flatten3_fu_555_p2 ^ 1'd1);

assign num_img_5_fu_470_p2 = (num_img_reg_211 + 7'd1);

assign num_img_cast_fu_461_p1 = num_img_reg_211;

assign p_neg_fu_818_p2 = (17'd0 - tmp_125_tr_s_fu_815_p1);

assign p_shl12_cast_fu_981_p1 = tmp_73_fu_974_p3;

assign p_shl13_cast_fu_496_p1 = tmp_78_fu_488_p3;

assign p_shl14_cast_fu_508_p1 = tmp_83_fu_500_p3;

assign p_shl15_cast_fu_635_p1 = tmp_89_fu_627_p3;

assign p_shl16_cast_fu_746_p1 = tmp_94_fu_739_p3;

assign p_shl17_cast_fu_757_p1 = tmp_95_fu_750_p3;

assign p_shl_cast_fu_1082_p3 = {{tmp_87_reg_1442}, {2'd0}};

assign r_V_3_fu_809_p0 = B_V_load_reg_1340;

assign r_V_3_fu_809_p1 = A_V_load_reg_1335;

assign r_V_3_fu_809_p2 = ($signed(r_V_3_fu_809_p0) * $signed(r_V_3_fu_809_p1));

assign r_V_fu_428_p0 = tmp_V_67_reg_1131;

assign r_V_fu_428_p1 = tmp_V_63_reg_1126;

assign r_V_fu_428_p2 = ($signed(r_V_fu_428_p0) * $signed(r_V_fu_428_p1));

assign rev_fu_999_p2 = (tmp_79_fu_991_p3 ^ 1'd1);

assign sum_V_fu_862_p2 = (tmp_52_fu_855_p3 + p_0133_2_reg_324);

assign tmp2_cast_fu_730_p1 = $signed(tmp2_fu_724_p2);

assign tmp2_fu_724_p2 = ($signed(3'd7) + $signed(kb6_cast_cast_fu_721_p1));

assign tmp_100_fu_780_p2 = (tmp_46_cast_fu_777_p1 + tmp_96_fu_761_p2);

assign tmp_101_fu_789_p2 = (tmp_47_cast_fu_786_p1 + tmp_99_fu_772_p2);

assign tmp_102_fu_839_p3 = r_V_3_reg_1345_pp1_iter7_reg[32'd15];

assign tmp_106_cast_fu_795_p1 = $signed(tmp_100_reg_1315);

assign tmp_107_cast_fu_799_p1 = tmp_101_reg_1320;

assign tmp_125_tr_s_fu_815_p1 = r_V_3_reg_1345;

assign tmp_34_fu_416_p2 = ((reg_404 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_38_cast_fu_1059_p1 = $unsigned(kb_cast_fu_1056_p1);

assign tmp_39_fu_465_p2 = (($signed(num_img_cast_fu_461_p1) < $signed(tmp_V_59_reg_1115)) ? 1'b1 : 1'b0);

assign tmp_40_fu_450_p2 = (($signed(i7_cast_fu_446_p1) < $signed(r_V_s_reg_1174)) ? 1'b1 : 1'b0);

assign tmp_41_cast_fu_623_p1 = i3_mid2_fu_609_p3;

assign tmp_42_cast_fu_530_p1 = k_reg_233;

assign tmp_45_fu_734_p2 = ($signed(tmp2_cast_fu_730_p1) + $signed(ib_mid2_reg_1260));

assign tmp_46_cast_fu_777_p1 = tmp_45_reg_1310;

assign tmp_47_cast_fu_786_p1 = kb6_mid2_reg_1280_pp1_iter1_reg;

assign tmp_50_fu_846_p4 = {{r_V_3_reg_1345_pp1_iter7_reg[13:6]}};

assign tmp_51_fu_834_p2 = (8'd0 - tmp_49_reg_1352);

assign tmp_52_fu_855_p3 = ((tmp_102_fu_839_p3[0:0] === 1'b1) ? tmp_51_reg_1357 : tmp_50_fu_846_p4);

assign tmp_73_fu_974_p3 = {{tmp_73_mid2_v_reg_1394}, {2'd0}};

assign tmp_73_mid2_cast_fu_971_p1 = tmp_73_mid2_v_reg_1394;

assign tmp_73_mid2_v_fu_935_p3 = ((exitcond_flatten_fu_929_p2[0:0] === 1'b1) ? i_7_fu_923_p2 : ap_phi_mux_i_phi_fu_362_p4);

assign tmp_74_cast_fu_1032_p1 = $signed(tmp_74_reg_1406);

assign tmp_74_fu_985_p2 = (p_shl12_cast_fu_981_p1 - tmp_73_mid2_cast_fu_971_p1);

assign tmp_75_fu_1063_p2 = ($signed(tmp_74_cast_fu_1032_p1) + $signed(tmp_38_cast_fu_1059_p1));

assign tmp_76_fu_1089_p2 = (p_shl_cast_fu_1082_p3 - tmp_85_reg_1437);

assign tmp_77_fu_1094_p2 = (tmp_76_fu_1089_p2 + tmp_84_reg_1432);

assign tmp_78_fu_488_p3 = {{j1_reg_222}, {5'd0}};

assign tmp_79_fu_991_p3 = ap_phi_mux_kb_phi_fu_396_p4[32'd2];

assign tmp_80_fu_1035_p1 = ka_reg_380;

assign tmp_81_fu_1039_p3 = ((exitcond_flatten_reg_1386_pp2_iter1_reg[0:0] === 1'b1) ? 9'd2 : tmp_80_fu_1035_p1);

assign tmp_82_fu_1046_p1 = ka_3_reg_1416;

assign tmp_83_fu_500_p3 = {{j1_reg_222}, {2'd0}};

assign tmp_84_fu_1049_p3 = ((tmp_92_mid_reg_1411[0:0] === 1'b1) ? tmp_81_fu_1039_p3 : tmp_82_fu_1046_p1);

assign tmp_85_fu_1069_p1 = tmp_75_fu_1063_p2[8:0];

assign tmp_86_cast_fu_1099_p1 = tmp_77_reg_1452;

assign tmp_86_fu_512_p2 = (p_shl13_cast_fu_496_p1 - p_shl14_cast_fu_508_p1);

assign tmp_87_fu_1073_p1 = tmp_75_fu_1063_p2[6:0];

assign tmp_88_fu_605_p2 = (exitcond_flatten3_reg_1230 | exitcond15_mid_reg_1243);

assign tmp_89_fu_627_p3 = {{i3_mid2_fu_609_p3}, {2'd0}};

assign tmp_90_fu_639_p2 = (p_shl15_cast_fu_635_p1 - tmp_41_cast_fu_623_p1);

assign tmp_91_fu_534_p2 = (tmp_86_reg_1204 + tmp_42_cast_fu_530_p1);

assign tmp_92_fu_868_p1 = p_0133_2_reg_324[6:0];

assign tmp_92_mid_fu_1005_p2 = (rev_fu_999_p2 | exitcond_flatten_reg_1386);

assign tmp_93_fu_872_p3 = p_0133_2_reg_324[32'd7];

assign tmp_94_fu_739_p3 = {{tmp_95_mid2_v_reg_1298}, {5'd0}};

assign tmp_95_cast_fu_645_p1 = $signed(tmp_90_fu_639_p2);

assign tmp_95_fu_750_p3 = {{tmp_95_mid2_v_reg_1298}, {2'd0}};

assign tmp_95_mid2_v_fu_708_p2 = ($signed(tmp_95_mid2_v_v_fu_704_p1) + $signed(ia_mid2_reg_1249));

assign tmp_95_mid2_v_v_fu_704_p1 = $signed(tmp_95_mid2_v_v_v_fu_698_p2);

assign tmp_95_mid2_v_v_v_fu_698_p2 = ($signed(3'd7) + $signed(tmp_95_mid2_v_v_v_v_fu_695_p1));

assign tmp_95_mid2_v_v_v_v_fu_695_p1 = tmp_95_mid2_v_v_v_v_s_reg_1286;

assign tmp_95_mid2_v_v_v_v_s_fu_681_p3 = ((exitcond7_fu_667_p2[0:0] === 1'b1) ? ka_4_fu_661_p2 : ap_phi_mux_ka5_phi_fu_317_p4);

assign tmp_96_cast_fu_539_p1 = $signed(tmp_91_reg_1217);

assign tmp_96_fu_761_p2 = (p_shl16_cast_fu_746_p1 - p_shl17_cast_fu_757_p1);

assign tmp_96_mid2_cast_fu_713_p1 = tmp_95_mid2_v_v_v_v_s_reg_1286;

assign tmp_97_fu_716_p2 = ($signed(tmp_96_mid2_cast_fu_713_p1) + $signed(tmp_95_cast_reg_1266));

assign tmp_98_fu_767_p2 = tmp_97_reg_1304 << 9'd2;

assign tmp_99_fu_772_p2 = (tmp_98_fu_767_p2 - tmp_97_reg_1304);

assign tmp_V_75_fu_888_p1 = Outbuf_V_fu_880_p3;

assign tmp_s_fu_410_p2 = ((reg_404 == 8'd1) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_86_reg_1204[1:0] <= 2'b00;
end

endmodule //Conv_Block_codeRepl1_1
