// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Conv_1_28_16_3_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        stream_in_V_V_dout,
        stream_in_V_V_empty_n,
        stream_in_V_V_read,
        stream_out_V_V_din,
        stream_out_V_V_full_n,
        stream_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 35'd1;
parameter    ap_ST_fsm_state2 = 35'd2;
parameter    ap_ST_fsm_state3 = 35'd4;
parameter    ap_ST_fsm_state4 = 35'd8;
parameter    ap_ST_fsm_state5 = 35'd16;
parameter    ap_ST_fsm_state6 = 35'd32;
parameter    ap_ST_fsm_state7 = 35'd64;
parameter    ap_ST_fsm_state8 = 35'd128;
parameter    ap_ST_fsm_state9 = 35'd256;
parameter    ap_ST_fsm_state10 = 35'd512;
parameter    ap_ST_fsm_state11 = 35'd1024;
parameter    ap_ST_fsm_state12 = 35'd2048;
parameter    ap_ST_fsm_state13 = 35'd4096;
parameter    ap_ST_fsm_state14 = 35'd8192;
parameter    ap_ST_fsm_state15 = 35'd16384;
parameter    ap_ST_fsm_state16 = 35'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 35'd65536;
parameter    ap_ST_fsm_state19 = 35'd131072;
parameter    ap_ST_fsm_state20 = 35'd262144;
parameter    ap_ST_fsm_state21 = 35'd524288;
parameter    ap_ST_fsm_state22 = 35'd1048576;
parameter    ap_ST_fsm_state23 = 35'd2097152;
parameter    ap_ST_fsm_state24 = 35'd4194304;
parameter    ap_ST_fsm_state25 = 35'd8388608;
parameter    ap_ST_fsm_state26 = 35'd16777216;
parameter    ap_ST_fsm_state27 = 35'd33554432;
parameter    ap_ST_fsm_state28 = 35'd67108864;
parameter    ap_ST_fsm_state29 = 35'd134217728;
parameter    ap_ST_fsm_state30 = 35'd268435456;
parameter    ap_ST_fsm_state31 = 35'd536870912;
parameter    ap_ST_fsm_state32 = 35'd1073741824;
parameter    ap_ST_fsm_state33 = 35'd2147483648;
parameter    ap_ST_fsm_state34 = 35'd4294967296;
parameter    ap_ST_fsm_pp1_stage0 = 35'd8589934592;
parameter    ap_ST_fsm_state38 = 35'd17179869184;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] stream_in_V_V_dout;
input   stream_in_V_V_empty_n;
output   stream_in_V_V_read;
output  [15:0] stream_out_V_V_din;
input   stream_out_V_V_full_n;
output   stream_out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg stream_in_V_V_read;
reg[15:0] stream_out_V_V_din;
reg stream_out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [34:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    A_V_0_ce0;
wire   [7:0] A_V_0_q0;
reg    A_V_0_ce1;
reg    A_V_0_we1;
reg    A_V_188_ce0;
wire   [7:0] A_V_188_q0;
reg    A_V_188_ce1;
reg    A_V_188_we1;
reg    A_V_289_ce0;
wire   [7:0] A_V_289_q0;
reg    A_V_289_ce1;
reg    A_V_289_we1;
reg    A_V_390_ce0;
wire   [7:0] A_V_390_q0;
reg    A_V_390_ce1;
reg    A_V_390_we1;
reg    A_V_491_ce0;
wire   [7:0] A_V_491_q0;
reg    A_V_491_ce1;
reg    A_V_491_we1;
reg    A_V_5_ce0;
wire   [7:0] A_V_5_q0;
reg    A_V_5_ce1;
reg    A_V_5_we1;
reg    A_V_6_ce0;
wire   [7:0] A_V_6_q0;
reg    A_V_6_ce1;
reg    A_V_6_we1;
reg    A_V_7_ce0;
wire   [7:0] A_V_7_q0;
reg    A_V_7_ce1;
reg    A_V_7_we1;
reg    A_V_8_ce0;
wire   [7:0] A_V_8_q0;
reg    A_V_8_ce1;
reg    A_V_8_we1;
reg    A_V_9_ce0;
wire   [7:0] A_V_9_q0;
reg    A_V_9_ce1;
reg    A_V_9_we1;
reg    A_V_10_ce0;
wire   [7:0] A_V_10_q0;
reg    A_V_10_ce1;
reg    A_V_10_we1;
reg    A_V_11_ce0;
wire   [7:0] A_V_11_q0;
reg    A_V_11_ce1;
reg    A_V_11_we1;
reg    A_V_12_ce0;
wire   [7:0] A_V_12_q0;
reg    A_V_12_ce1;
reg    A_V_12_we1;
reg    A_V_13_ce0;
wire   [7:0] A_V_13_q0;
reg    A_V_13_ce1;
reg    A_V_13_we1;
reg    A_V_14_ce0;
wire   [7:0] A_V_14_q0;
reg    A_V_14_ce1;
reg    A_V_14_we1;
reg    A_V_15_ce0;
wire   [7:0] A_V_15_q0;
reg    A_V_15_ce1;
reg    A_V_15_we1;
reg    A_V_16_ce0;
wire   [7:0] A_V_16_q0;
reg    A_V_16_ce1;
reg    A_V_16_we1;
reg    A_V_17_ce0;
wire   [7:0] A_V_17_q0;
reg    A_V_17_ce1;
reg    A_V_17_we1;
reg    A_V_18_ce0;
wire   [7:0] A_V_18_q0;
reg    A_V_18_ce1;
reg    A_V_18_we1;
reg    A_V_19_ce0;
wire   [7:0] A_V_19_q0;
reg    A_V_19_ce1;
reg    A_V_19_we1;
reg    A_V_20_ce0;
wire   [7:0] A_V_20_q0;
reg    A_V_20_ce1;
reg    A_V_20_we1;
reg    A_V_21_ce0;
wire   [7:0] A_V_21_q0;
reg    A_V_21_ce1;
reg    A_V_21_we1;
reg    A_V_22_ce0;
wire   [7:0] A_V_22_q0;
reg    A_V_22_ce1;
reg    A_V_22_we1;
reg    A_V_23_ce0;
wire   [7:0] A_V_23_q0;
reg    A_V_23_ce1;
reg    A_V_23_we1;
reg    A_V_24_ce0;
wire   [7:0] A_V_24_q0;
reg    A_V_24_ce1;
reg    A_V_24_we1;
reg    A_V_25_ce0;
wire   [7:0] A_V_25_q0;
reg    A_V_25_ce1;
reg    A_V_25_we1;
reg    A_V_26_ce0;
wire   [7:0] A_V_26_q0;
reg    A_V_26_ce1;
reg    A_V_26_we1;
reg    A_V_27_ce0;
wire   [7:0] A_V_27_q0;
reg    A_V_27_ce1;
reg    A_V_27_we1;
reg    B_V_0_ce0;
wire   [7:0] B_V_0_q0;
wire   [5:0] B_V_0_address1;
reg    B_V_0_ce1;
reg    B_V_0_we1;
reg    B_V_192_ce0;
wire   [7:0] B_V_192_q0;
wire   [5:0] B_V_192_address1;
reg    B_V_192_ce1;
reg    B_V_192_we1;
reg    B_V_293_ce0;
wire   [7:0] B_V_293_q0;
wire   [5:0] B_V_293_address1;
reg    B_V_293_ce1;
reg    B_V_293_we1;
reg    stream_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_flatten_reg_2433;
reg   [0:0] exitcond_flatten_reg_2433_pp1_iter1_reg;
wire    ap_CS_fsm_state22;
wire   [0:0] exitcond6_fu_1283_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_68_reg_1868;
reg    stream_out_V_V_blk_n;
wire    ap_CS_fsm_state27;
wire   [0:0] exitcond1_fu_1385_p2;
reg   [30:0] i7_reg_1004;
reg   [7:0] indvar_flatten2_reg_1130;
reg   [4:0] i_reg_1141;
reg   [3:0] indvar_flatten_reg_1152;
reg   [2:0] ka_reg_1163;
reg   [2:0] kb_reg_1175;
reg   [15:0] tmp_V_reg_1803;
reg    ap_block_state1;
reg   [15:0] tmp_V_76_reg_1809;
reg    ap_block_state2;
reg  signed [15:0] tmp_V_78_reg_1814;
reg    ap_block_state3;
reg  signed [15:0] tmp_V_80_reg_1819;
reg    ap_block_state4;
reg  signed [15:0] tmp_V_84_reg_1824;
reg    ap_block_state6;
wire   [0:0] tmp_s_fu_1186_p2;
reg    ap_block_state7;
wire   [0:0] tmp_62_fu_1191_p2;
wire  signed [31:0] tmp_65_fu_1202_p1;
wire  signed [31:0] grp_fu_1791_p2;
reg  signed [31:0] tmp3_reg_1853;
wire    ap_CS_fsm_state9;
wire  signed [31:0] grp_fu_1797_p2;
reg  signed [31:0] tmp4_reg_1858;
wire   [31:0] grp_fu_1205_p2;
reg   [31:0] KER_bound_reg_1863;
wire    ap_CS_fsm_state16;
wire   [0:0] tmp_68_fu_1213_p2;
wire    ap_block_state17_pp0_stage0_iter0;
reg    ap_block_state18_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [30:0] i_s_fu_1218_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [14:0] num_img_1_fu_1233_p2;
reg   [14:0] num_img_1_reg_1880;
wire    ap_CS_fsm_state20;
wire   [4:0] j_fu_1245_p2;
reg   [4:0] j_reg_1888;
wire    ap_CS_fsm_state21;
reg   [4:0] A_V_0_addr_reg_1893;
wire   [0:0] exitcond3_fu_1239_p2;
reg   [4:0] A_V_10_addr_reg_1898;
reg   [4:0] A_V_11_addr_reg_1903;
reg   [4:0] A_V_12_addr_reg_1908;
reg   [4:0] A_V_13_addr_reg_1913;
reg   [4:0] A_V_14_addr_reg_1918;
reg   [4:0] A_V_15_addr_reg_1923;
reg   [4:0] A_V_16_addr_reg_1928;
reg   [4:0] A_V_17_addr_reg_1933;
reg   [4:0] A_V_18_addr_reg_1938;
reg   [4:0] A_V_188_addr_reg_1943;
reg   [4:0] A_V_19_addr_reg_1948;
reg   [4:0] A_V_20_addr_reg_1953;
reg   [4:0] A_V_21_addr_reg_1958;
reg   [4:0] A_V_22_addr_reg_1963;
reg   [4:0] A_V_23_addr_reg_1968;
reg   [4:0] A_V_24_addr_reg_1973;
reg   [4:0] A_V_25_addr_reg_1978;
reg   [4:0] A_V_26_addr_reg_1983;
reg   [4:0] A_V_27_addr_reg_1988;
reg   [4:0] A_V_289_addr_reg_1993;
reg   [4:0] A_V_390_addr_reg_1998;
reg   [4:0] A_V_491_addr_reg_2003;
reg   [4:0] A_V_5_addr_reg_2008;
reg   [4:0] A_V_6_addr_reg_2013;
reg   [4:0] A_V_7_addr_reg_2018;
reg   [4:0] A_V_8_addr_reg_2023;
reg   [4:0] A_V_9_addr_reg_2028;
wire   [4:0] k_4_fu_1289_p2;
reg   [4:0] k_4_reg_2036;
reg    ap_block_state22;
wire   [4:0] ia_3_fu_1339_p2;
wire    ap_CS_fsm_state25;
wire   [0:0] exitcond5_fu_1333_p2;
wire   [4:0] i_3_fu_1351_p2;
reg   [4:0] i_3_reg_2055;
wire    ap_CS_fsm_state26;
wire   [6:0] tmp_141_fu_1369_p2;
reg   [6:0] tmp_141_reg_2060;
wire   [0:0] exitcond7_fu_1345_p2;
wire   [4:0] ib_3_fu_1375_p2;
wire   [1:0] ka_4_fu_1391_p2;
reg   [1:0] ka_4_reg_2073;
reg    ap_block_state27;
reg   [4:0] A_V_0_addr_1_reg_2078;
reg   [4:0] A_V_10_addr_1_reg_2083;
reg   [4:0] A_V_11_addr_1_reg_2088;
reg   [4:0] A_V_12_addr_1_reg_2093;
reg   [4:0] A_V_13_addr_1_reg_2098;
reg   [4:0] A_V_14_addr_1_reg_2103;
reg   [4:0] A_V_15_addr_1_reg_2108;
reg   [4:0] A_V_16_addr_1_reg_2113;
reg   [4:0] A_V_17_addr_1_reg_2118;
reg   [4:0] A_V_18_addr_1_reg_2123;
reg   [4:0] A_V_188_addr_1_reg_2128;
reg   [4:0] A_V_19_addr_1_reg_2133;
reg   [4:0] A_V_20_addr_1_reg_2138;
reg   [4:0] A_V_21_addr_1_reg_2143;
reg   [4:0] A_V_22_addr_1_reg_2148;
reg   [4:0] A_V_23_addr_1_reg_2153;
reg   [4:0] A_V_24_addr_1_reg_2158;
reg   [4:0] A_V_25_addr_1_reg_2163;
reg   [4:0] A_V_26_addr_1_reg_2168;
reg   [4:0] A_V_27_addr_1_reg_2173;
reg   [4:0] A_V_289_addr_1_reg_2178;
reg   [4:0] A_V_390_addr_1_reg_2183;
reg   [4:0] A_V_491_addr_1_reg_2188;
reg   [4:0] A_V_5_addr_1_reg_2193;
reg   [4:0] A_V_6_addr_1_reg_2198;
reg   [4:0] A_V_7_addr_1_reg_2203;
reg   [4:0] A_V_8_addr_1_reg_2208;
reg   [4:0] A_V_9_addr_1_reg_2213;
reg   [5:0] B_V_0_addr_1_reg_2218;
reg   [5:0] B_V_192_addr_1_reg_2223;
reg   [5:0] B_V_293_addr_1_reg_2228;
wire   [1:0] kb_4_fu_1492_p2;
reg   [1:0] kb_4_reg_2236;
wire    ap_CS_fsm_state28;
wire   [4:0] tmp_120_0_t_fu_1512_p2;
reg   [4:0] tmp_120_0_t_reg_2241;
wire    ap_CS_fsm_state29;
reg   [7:0] A_V_0_load_reg_2246;
reg   [7:0] A_V_188_load_reg_2251;
reg   [7:0] A_V_289_load_reg_2256;
reg   [7:0] A_V_390_load_reg_2261;
reg   [7:0] A_V_491_load_reg_2266;
reg   [7:0] A_V_5_load_reg_2271;
reg   [7:0] A_V_6_load_reg_2276;
reg   [7:0] A_V_7_load_reg_2281;
reg   [7:0] A_V_8_load_reg_2286;
reg   [7:0] A_V_9_load_reg_2291;
reg   [7:0] A_V_10_load_reg_2296;
reg   [7:0] A_V_11_load_reg_2301;
reg   [7:0] A_V_12_load_reg_2306;
reg   [7:0] A_V_13_load_reg_2311;
reg   [7:0] A_V_14_load_reg_2316;
reg   [7:0] A_V_15_load_reg_2321;
reg   [7:0] A_V_16_load_reg_2326;
reg   [7:0] A_V_17_load_reg_2331;
reg   [7:0] A_V_18_load_reg_2336;
reg   [7:0] A_V_19_load_reg_2341;
reg   [7:0] A_V_20_load_reg_2346;
reg   [7:0] A_V_21_load_reg_2351;
reg   [7:0] A_V_22_load_reg_2356;
reg   [7:0] A_V_23_load_reg_2361;
reg   [7:0] A_V_24_load_reg_2366;
reg   [7:0] A_V_25_load_reg_2371;
reg   [7:0] A_V_26_load_reg_2376;
reg   [7:0] A_V_27_load_reg_2381;
reg   [7:0] B_V_0_load_reg_2386;
reg   [7:0] B_V_192_load_reg_2391;
reg   [7:0] B_V_293_load_reg_2396;
wire   [7:0] tmp_31_fu_1518_p30;
reg   [7:0] tmp_31_reg_2401;
wire    ap_CS_fsm_state30;
wire   [7:0] tmp_32_fu_1551_p5;
reg   [7:0] tmp_32_reg_2406;
wire   [15:0] r_V_4_fu_1566_p2;
reg   [15:0] r_V_4_reg_2411;
wire    ap_CS_fsm_state31;
reg   [7:0] tmp_129_reg_2418;
wire    ap_CS_fsm_state32;
wire   [7:0] tmp_130_fu_1591_p2;
reg   [7:0] tmp_130_reg_2423;
wire    ap_CS_fsm_state33;
wire   [7:0] buf_V_fu_1619_p2;
wire    ap_CS_fsm_state34;
wire   [0:0] exitcond_flatten_fu_1625_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state35_pp1_stage0_iter0;
wire    ap_block_state36_pp1_stage0_iter1;
reg    ap_block_state37_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [7:0] indvar_flatten_next1_fu_1631_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten10_fu_1643_p2;
reg   [0:0] exitcond_flatten10_reg_2442;
reg   [0:0] exitcond_flatten10_reg_2442_pp1_iter1_reg;
wire   [4:0] tmp_63_mid2_v_fu_1657_p3;
reg   [4:0] tmp_63_mid2_v_reg_2448;
wire   [0:0] tmp_109_mid_fu_1679_p2;
reg   [0:0] tmp_109_mid_reg_2455;
reg   [0:0] tmp_109_mid_reg_2455_pp1_iter1_reg;
wire  signed [2:0] kb_mid2_fu_1685_p3;
reg  signed [2:0] kb_mid2_reg_2461;
wire   [3:0] indvar_flatten_next_fu_1699_p3;
wire   [2:0] ka_3_fu_1730_p2;
reg   [2:0] ka_3_reg_2472;
wire   [2:0] ka_mid2_fu_1736_p3;
reg   [2:0] ka_mid2_reg_2477;
reg    ap_enable_reg_pp1_iter1;
wire   [6:0] tmp_134_fu_1746_p2;
reg   [6:0] tmp_134_reg_2482;
wire   [2:0] kb_3_fu_1752_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state17;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state35;
reg   [14:0] num_img_reg_1015;
wire    ap_CS_fsm_state24;
wire   [0:0] exitcond4_fu_1327_p2;
reg   [4:0] j1_reg_1026;
wire   [0:0] tmp_67_fu_1228_p2;
wire   [4:0] ap_phi_mux_k_phi_fu_1041_p4;
reg   [4:0] k_reg_1037;
wire    ap_CS_fsm_state23;
reg   [4:0] ia_reg_1048;
reg   [4:0] ib_reg_1060;
reg   [4:0] i3_reg_1072;
reg   [7:0] p_0144_1_reg_1083;
wire   [0:0] exitcond8_fu_1486_p2;
reg   [1:0] ka5_reg_1095;
reg   [7:0] p_0144_2_reg_1106;
reg   [1:0] kb6_reg_1118;
reg   [4:0] ap_phi_mux_i_phi_fu_1145_p4;
reg   [2:0] ap_phi_mux_ka_phi_fu_1167_p4;
reg   [2:0] ap_phi_mux_kb_phi_fu_1179_p4;
wire   [63:0] tmp_69_fu_1251_p1;
wire   [63:0] tmp_117_fu_1413_p1;
wire  signed [63:0] tmp_145_cast_fu_1454_p1;
wire  signed [63:0] tmp_142_cast_fu_1778_p1;
reg    ap_block_state5;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] Outbuf_V_fu_1481_p1;
reg    ap_block_pp1_stage0_01001;
wire   [7:0] tmp_139_fu_1295_p1;
wire   [1:0] ka_0_t_mid2_fu_1771_p3;
wire   [7:0] tmp_138_fu_1784_p1;
wire    ap_CS_fsm_state10;
wire   [31:0] i7_cast_fu_1209_p1;
wire   [15:0] num_img_cast_fu_1224_p1;
wire   [6:0] tmp_140_fu_1361_p3;
wire   [6:0] tmp_70_cast_fu_1357_p1;
wire   [2:0] ka5_cast_cast_fu_1381_p1;
wire   [2:0] tmp1_fu_1397_p2;
wire  signed [4:0] tmp1_cast_fu_1403_p1;
wire   [4:0] tmp_116_fu_1407_p2;
wire   [6:0] tmp_118_cast_fu_1445_p1;
wire   [6:0] tmp_144_fu_1449_p2;
wire   [0:0] tmp_143_fu_1465_p3;
wire   [6:0] tmp_142_fu_1461_p1;
wire   [6:0] x_V_y_V_i_fu_1473_p3;
wire   [2:0] tmp_131_cast_fu_1498_p1;
wire   [2:0] tmp2_fu_1502_p2;
wire  signed [4:0] tmp2_cast_fu_1508_p1;
wire  signed [7:0] r_V_4_fu_1566_p0;
wire  signed [7:0] r_V_4_fu_1566_p1;
wire   [16:0] tmp_123_tr_s_fu_1572_p1;
wire   [16:0] p_neg_fu_1575_p2;
wire   [0:0] tmp_145_fu_1596_p3;
wire   [7:0] tmp_131_fu_1603_p4;
wire   [7:0] tmp_132_fu_1612_p3;
wire   [4:0] i_4_fu_1637_p2;
wire   [0:0] tmp_136_fu_1665_p3;
wire   [0:0] rev_fu_1673_p2;
wire   [2:0] kb_mid_fu_1649_p3;
wire   [3:0] indvar_flatten_op_fu_1693_p2;
wire   [6:0] tmp_128_fu_1717_p3;
wire   [6:0] tmp_63_mid2_cast_fu_1714_p1;
wire   [2:0] ka_mid_fu_1707_p3;
wire   [6:0] tmp_133_fu_1724_p2;
wire  signed [6:0] tmp_111_cast_fu_1743_p1;
wire   [1:0] tmp_135_fu_1757_p1;
wire   [1:0] ka_0_t_mid_fu_1761_p3;
wire   [1:0] tmp_137_fu_1768_p1;
wire  signed [15:0] grp_fu_1791_p0;
wire  signed [15:0] grp_fu_1791_p1;
reg    grp_fu_1791_ce;
wire    ap_CS_fsm_state8;
reg    grp_fu_1797_ce;
wire    ap_CS_fsm_state19;
reg   [34:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 35'd1;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_0_addr_1_reg_2078),
    .ce0(A_V_0_ce0),
    .q0(A_V_0_q0),
    .address1(A_V_0_addr_reg_1893),
    .ce1(A_V_0_ce1),
    .we1(A_V_0_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_188_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_188_addr_1_reg_2128),
    .ce0(A_V_188_ce0),
    .q0(A_V_188_q0),
    .address1(A_V_188_addr_reg_1943),
    .ce1(A_V_188_ce1),
    .we1(A_V_188_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_289_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_289_addr_1_reg_2178),
    .ce0(A_V_289_ce0),
    .q0(A_V_289_q0),
    .address1(A_V_289_addr_reg_1993),
    .ce1(A_V_289_ce1),
    .we1(A_V_289_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_390_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_390_addr_1_reg_2183),
    .ce0(A_V_390_ce0),
    .q0(A_V_390_q0),
    .address1(A_V_390_addr_reg_1998),
    .ce1(A_V_390_ce1),
    .we1(A_V_390_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_491_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_491_addr_1_reg_2188),
    .ce0(A_V_491_ce0),
    .q0(A_V_491_q0),
    .address1(A_V_491_addr_reg_2003),
    .ce1(A_V_491_ce1),
    .we1(A_V_491_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_addr_1_reg_2193),
    .ce0(A_V_5_ce0),
    .q0(A_V_5_q0),
    .address1(A_V_5_addr_reg_2008),
    .ce1(A_V_5_ce1),
    .we1(A_V_5_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_6_addr_1_reg_2198),
    .ce0(A_V_6_ce0),
    .q0(A_V_6_q0),
    .address1(A_V_6_addr_reg_2013),
    .ce1(A_V_6_ce1),
    .we1(A_V_6_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_addr_1_reg_2203),
    .ce0(A_V_7_ce0),
    .q0(A_V_7_q0),
    .address1(A_V_7_addr_reg_2018),
    .ce1(A_V_7_ce1),
    .we1(A_V_7_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_8_addr_1_reg_2208),
    .ce0(A_V_8_ce0),
    .q0(A_V_8_q0),
    .address1(A_V_8_addr_reg_2023),
    .ce1(A_V_8_ce1),
    .we1(A_V_8_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_9_addr_1_reg_2213),
    .ce0(A_V_9_ce0),
    .q0(A_V_9_q0),
    .address1(A_V_9_addr_reg_2028),
    .ce1(A_V_9_ce1),
    .we1(A_V_9_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_10_addr_1_reg_2083),
    .ce0(A_V_10_ce0),
    .q0(A_V_10_q0),
    .address1(A_V_10_addr_reg_1898),
    .ce1(A_V_10_ce1),
    .we1(A_V_10_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_11_addr_1_reg_2088),
    .ce0(A_V_11_ce0),
    .q0(A_V_11_q0),
    .address1(A_V_11_addr_reg_1903),
    .ce1(A_V_11_ce1),
    .we1(A_V_11_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_12_addr_1_reg_2093),
    .ce0(A_V_12_ce0),
    .q0(A_V_12_q0),
    .address1(A_V_12_addr_reg_1908),
    .ce1(A_V_12_ce1),
    .we1(A_V_12_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_13_addr_1_reg_2098),
    .ce0(A_V_13_ce0),
    .q0(A_V_13_q0),
    .address1(A_V_13_addr_reg_1913),
    .ce1(A_V_13_ce1),
    .we1(A_V_13_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_14_addr_1_reg_2103),
    .ce0(A_V_14_ce0),
    .q0(A_V_14_q0),
    .address1(A_V_14_addr_reg_1918),
    .ce1(A_V_14_ce1),
    .we1(A_V_14_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_15_addr_1_reg_2108),
    .ce0(A_V_15_ce0),
    .q0(A_V_15_q0),
    .address1(A_V_15_addr_reg_1923),
    .ce1(A_V_15_ce1),
    .we1(A_V_15_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_16_addr_1_reg_2113),
    .ce0(A_V_16_ce0),
    .q0(A_V_16_q0),
    .address1(A_V_16_addr_reg_1928),
    .ce1(A_V_16_ce1),
    .we1(A_V_16_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_17_addr_1_reg_2118),
    .ce0(A_V_17_ce0),
    .q0(A_V_17_q0),
    .address1(A_V_17_addr_reg_1933),
    .ce1(A_V_17_ce1),
    .we1(A_V_17_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_18_addr_1_reg_2123),
    .ce0(A_V_18_ce0),
    .q0(A_V_18_q0),
    .address1(A_V_18_addr_reg_1938),
    .ce1(A_V_18_ce1),
    .we1(A_V_18_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_19_addr_1_reg_2133),
    .ce0(A_V_19_ce0),
    .q0(A_V_19_q0),
    .address1(A_V_19_addr_reg_1948),
    .ce1(A_V_19_ce1),
    .we1(A_V_19_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_20_addr_1_reg_2138),
    .ce0(A_V_20_ce0),
    .q0(A_V_20_q0),
    .address1(A_V_20_addr_reg_1953),
    .ce1(A_V_20_ce1),
    .we1(A_V_20_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_21_addr_1_reg_2143),
    .ce0(A_V_21_ce0),
    .q0(A_V_21_q0),
    .address1(A_V_21_addr_reg_1958),
    .ce1(A_V_21_ce1),
    .we1(A_V_21_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_22_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_22_addr_1_reg_2148),
    .ce0(A_V_22_ce0),
    .q0(A_V_22_q0),
    .address1(A_V_22_addr_reg_1963),
    .ce1(A_V_22_ce1),
    .we1(A_V_22_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_23_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_23_addr_1_reg_2153),
    .ce0(A_V_23_ce0),
    .q0(A_V_23_q0),
    .address1(A_V_23_addr_reg_1968),
    .ce1(A_V_23_ce1),
    .we1(A_V_23_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_24_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_24_addr_1_reg_2158),
    .ce0(A_V_24_ce0),
    .q0(A_V_24_q0),
    .address1(A_V_24_addr_reg_1973),
    .ce1(A_V_24_ce1),
    .we1(A_V_24_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_25_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_25_addr_1_reg_2163),
    .ce0(A_V_25_ce0),
    .q0(A_V_25_q0),
    .address1(A_V_25_addr_reg_1978),
    .ce1(A_V_25_ce1),
    .we1(A_V_25_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_26_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_26_addr_1_reg_2168),
    .ce0(A_V_26_ce0),
    .q0(A_V_26_q0),
    .address1(A_V_26_addr_reg_1983),
    .ce1(A_V_26_ce1),
    .we1(A_V_26_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_dEe #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
A_V_27_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_27_addr_1_reg_2173),
    .ce0(A_V_27_ce0),
    .q0(A_V_27_q0),
    .address1(A_V_27_addr_reg_1988),
    .ce1(A_V_27_ce1),
    .we1(A_V_27_we1),
    .d1(tmp_139_fu_1295_p1)
);

Conv_1_28_16_3_s_Ffa #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
B_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_0_addr_1_reg_2218),
    .ce0(B_V_0_ce0),
    .q0(B_V_0_q0),
    .address1(B_V_0_address1),
    .ce1(B_V_0_ce1),
    .we1(B_V_0_we1),
    .d1(tmp_138_fu_1784_p1)
);

Conv_1_28_16_3_s_Ffa #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
B_V_192_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_192_addr_1_reg_2223),
    .ce0(B_V_192_ce0),
    .q0(B_V_192_q0),
    .address1(B_V_192_address1),
    .ce1(B_V_192_ce1),
    .we1(B_V_192_we1),
    .d1(tmp_138_fu_1784_p1)
);

Conv_1_28_16_3_s_Ffa #(
    .DataWidth( 8 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
B_V_293_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_293_addr_1_reg_2228),
    .ce0(B_V_293_ce0),
    .q0(B_V_293_q0),
    .address1(B_V_293_address1),
    .ce1(B_V_293_ce1),
    .we1(B_V_293_we1),
    .d1(tmp_138_fu_1784_p1)
);

cnn_mul_32s_32s_3bkb #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cnn_mul_32s_32s_3bkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp4_reg_1858),
    .din1(tmp3_reg_1853),
    .ce(1'b1),
    .dout(grp_fu_1205_p2)
);

cnn_mux_285_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
cnn_mux_285_8_1_1_U13(
    .din0(A_V_0_load_reg_2246),
    .din1(A_V_188_load_reg_2251),
    .din2(A_V_289_load_reg_2256),
    .din3(A_V_390_load_reg_2261),
    .din4(A_V_491_load_reg_2266),
    .din5(A_V_5_load_reg_2271),
    .din6(A_V_6_load_reg_2276),
    .din7(A_V_7_load_reg_2281),
    .din8(A_V_8_load_reg_2286),
    .din9(A_V_9_load_reg_2291),
    .din10(A_V_10_load_reg_2296),
    .din11(A_V_11_load_reg_2301),
    .din12(A_V_12_load_reg_2306),
    .din13(A_V_13_load_reg_2311),
    .din14(A_V_14_load_reg_2316),
    .din15(A_V_15_load_reg_2321),
    .din16(A_V_16_load_reg_2326),
    .din17(A_V_17_load_reg_2331),
    .din18(A_V_18_load_reg_2336),
    .din19(A_V_19_load_reg_2341),
    .din20(A_V_20_load_reg_2346),
    .din21(A_V_21_load_reg_2351),
    .din22(A_V_22_load_reg_2356),
    .din23(A_V_23_load_reg_2361),
    .din24(A_V_24_load_reg_2366),
    .din25(A_V_25_load_reg_2371),
    .din26(A_V_26_load_reg_2376),
    .din27(A_V_27_load_reg_2381),
    .din28(tmp_120_0_t_reg_2241),
    .dout(tmp_31_fu_1518_p30)
);

cnn_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
cnn_mux_32_8_1_1_U14(
    .din0(B_V_0_load_reg_2386),
    .din1(B_V_192_load_reg_2391),
    .din2(B_V_293_load_reg_2396),
    .din3(kb6_reg_1118),
    .dout(tmp_32_fu_1551_p5)
);

cnn_mul_mul_16s_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cnn_mul_mul_16s_1cud_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1791_p0),
    .din1(grp_fu_1791_p1),
    .ce(grp_fu_1791_ce),
    .dout(grp_fu_1791_p2)
);

cnn_mul_mul_16s_1cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cnn_mul_mul_16s_1cud_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_V_80_reg_1819),
    .din1(tmp_V_84_reg_1824),
    .ce(grp_fu_1797_ce),
    .dout(grp_fu_1797_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state35) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1186_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state35)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state35);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1186_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5_fu_1333_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        i3_reg_1072 <= 5'd0;
    end else if ((~((exitcond1_fu_1385_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        i3_reg_1072 <= i_3_reg_2055;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_68_fu_1213_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i7_reg_1004 <= i_s_fu_1218_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i7_reg_1004 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1186_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_reg_1141 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2433 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_reg_1141 <= tmp_63_mid2_v_reg_2448;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        ia_reg_1048 <= 5'd1;
    end else if (((exitcond5_fu_1333_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        ia_reg_1048 <= ia_3_fu_1339_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond4_fu_1327_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        ib_reg_1060 <= 5'd1;
    end else if (((exitcond7_fu_1345_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        ib_reg_1060 <= ib_3_fu_1375_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1186_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        indvar_flatten2_reg_1130 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_fu_1625_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten2_reg_1130 <= indvar_flatten_next1_fu_1631_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1186_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        indvar_flatten_reg_1152 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_fu_1625_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_1152 <= indvar_flatten_next_fu_1699_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (exitcond6_fu_1283_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        j1_reg_1026 <= j_reg_1888;
    end else if (((tmp_67_fu_1228_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        j1_reg_1026 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        k_reg_1037 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        k_reg_1037 <= k_4_reg_2036;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_1486_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        ka5_reg_1095 <= ka_4_reg_2073;
    end else if (((exitcond7_fu_1345_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        ka5_reg_1095 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1186_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        ka_reg_1163 <= 3'd2;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ka_reg_1163 <= ka_mid2_reg_2477;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_1385_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        kb6_reg_1118 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        kb6_reg_1118 <= kb_4_reg_2236;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1186_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        kb_reg_1175 <= 3'd2;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2433 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        kb_reg_1175 <= kb_3_fu_1752_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_62_fu_1191_p2 == 1'd1) & (tmp_s_fu_1186_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        num_img_reg_1015 <= 15'd0;
    end else if (((exitcond4_fu_1327_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        num_img_reg_1015 <= num_img_1_reg_1880;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond8_fu_1486_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
        p_0144_1_reg_1083 <= p_0144_2_reg_1106;
    end else if (((exitcond7_fu_1345_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        p_0144_1_reg_1083 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_1385_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        p_0144_2_reg_1106 <= p_0144_1_reg_1083;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        p_0144_2_reg_1106 <= buf_V_fu_1619_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_1385_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        A_V_0_addr_1_reg_2078 <= tmp_117_fu_1413_p1;
        A_V_10_addr_1_reg_2083 <= tmp_117_fu_1413_p1;
        A_V_11_addr_1_reg_2088 <= tmp_117_fu_1413_p1;
        A_V_12_addr_1_reg_2093 <= tmp_117_fu_1413_p1;
        A_V_13_addr_1_reg_2098 <= tmp_117_fu_1413_p1;
        A_V_14_addr_1_reg_2103 <= tmp_117_fu_1413_p1;
        A_V_15_addr_1_reg_2108 <= tmp_117_fu_1413_p1;
        A_V_16_addr_1_reg_2113 <= tmp_117_fu_1413_p1;
        A_V_17_addr_1_reg_2118 <= tmp_117_fu_1413_p1;
        A_V_188_addr_1_reg_2128 <= tmp_117_fu_1413_p1;
        A_V_18_addr_1_reg_2123 <= tmp_117_fu_1413_p1;
        A_V_19_addr_1_reg_2133 <= tmp_117_fu_1413_p1;
        A_V_20_addr_1_reg_2138 <= tmp_117_fu_1413_p1;
        A_V_21_addr_1_reg_2143 <= tmp_117_fu_1413_p1;
        A_V_22_addr_1_reg_2148 <= tmp_117_fu_1413_p1;
        A_V_23_addr_1_reg_2153 <= tmp_117_fu_1413_p1;
        A_V_24_addr_1_reg_2158 <= tmp_117_fu_1413_p1;
        A_V_25_addr_1_reg_2163 <= tmp_117_fu_1413_p1;
        A_V_26_addr_1_reg_2168 <= tmp_117_fu_1413_p1;
        A_V_27_addr_1_reg_2173 <= tmp_117_fu_1413_p1;
        A_V_289_addr_1_reg_2178 <= tmp_117_fu_1413_p1;
        A_V_390_addr_1_reg_2183 <= tmp_117_fu_1413_p1;
        A_V_491_addr_1_reg_2188 <= tmp_117_fu_1413_p1;
        A_V_5_addr_1_reg_2193 <= tmp_117_fu_1413_p1;
        A_V_6_addr_1_reg_2198 <= tmp_117_fu_1413_p1;
        A_V_7_addr_1_reg_2203 <= tmp_117_fu_1413_p1;
        A_V_8_addr_1_reg_2208 <= tmp_117_fu_1413_p1;
        A_V_9_addr_1_reg_2213 <= tmp_117_fu_1413_p1;
        B_V_0_addr_1_reg_2218 <= tmp_145_cast_fu_1454_p1;
        B_V_192_addr_1_reg_2223 <= tmp_145_cast_fu_1454_p1;
        B_V_293_addr_1_reg_2228 <= tmp_145_cast_fu_1454_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_1239_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        A_V_0_addr_reg_1893 <= tmp_69_fu_1251_p1;
        A_V_10_addr_reg_1898 <= tmp_69_fu_1251_p1;
        A_V_11_addr_reg_1903 <= tmp_69_fu_1251_p1;
        A_V_12_addr_reg_1908 <= tmp_69_fu_1251_p1;
        A_V_13_addr_reg_1913 <= tmp_69_fu_1251_p1;
        A_V_14_addr_reg_1918 <= tmp_69_fu_1251_p1;
        A_V_15_addr_reg_1923 <= tmp_69_fu_1251_p1;
        A_V_16_addr_reg_1928 <= tmp_69_fu_1251_p1;
        A_V_17_addr_reg_1933 <= tmp_69_fu_1251_p1;
        A_V_188_addr_reg_1943 <= tmp_69_fu_1251_p1;
        A_V_18_addr_reg_1938 <= tmp_69_fu_1251_p1;
        A_V_19_addr_reg_1948 <= tmp_69_fu_1251_p1;
        A_V_20_addr_reg_1953 <= tmp_69_fu_1251_p1;
        A_V_21_addr_reg_1958 <= tmp_69_fu_1251_p1;
        A_V_22_addr_reg_1963 <= tmp_69_fu_1251_p1;
        A_V_23_addr_reg_1968 <= tmp_69_fu_1251_p1;
        A_V_24_addr_reg_1973 <= tmp_69_fu_1251_p1;
        A_V_25_addr_reg_1978 <= tmp_69_fu_1251_p1;
        A_V_26_addr_reg_1983 <= tmp_69_fu_1251_p1;
        A_V_27_addr_reg_1988 <= tmp_69_fu_1251_p1;
        A_V_289_addr_reg_1993 <= tmp_69_fu_1251_p1;
        A_V_390_addr_reg_1998 <= tmp_69_fu_1251_p1;
        A_V_491_addr_reg_2003 <= tmp_69_fu_1251_p1;
        A_V_5_addr_reg_2008 <= tmp_69_fu_1251_p1;
        A_V_6_addr_reg_2013 <= tmp_69_fu_1251_p1;
        A_V_7_addr_reg_2018 <= tmp_69_fu_1251_p1;
        A_V_8_addr_reg_2023 <= tmp_69_fu_1251_p1;
        A_V_9_addr_reg_2028 <= tmp_69_fu_1251_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_0_load_reg_2246 <= A_V_0_q0;
        A_V_10_load_reg_2296 <= A_V_10_q0;
        A_V_11_load_reg_2301 <= A_V_11_q0;
        A_V_12_load_reg_2306 <= A_V_12_q0;
        A_V_13_load_reg_2311 <= A_V_13_q0;
        A_V_14_load_reg_2316 <= A_V_14_q0;
        A_V_15_load_reg_2321 <= A_V_15_q0;
        A_V_16_load_reg_2326 <= A_V_16_q0;
        A_V_17_load_reg_2331 <= A_V_17_q0;
        A_V_188_load_reg_2251 <= A_V_188_q0;
        A_V_18_load_reg_2336 <= A_V_18_q0;
        A_V_19_load_reg_2341 <= A_V_19_q0;
        A_V_20_load_reg_2346 <= A_V_20_q0;
        A_V_21_load_reg_2351 <= A_V_21_q0;
        A_V_22_load_reg_2356 <= A_V_22_q0;
        A_V_23_load_reg_2361 <= A_V_23_q0;
        A_V_24_load_reg_2366 <= A_V_24_q0;
        A_V_25_load_reg_2371 <= A_V_25_q0;
        A_V_26_load_reg_2376 <= A_V_26_q0;
        A_V_27_load_reg_2381 <= A_V_27_q0;
        A_V_289_load_reg_2256 <= A_V_289_q0;
        A_V_390_load_reg_2261 <= A_V_390_q0;
        A_V_491_load_reg_2266 <= A_V_491_q0;
        A_V_5_load_reg_2271 <= A_V_5_q0;
        A_V_6_load_reg_2276 <= A_V_6_q0;
        A_V_7_load_reg_2281 <= A_V_7_q0;
        A_V_8_load_reg_2286 <= A_V_8_q0;
        A_V_9_load_reg_2291 <= A_V_9_q0;
        B_V_0_load_reg_2386 <= B_V_0_q0;
        B_V_192_load_reg_2391 <= B_V_192_q0;
        B_V_293_load_reg_2396 <= B_V_293_q0;
        tmp_120_0_t_reg_2241 <= tmp_120_0_t_fu_1512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        KER_bound_reg_1863 <= grp_fu_1205_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_fu_1625_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten10_reg_2442 <= exitcond_flatten10_fu_1643_p2;
        kb_mid2_reg_2461 <= kb_mid2_fu_1685_p3;
        tmp_109_mid_reg_2455 <= tmp_109_mid_fu_1679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten10_reg_2442_pp1_iter1_reg <= exitcond_flatten10_reg_2442;
        exitcond_flatten_reg_2433 <= exitcond_flatten_fu_1625_p2;
        exitcond_flatten_reg_2433_pp1_iter1_reg <= exitcond_flatten_reg_2433;
        tmp_109_mid_reg_2455_pp1_iter1_reg <= tmp_109_mid_reg_2455;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        i_3_reg_2055 <= i_3_fu_1351_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j_reg_1888 <= j_fu_1245_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        k_4_reg_2036 <= k_4_fu_1289_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2433 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ka_3_reg_2472 <= ka_3_fu_1730_p2;
        tmp_134_reg_2482 <= tmp_134_fu_1746_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((exitcond1_fu_1385_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state27))) begin
        ka_4_reg_2073 <= ka_4_fu_1391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2433 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ka_mid2_reg_2477 <= ka_mid2_fu_1736_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        kb_4_reg_2236 <= kb_4_fu_1492_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        num_img_1_reg_1880 <= num_img_1_fu_1233_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        r_V_4_reg_2411 <= r_V_4_fu_1566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp3_reg_1853 <= grp_fu_1791_p2;
        tmp4_reg_1858 <= grp_fu_1797_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp_129_reg_2418 <= {{p_neg_fu_1575_p2[13:6]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tmp_130_reg_2423 <= tmp_130_fu_1591_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond7_fu_1345_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        tmp_141_reg_2060 <= tmp_141_fu_1369_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        tmp_31_reg_2401 <= tmp_31_fu_1518_p30;
        tmp_32_reg_2406 <= tmp_32_fu_1551_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_fu_1625_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_63_mid2_v_reg_2448 <= tmp_63_mid2_v_fu_1657_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_68_reg_1868 <= tmp_68_fu_1213_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_76_reg_1809 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_78_reg_1814 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_80_reg_1819 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_84_reg_1824 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_V_reg_1803 <= stream_in_V_V_dout;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_0_ce0 = 1'b1;
    end else begin
        A_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_0_ce1 = 1'b1;
    end else begin
        A_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd0) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_0_we1 = 1'b1;
    end else begin
        A_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_10_ce0 = 1'b1;
    end else begin
        A_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_10_ce1 = 1'b1;
    end else begin
        A_V_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd10) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_10_we1 = 1'b1;
    end else begin
        A_V_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_11_ce0 = 1'b1;
    end else begin
        A_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_11_ce1 = 1'b1;
    end else begin
        A_V_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd11) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_11_we1 = 1'b1;
    end else begin
        A_V_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_12_ce0 = 1'b1;
    end else begin
        A_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_12_ce1 = 1'b1;
    end else begin
        A_V_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd12) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_12_we1 = 1'b1;
    end else begin
        A_V_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_13_ce0 = 1'b1;
    end else begin
        A_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_13_ce1 = 1'b1;
    end else begin
        A_V_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd13) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_13_we1 = 1'b1;
    end else begin
        A_V_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_14_ce0 = 1'b1;
    end else begin
        A_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_14_ce1 = 1'b1;
    end else begin
        A_V_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd14) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_14_we1 = 1'b1;
    end else begin
        A_V_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_15_ce0 = 1'b1;
    end else begin
        A_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_15_ce1 = 1'b1;
    end else begin
        A_V_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd15) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_15_we1 = 1'b1;
    end else begin
        A_V_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_16_ce0 = 1'b1;
    end else begin
        A_V_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_16_ce1 = 1'b1;
    end else begin
        A_V_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd16) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_16_we1 = 1'b1;
    end else begin
        A_V_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_17_ce0 = 1'b1;
    end else begin
        A_V_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_17_ce1 = 1'b1;
    end else begin
        A_V_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd17) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_17_we1 = 1'b1;
    end else begin
        A_V_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_188_ce0 = 1'b1;
    end else begin
        A_V_188_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_188_ce1 = 1'b1;
    end else begin
        A_V_188_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd1) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_188_we1 = 1'b1;
    end else begin
        A_V_188_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_18_ce0 = 1'b1;
    end else begin
        A_V_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_18_ce1 = 1'b1;
    end else begin
        A_V_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd18) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_18_we1 = 1'b1;
    end else begin
        A_V_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_19_ce0 = 1'b1;
    end else begin
        A_V_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_19_ce1 = 1'b1;
    end else begin
        A_V_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd19) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_19_we1 = 1'b1;
    end else begin
        A_V_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_20_ce0 = 1'b1;
    end else begin
        A_V_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_20_ce1 = 1'b1;
    end else begin
        A_V_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd20) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_20_we1 = 1'b1;
    end else begin
        A_V_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_21_ce0 = 1'b1;
    end else begin
        A_V_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_21_ce1 = 1'b1;
    end else begin
        A_V_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd21) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_21_we1 = 1'b1;
    end else begin
        A_V_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_22_ce0 = 1'b1;
    end else begin
        A_V_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_22_ce1 = 1'b1;
    end else begin
        A_V_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd22) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_22_we1 = 1'b1;
    end else begin
        A_V_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_23_ce0 = 1'b1;
    end else begin
        A_V_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_23_ce1 = 1'b1;
    end else begin
        A_V_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd23) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_23_we1 = 1'b1;
    end else begin
        A_V_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_24_ce0 = 1'b1;
    end else begin
        A_V_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_24_ce1 = 1'b1;
    end else begin
        A_V_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd24) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_24_we1 = 1'b1;
    end else begin
        A_V_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_25_ce0 = 1'b1;
    end else begin
        A_V_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_25_ce1 = 1'b1;
    end else begin
        A_V_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd25) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_25_we1 = 1'b1;
    end else begin
        A_V_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_26_ce0 = 1'b1;
    end else begin
        A_V_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_26_ce1 = 1'b1;
    end else begin
        A_V_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd26) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_26_we1 = 1'b1;
    end else begin
        A_V_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_27_ce0 = 1'b1;
    end else begin
        A_V_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_27_ce1 = 1'b1;
    end else begin
        A_V_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22) & (((ap_phi_mux_k_phi_fu_1041_p4 == 5'd31) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd30) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd29) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd28) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd27) & (exitcond6_fu_1283_p2 == 1'd0))))) begin
        A_V_27_we1 = 1'b1;
    end else begin
        A_V_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_289_ce0 = 1'b1;
    end else begin
        A_V_289_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_289_ce1 = 1'b1;
    end else begin
        A_V_289_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd2) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_289_we1 = 1'b1;
    end else begin
        A_V_289_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_390_ce0 = 1'b1;
    end else begin
        A_V_390_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_390_ce1 = 1'b1;
    end else begin
        A_V_390_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd3) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_390_we1 = 1'b1;
    end else begin
        A_V_390_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_491_ce0 = 1'b1;
    end else begin
        A_V_491_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_491_ce1 = 1'b1;
    end else begin
        A_V_491_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd4) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_491_we1 = 1'b1;
    end else begin
        A_V_491_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_5_ce0 = 1'b1;
    end else begin
        A_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_5_ce1 = 1'b1;
    end else begin
        A_V_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd5) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_5_we1 = 1'b1;
    end else begin
        A_V_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_6_ce0 = 1'b1;
    end else begin
        A_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_6_ce1 = 1'b1;
    end else begin
        A_V_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd6) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_6_we1 = 1'b1;
    end else begin
        A_V_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_7_ce0 = 1'b1;
    end else begin
        A_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_7_ce1 = 1'b1;
    end else begin
        A_V_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd7) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_7_we1 = 1'b1;
    end else begin
        A_V_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_8_ce0 = 1'b1;
    end else begin
        A_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_8_ce1 = 1'b1;
    end else begin
        A_V_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd8) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_8_we1 = 1'b1;
    end else begin
        A_V_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        A_V_9_ce0 = 1'b1;
    end else begin
        A_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_9_ce1 = 1'b1;
    end else begin
        A_V_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (ap_phi_mux_k_phi_fu_1041_p4 == 5'd9) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        A_V_9_we1 = 1'b1;
    end else begin
        A_V_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        B_V_0_ce0 = 1'b1;
    end else begin
        B_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_V_0_ce1 = 1'b1;
    end else begin
        B_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ka_0_t_mid2_fu_1771_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_V_0_we1 = 1'b1;
    end else begin
        B_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        B_V_192_ce0 = 1'b1;
    end else begin
        B_V_192_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_V_192_ce1 = 1'b1;
    end else begin
        B_V_192_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ka_0_t_mid2_fu_1771_p3 == 2'd1))) begin
        B_V_192_we1 = 1'b1;
    end else begin
        B_V_192_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        B_V_293_ce0 = 1'b1;
    end else begin
        B_V_293_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_V_293_ce1 = 1'b1;
    end else begin
        B_V_293_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(ka_0_t_mid2_fu_1771_p3 == 2'd1) & ~(ka_0_t_mid2_fu_1771_p3 == 2'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        B_V_293_we1 = 1'b1;
    end else begin
        B_V_293_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_68_fu_1213_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1625_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state35 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state35 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2433 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_phi_fu_1145_p4 = tmp_63_mid2_v_reg_2448;
    end else begin
        ap_phi_mux_i_phi_fu_1145_p4 = i_reg_1141;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_ka_phi_fu_1167_p4 = ka_mid2_reg_2477;
    end else begin
        ap_phi_mux_ka_phi_fu_1167_p4 = ka_reg_1163;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_2433 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_kb_phi_fu_1179_p4 = kb_3_fu_1752_p2;
    end else begin
        ap_phi_mux_kb_phi_fu_1179_p4 = kb_reg_1175;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_1791_ce = 1'b1;
    end else begin
        grp_fu_1791_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)))) begin
        grp_fu_1797_ce = 1'b1;
    end else begin
        grp_fu_1797_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_68_reg_1868 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        stream_in_V_V_blk_n = stream_in_V_V_empty_n;
    end else begin
        stream_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_68_reg_1868 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (exitcond6_fu_1283_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_in_V_V_read = 1'b1;
    end else begin
        stream_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((exitcond1_fu_1385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((tmp_68_reg_1868 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        stream_out_V_V_blk_n = stream_out_V_V_full_n;
    end else begin
        stream_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((exitcond1_fu_1385_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        stream_out_V_V_din = Outbuf_V_fu_1481_p1;
    end else if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_68_reg_1868 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_din = stream_in_V_V_dout;
    end else begin
        stream_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((exitcond1_fu_1385_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_68_reg_1868 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_write = 1'b1;
    end else begin
        stream_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_1186_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_62_fu_1191_p2 == 1'd1) & (tmp_s_fu_1186_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_62_fu_1191_p2 == 1'd0) & (tmp_s_fu_1186_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_68_fu_1213_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_68_fu_1213_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state20 : begin
            if (((tmp_67_fu_1228_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((exitcond3_fu_1239_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (exitcond6_fu_1283_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else if ((~((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state22) & (((ap_phi_mux_k_phi_fu_1041_p4 == 5'd31) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd30) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd29) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd28) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd27) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd0) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd1) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd2) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd3) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd4) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd5) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd6) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd7) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd8) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd9) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd10) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd11) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd12) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd13) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd14) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd15) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd16) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd17) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd18) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd19) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd20) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd21) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd22) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd23) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd24) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd25) & (exitcond6_fu_1283_p2 == 1'd0)) | ((ap_phi_mux_k_phi_fu_1041_p4 == 5'd26) & (exitcond6_fu_1283_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            if (((exitcond4_fu_1327_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((exitcond5_fu_1333_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((exitcond7_fu_1345_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            if ((~((exitcond1_fu_1385_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1385_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else if ((~((exitcond1_fu_1385_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) & (exitcond1_fu_1385_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((exitcond8_fu_1486_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_flatten_fu_1625_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_flatten_fu_1625_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_V_0_address1 = tmp_142_cast_fu_1778_p1;

assign B_V_192_address1 = tmp_142_cast_fu_1778_p1;

assign B_V_293_address1 = tmp_142_cast_fu_1778_p1;

assign Outbuf_V_fu_1481_p1 = x_V_y_V_i_fu_1473_p3;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_68_reg_1868 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_68_reg_1868 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_68_reg_1868 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_68_reg_1868 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_68_reg_1868 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_68_reg_1868 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((ap_enable_reg_pp1_iter2 == 1'b1) & (((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0));
end

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp0_stage0_iter1 = (((tmp_68_reg_1868 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_68_reg_1868 == 1'd1) & (stream_in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state22 = ((exitcond6_fu_1283_p2 == 1'd0) & (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state27 = ((exitcond1_fu_1385_p2 == 1'd1) & (stream_out_V_V_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state35_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state37_pp1_stage0_iter2 = (((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_2433_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_k_phi_fu_1041_p4 = k_reg_1037;

assign ap_ready = internal_ap_ready;

assign buf_V_fu_1619_p2 = (tmp_132_fu_1612_p3 + p_0144_2_reg_1106);

assign exitcond1_fu_1385_p2 = ((ka5_reg_1095 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond3_fu_1239_p2 = ((j1_reg_1026 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond4_fu_1327_p2 = ((ia_reg_1048 == 5'd27) ? 1'b1 : 1'b0);

assign exitcond5_fu_1333_p2 = ((ib_reg_1060 == 5'd27) ? 1'b1 : 1'b0);

assign exitcond6_fu_1283_p2 = ((k_reg_1037 == 5'd28) ? 1'b1 : 1'b0);

assign exitcond7_fu_1345_p2 = ((i3_reg_1072 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond8_fu_1486_p2 = ((kb6_reg_1118 == 2'd3) ? 1'b1 : 1'b0);

assign exitcond_flatten10_fu_1643_p2 = ((indvar_flatten_reg_1152 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1625_p2 = ((indvar_flatten2_reg_1130 == 8'd144) ? 1'b1 : 1'b0);

assign grp_fu_1791_p0 = tmp_65_fu_1202_p1;

assign grp_fu_1791_p1 = tmp_65_fu_1202_p1;

assign i7_cast_fu_1209_p1 = i7_reg_1004;

assign i_3_fu_1351_p2 = (i3_reg_1072 + 5'd1);

assign i_4_fu_1637_p2 = (5'd1 + ap_phi_mux_i_phi_fu_1145_p4);

assign i_s_fu_1218_p2 = (i7_reg_1004 + 31'd1);

assign ia_3_fu_1339_p2 = (ia_reg_1048 + 5'd1);

assign ib_3_fu_1375_p2 = (ib_reg_1060 + 5'd1);

assign indvar_flatten_next1_fu_1631_p2 = (indvar_flatten2_reg_1130 + 8'd1);

assign indvar_flatten_next_fu_1699_p3 = ((exitcond_flatten10_fu_1643_p2[0:0] === 1'b1) ? 4'd1 : indvar_flatten_op_fu_1693_p2);

assign indvar_flatten_op_fu_1693_p2 = (indvar_flatten_reg_1152 + 4'd1);

assign j_fu_1245_p2 = (j1_reg_1026 + 5'd1);

assign k_4_fu_1289_p2 = (k_reg_1037 + 5'd1);

assign ka5_cast_cast_fu_1381_p1 = ka5_reg_1095;

assign ka_0_t_mid2_fu_1771_p3 = ((tmp_109_mid_reg_2455_pp1_iter1_reg[0:0] === 1'b1) ? ka_0_t_mid_fu_1761_p3 : tmp_137_fu_1768_p1);

assign ka_0_t_mid_fu_1761_p3 = ((exitcond_flatten10_reg_2442_pp1_iter1_reg[0:0] === 1'b1) ? 2'd2 : tmp_135_fu_1757_p1);

assign ka_3_fu_1730_p2 = ($signed(3'd7) + $signed(ka_mid_fu_1707_p3));

assign ka_4_fu_1391_p2 = (ka5_reg_1095 + 2'd1);

assign ka_mid2_fu_1736_p3 = ((tmp_109_mid_reg_2455[0:0] === 1'b1) ? ka_mid_fu_1707_p3 : ka_3_fu_1730_p2);

assign ka_mid_fu_1707_p3 = ((exitcond_flatten10_reg_2442[0:0] === 1'b1) ? 3'd2 : ap_phi_mux_ka_phi_fu_1167_p4);

assign kb_3_fu_1752_p2 = ($signed(kb_mid2_reg_2461) + $signed(3'd7));

assign kb_4_fu_1492_p2 = (kb6_reg_1118 + 2'd1);

assign kb_mid2_fu_1685_p3 = ((tmp_109_mid_fu_1679_p2[0:0] === 1'b1) ? kb_mid_fu_1649_p3 : 3'd2);

assign kb_mid_fu_1649_p3 = ((exitcond_flatten10_fu_1643_p2[0:0] === 1'b1) ? 3'd2 : ap_phi_mux_kb_phi_fu_1179_p4);

assign num_img_1_fu_1233_p2 = (num_img_reg_1015 + 15'd1);

assign num_img_cast_fu_1224_p1 = num_img_reg_1015;

assign p_neg_fu_1575_p2 = (17'd0 - tmp_123_tr_s_fu_1572_p1);

assign r_V_4_fu_1566_p0 = tmp_32_reg_2406;

assign r_V_4_fu_1566_p1 = tmp_31_reg_2401;

assign r_V_4_fu_1566_p2 = ($signed(r_V_4_fu_1566_p0) * $signed(r_V_4_fu_1566_p1));

assign rev_fu_1673_p2 = (tmp_136_fu_1665_p3 ^ 1'd1);

assign start_out = real_start;

assign tmp1_cast_fu_1403_p1 = $signed(tmp1_fu_1397_p2);

assign tmp1_fu_1397_p2 = ($signed(ka5_cast_cast_fu_1381_p1) + $signed(3'd7));

assign tmp2_cast_fu_1508_p1 = $signed(tmp2_fu_1502_p2);

assign tmp2_fu_1502_p2 = ($signed(tmp_131_cast_fu_1498_p1) + $signed(3'd7));

assign tmp_109_mid_fu_1679_p2 = (rev_fu_1673_p2 | exitcond_flatten10_fu_1643_p2);

assign tmp_111_cast_fu_1743_p1 = kb_mid2_reg_2461;

assign tmp_116_fu_1407_p2 = ($signed(ia_reg_1048) + $signed(tmp1_cast_fu_1403_p1));

assign tmp_117_fu_1413_p1 = tmp_116_fu_1407_p2;

assign tmp_118_cast_fu_1445_p1 = ka5_reg_1095;

assign tmp_120_0_t_fu_1512_p2 = ($signed(tmp2_cast_fu_1508_p1) + $signed(ib_reg_1060));

assign tmp_123_tr_s_fu_1572_p1 = r_V_4_reg_2411;

assign tmp_128_fu_1717_p3 = {{tmp_63_mid2_v_reg_2448}, {2'd0}};

assign tmp_130_fu_1591_p2 = (8'd0 - tmp_129_reg_2418);

assign tmp_131_cast_fu_1498_p1 = kb6_reg_1118;

assign tmp_131_fu_1603_p4 = {{r_V_4_reg_2411[13:6]}};

assign tmp_132_fu_1612_p3 = ((tmp_145_fu_1596_p3[0:0] === 1'b1) ? tmp_130_reg_2423 : tmp_131_fu_1603_p4);

assign tmp_133_fu_1724_p2 = (tmp_128_fu_1717_p3 - tmp_63_mid2_cast_fu_1714_p1);

assign tmp_134_fu_1746_p2 = ($signed(tmp_133_fu_1724_p2) + $signed(tmp_111_cast_fu_1743_p1));

assign tmp_135_fu_1757_p1 = ka_reg_1163[1:0];

assign tmp_136_fu_1665_p3 = ap_phi_mux_kb_phi_fu_1179_p4[32'd2];

assign tmp_137_fu_1768_p1 = ka_3_reg_2472[1:0];

assign tmp_138_fu_1784_p1 = stream_in_V_V_dout[7:0];

assign tmp_139_fu_1295_p1 = stream_in_V_V_dout[7:0];

assign tmp_140_fu_1361_p3 = {{i3_reg_1072}, {2'd0}};

assign tmp_141_fu_1369_p2 = (tmp_140_fu_1361_p3 - tmp_70_cast_fu_1357_p1);

assign tmp_142_cast_fu_1778_p1 = $signed(tmp_134_reg_2482);

assign tmp_142_fu_1461_p1 = p_0144_1_reg_1083[6:0];

assign tmp_143_fu_1465_p3 = p_0144_1_reg_1083[32'd7];

assign tmp_144_fu_1449_p2 = (tmp_141_reg_2060 + tmp_118_cast_fu_1445_p1);

assign tmp_145_cast_fu_1454_p1 = $signed(tmp_144_fu_1449_p2);

assign tmp_145_fu_1596_p3 = r_V_4_reg_2411[32'd15];

assign tmp_62_fu_1191_p2 = ((tmp_V_reg_1803 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_63_mid2_cast_fu_1714_p1 = tmp_63_mid2_v_reg_2448;

assign tmp_63_mid2_v_fu_1657_p3 = ((exitcond_flatten10_fu_1643_p2[0:0] === 1'b1) ? i_4_fu_1637_p2 : ap_phi_mux_i_phi_fu_1145_p4);

assign tmp_65_fu_1202_p1 = tmp_V_78_reg_1814;

assign tmp_67_fu_1228_p2 = (($signed(num_img_cast_fu_1224_p1) < $signed(tmp_V_76_reg_1809)) ? 1'b1 : 1'b0);

assign tmp_68_fu_1213_p2 = (($signed(i7_cast_fu_1209_p1) < $signed(KER_bound_reg_1863)) ? 1'b1 : 1'b0);

assign tmp_69_fu_1251_p1 = j1_reg_1026;

assign tmp_70_cast_fu_1357_p1 = i3_reg_1072;

assign tmp_s_fu_1186_p2 = ((tmp_V_reg_1803 == 16'd1) ? 1'b1 : 1'b0);

assign x_V_y_V_i_fu_1473_p3 = ((tmp_143_fu_1465_p3[0:0] === 1'b1) ? 7'd0 : tmp_142_fu_1461_p1);

endmodule //Conv_1_28_16_3_s
