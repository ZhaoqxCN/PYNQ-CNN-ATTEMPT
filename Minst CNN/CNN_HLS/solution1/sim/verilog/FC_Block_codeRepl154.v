// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FC_Block_codeRepl154 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_in_V_V_dout,
        stream_in_V_V_empty_n,
        stream_in_V_V_read,
        stream_out_V_V_din,
        stream_out_V_V_full_n,
        stream_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_pp0_stage0 = 23'd8192;
parameter    ap_ST_fsm_state16 = 23'd16384;
parameter    ap_ST_fsm_state17 = 23'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 23'd65536;
parameter    ap_ST_fsm_state20 = 23'd131072;
parameter    ap_ST_fsm_state21 = 23'd262144;
parameter    ap_ST_fsm_pp2_stage0 = 23'd524288;
parameter    ap_ST_fsm_state46 = 23'd1048576;
parameter    ap_ST_fsm_pp3_stage0 = 23'd2097152;
parameter    ap_ST_fsm_state62 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] stream_in_V_V_dout;
input   stream_in_V_V_empty_n;
output   stream_in_V_V_read;
output  [7:0] stream_out_V_V_din;
input   stream_out_V_V_full_n;
output   stream_out_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_in_V_V_read;
reg[7:0] stream_out_V_V_din;
reg stream_out_V_V_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    B_V_3_4_ce0;
wire   [7:0] B_V_3_4_q0;
reg    B_V_3_4_ce1;
reg    B_V_3_4_we1;
wire   [8:0] B_V_3_0_address0;
reg    B_V_3_0_ce0;
wire   [7:0] B_V_3_0_q0;
wire   [8:0] B_V_3_0_address1;
reg    B_V_3_0_ce1;
reg    B_V_3_0_we1;
wire   [8:0] B_V_3_1_address0;
reg    B_V_3_1_ce0;
wire   [7:0] B_V_3_1_q0;
wire   [8:0] B_V_3_1_address1;
reg    B_V_3_1_ce1;
reg    B_V_3_1_we1;
wire   [8:0] B_V_3_2_address0;
reg    B_V_3_2_ce0;
wire   [7:0] B_V_3_2_q0;
wire   [8:0] B_V_3_2_address1;
reg    B_V_3_2_ce1;
reg    B_V_3_2_we1;
wire   [8:0] B_V_3_3_address0;
reg    B_V_3_3_ce0;
wire   [7:0] B_V_3_3_q0;
wire   [8:0] B_V_3_3_address1;
reg    B_V_3_3_ce1;
reg    B_V_3_3_we1;
wire   [4:0] A_V_3_4_address0;
reg    A_V_3_4_ce0;
wire   [7:0] A_V_3_4_q0;
wire   [4:0] A_V_3_4_address1;
reg    A_V_3_4_ce1;
reg    A_V_3_4_we1;
wire   [4:0] A_V_3_0_address0;
reg    A_V_3_0_ce0;
wire   [7:0] A_V_3_0_q0;
wire   [4:0] A_V_3_0_address1;
reg    A_V_3_0_ce1;
reg    A_V_3_0_we1;
wire   [4:0] A_V_3_1_address0;
reg    A_V_3_1_ce0;
wire   [7:0] A_V_3_1_q0;
wire   [4:0] A_V_3_1_address1;
reg    A_V_3_1_ce1;
reg    A_V_3_1_we1;
wire   [4:0] A_V_3_2_address0;
reg    A_V_3_2_ce0;
wire   [7:0] A_V_3_2_q0;
wire   [4:0] A_V_3_2_address1;
reg    A_V_3_2_ce1;
reg    A_V_3_2_we1;
wire   [4:0] A_V_3_3_address0;
reg    A_V_3_3_ce0;
wire   [7:0] A_V_3_3_q0;
wire   [4:0] A_V_3_3_address1;
reg    A_V_3_3_ce1;
reg    A_V_3_3_we1;
reg    stream_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    ap_enable_reg_pp3_iter13;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond_flatten_reg_1496;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter12_reg;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond7_reg_1271;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_18_reg_1253;
reg    stream_out_V_V_blk_n;
wire    ap_CS_fsm_state46;
reg   [28:0] i4_reg_451;
reg   [7:0] i1_reg_473;
reg   [15:0] phi_mul_reg_484;
reg   [7:0] phi_urem_reg_495;
reg   [6:0] indvar_flatten6_reg_530;
reg   [4:0] j3_reg_541;
reg   [7:0] p_0128_1_reg_552;
reg   [2:0] k_reg_564;
reg   [10:0] indvar_flatten_reg_605;
reg   [3:0] i_reg_616;
reg   [7:0] j_reg_627;
reg   [7:0] reg_638;
reg    ap_block_state1;
wire    ap_block_state47_pp3_stage0_iter0;
wire    ap_block_state48_pp3_stage0_iter1;
wire    ap_block_state49_pp3_stage0_iter2;
wire    ap_block_state50_pp3_stage0_iter3;
wire    ap_block_state51_pp3_stage0_iter4;
wire    ap_block_state52_pp3_stage0_iter5;
wire    ap_block_state53_pp3_stage0_iter6;
wire    ap_block_state54_pp3_stage0_iter7;
wire    ap_block_state55_pp3_stage0_iter8;
wire    ap_block_state56_pp3_stage0_iter9;
wire    ap_block_state57_pp3_stage0_iter10;
wire    ap_block_state58_pp3_stage0_iter11;
wire    ap_block_state59_pp3_stage0_iter12;
reg    ap_block_state60_pp3_stage0_iter13;
wire    ap_block_state61_pp3_stage0_iter14;
reg    ap_block_pp3_stage0_11001;
reg   [7:0] tmp_V_39_reg_1189;
reg    ap_block_state2;
reg  signed [7:0] tmp_V_41_reg_1194;
reg    ap_block_state3;
reg  signed [7:0] tmp_V_43_reg_1200;
reg    ap_block_state4;
reg  signed [7:0] tmp_V_47_reg_1205;
reg    ap_block_state6;
wire   [0:0] tmp_s_fu_647_p2;
reg    ap_block_state7;
wire   [0:0] tmp_14_fu_653_p2;
wire   [15:0] r_V_fu_665_p2;
reg  signed [15:0] r_V_reg_1218;
wire    ap_CS_fsm_state8;
wire  signed [23:0] grp_fu_1163_p2;
reg  signed [23:0] r_V_2_reg_1233;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire  signed [29:0] grp_fu_1169_p2;
reg  signed [29:0] r_V_7_reg_1248;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_18_fu_687_p2;
wire    ap_block_state14_pp0_stage0_iter0;
reg    ap_block_state15_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [28:0] i_4_fu_692_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_17_fu_702_p2;
wire    ap_CS_fsm_state17;
wire   [6:0] num_img_2_fu_707_p2;
reg   [6:0] num_img_2_reg_1266;
wire   [0:0] exitcond7_fu_713_p2;
wire    ap_block_state18_pp1_stage0_iter0;
reg    ap_block_state19_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [7:0] i_5_fu_719_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [15:0] next_mul_fu_725_p2;
reg   [2:0] tmp_73_reg_1285;
wire   [7:0] idx_urem_fu_762_p3;
wire   [8:0] next_mul1_fu_770_p2;
reg   [8:0] next_mul1_reg_1294;
wire    ap_CS_fsm_state21;
wire   [0:0] exitcond_fu_776_p2;
wire   [3:0] i_6_fu_782_p2;
reg   [3:0] i_6_reg_1303;
wire   [8:0] tmp_70_fu_808_p2;
reg   [8:0] tmp_70_reg_1308;
wire   [0:0] exitcond_flatten8_fu_814_p2;
reg   [0:0] exitcond_flatten8_reg_1313;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state22_pp2_stage0_iter0;
wire    ap_block_state23_pp2_stage0_iter1;
wire    ap_block_state24_pp2_stage0_iter2;
wire    ap_block_state25_pp2_stage0_iter3;
wire    ap_block_state26_pp2_stage0_iter4;
wire    ap_block_state27_pp2_stage0_iter5;
wire    ap_block_state28_pp2_stage0_iter6;
wire    ap_block_state29_pp2_stage0_iter7;
wire    ap_block_state30_pp2_stage0_iter8;
wire    ap_block_state31_pp2_stage0_iter9;
wire    ap_block_state32_pp2_stage0_iter10;
wire    ap_block_state33_pp2_stage0_iter11;
wire    ap_block_state34_pp2_stage0_iter12;
wire    ap_block_state35_pp2_stage0_iter13;
wire    ap_block_state36_pp2_stage0_iter14;
wire    ap_block_state37_pp2_stage0_iter15;
wire    ap_block_state38_pp2_stage0_iter16;
wire    ap_block_state39_pp2_stage0_iter17;
wire    ap_block_state40_pp2_stage0_iter18;
wire    ap_block_state41_pp2_stage0_iter19;
wire    ap_block_state42_pp2_stage0_iter20;
wire    ap_block_state43_pp2_stage0_iter21;
wire    ap_block_state44_pp2_stage0_iter22;
wire    ap_block_state45_pp2_stage0_iter23;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter1_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter2_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter3_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter4_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter5_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter6_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter7_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter8_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter9_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter10_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter11_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter12_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter13_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter14_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter15_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter16_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter17_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter18_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter19_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter20_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter21_reg;
reg   [0:0] exitcond_flatten8_reg_1313_pp2_iter22_reg;
wire   [6:0] indvar_flatten_next7_fu_820_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [2:0] k_mid2_fu_838_p3;
reg   [2:0] k_mid2_reg_1322;
wire   [4:0] j3_cast_mid2_v_fu_846_p3;
reg   [4:0] j3_cast_mid2_v_reg_1327;
reg   [4:0] j3_cast_mid2_v_reg_1327_pp2_iter1_reg;
reg   [4:0] j3_cast_mid2_v_reg_1327_pp2_iter2_reg;
reg   [4:0] j3_cast_mid2_v_reg_1327_pp2_iter3_reg;
wire   [2:0] k_1_fu_854_p2;
wire   [21:0] grp_fu_1175_p2;
reg   [21:0] mul5_reg_1343;
wire   [6:0] tmp_24_fu_883_p2;
reg   [6:0] tmp_24_reg_1348;
reg   [3:0] tmp_77_reg_1354;
wire  signed [6:0] arrayNo2_fu_913_p1;
reg  signed [6:0] arrayNo2_reg_1359;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter7_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter8_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter9_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter10_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter11_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter12_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter13_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter14_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter15_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter16_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter17_reg;
reg  signed [6:0] arrayNo2_reg_1359_pp2_iter18_reg;
wire   [6:0] grp_fu_908_p2;
reg   [6:0] newIndex3_reg_1363;
reg   [6:0] newIndex3_reg_1363_pp2_iter16_reg;
wire   [8:0] tmp_71_fu_919_p2;
reg   [8:0] tmp_71_reg_1369;
reg   [7:0] B_V_3_4_addr_1_reg_1374;
reg   [7:0] A_V_3_3_load_reg_1424;
reg    ap_enable_reg_pp2_iter18;
reg   [7:0] A_V_3_2_load_reg_1429;
reg   [7:0] A_V_3_1_load_reg_1434;
reg   [7:0] A_V_3_0_load_reg_1439;
reg   [7:0] A_V_3_4_load_reg_1444;
reg   [7:0] B_V_3_3_load_reg_1449;
reg   [7:0] B_V_3_2_load_reg_1454;
reg   [7:0] B_V_3_1_load_reg_1459;
reg   [7:0] B_V_3_0_load_reg_1464;
reg   [7:0] B_V_3_4_load_reg_1469;
wire   [15:0] r_V_3_fu_958_p2;
reg   [15:0] r_V_3_reg_1474;
reg   [15:0] r_V_3_reg_1474_pp2_iter21_reg;
reg   [15:0] r_V_3_reg_1474_pp2_iter22_reg;
reg   [7:0] tmp_27_reg_1481;
wire   [7:0] tmp_30_fu_983_p2;
reg   [7:0] tmp_30_reg_1486;
wire   [7:0] sum_V_fu_1011_p2;
reg    ap_enable_reg_pp2_iter23;
wire   [0:0] exitcond_flatten_fu_1042_p2;
wire    ap_CS_fsm_pp3_stage0;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter1_reg;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter2_reg;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter3_reg;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter4_reg;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter5_reg;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter6_reg;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter7_reg;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter8_reg;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter9_reg;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter10_reg;
reg   [0:0] exitcond_flatten_reg_1496_pp3_iter11_reg;
wire   [10:0] indvar_flatten_next_fu_1048_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [7:0] j_mid2_fu_1066_p3;
reg   [7:0] j_mid2_reg_1505;
wire   [3:0] tmp_15_mid2_v_fu_1074_p3;
reg   [3:0] tmp_15_mid2_v_reg_1511;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter1_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter2_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter3_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter4_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter5_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter6_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter7_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter8_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter9_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter10_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter11_reg;
reg   [3:0] tmp_15_mid2_v_reg_1511_pp3_iter12_reg;
wire   [7:0] j_2_fu_1082_p2;
reg   [4:0] tmp_67_reg_1524;
wire  signed [7:0] arrayNo1_fu_1112_p1;
reg  signed [7:0] arrayNo1_reg_1529;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter3_reg;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter4_reg;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter5_reg;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter6_reg;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter7_reg;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter8_reg;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter9_reg;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter10_reg;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter11_reg;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter12_reg;
reg  signed [7:0] arrayNo1_reg_1529_pp3_iter13_reg;
wire   [7:0] grp_fu_1107_p2;
reg   [7:0] newIndex1_reg_1538;
wire   [8:0] grp_fu_1181_p3;
reg   [8:0] tmp_65_reg_1543;
reg   [7:0] B_V_3_4_addr_reg_1548;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state14;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state18;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state22;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_enable_reg_pp2_iter19;
reg    ap_enable_reg_pp2_iter20;
reg    ap_enable_reg_pp2_iter21;
reg    ap_enable_reg_pp2_iter22;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state47;
reg    ap_enable_reg_pp3_iter1;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter3;
reg    ap_enable_reg_pp3_iter4;
reg    ap_enable_reg_pp3_iter5;
reg    ap_enable_reg_pp3_iter6;
reg    ap_enable_reg_pp3_iter7;
reg    ap_enable_reg_pp3_iter8;
reg    ap_enable_reg_pp3_iter9;
reg    ap_enable_reg_pp3_iter10;
reg    ap_enable_reg_pp3_iter11;
reg    ap_enable_reg_pp3_iter12;
reg    ap_enable_reg_pp3_iter14;
reg   [6:0] num_img_reg_462;
reg   [3:0] i2_reg_507;
wire    ap_CS_fsm_state20;
reg   [8:0] phi_mul1_reg_518;
reg   [4:0] ap_phi_mux_j3_phi_fu_545_p4;
wire    ap_block_pp2_stage0;
wire   [7:0] ap_phi_reg_pp2_iter0_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter1_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter2_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter3_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter4_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter5_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter6_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter7_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter8_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter9_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter10_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter11_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter12_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter13_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter14_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter15_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter16_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter17_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter18_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter19_A_V_3_load_phi_reg_575;
reg   [7:0] ap_phi_reg_pp2_iter20_A_V_3_load_phi_reg_575;
wire   [7:0] ap_phi_reg_pp2_iter0_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter1_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter2_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter3_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter4_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter5_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter6_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter7_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter8_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter9_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter10_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter11_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter12_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter13_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter14_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter15_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter16_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter17_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter18_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter19_B_V_3_load_phi_reg_590;
reg   [7:0] ap_phi_reg_pp2_iter20_B_V_3_load_phi_reg_590;
reg   [3:0] ap_phi_mux_i_phi_fu_620_p4;
wire   [63:0] newIndex9_fu_741_p1;
wire  signed [63:0] tmp_72_cast_fu_930_p1;
wire   [63:0] tmp_71_cast_fu_943_p1;
wire   [63:0] newIndex4_fu_935_p1;
wire  signed [63:0] tmp_66_cast_fu_1151_p1;
wire   [63:0] tmp_65_cast_fu_1156_p1;
reg    ap_block_state5;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] tmp_V_56_fu_1037_p1;
reg    ap_block_pp3_stage0_01001;
wire  signed [7:0] r_V_fu_665_p0;
wire  signed [7:0] r_V_fu_665_p1;
wire   [29:0] i4_cast_fu_683_p1;
wire   [7:0] num_img_cast_fu_698_p1;
wire   [7:0] next_urem_fu_750_p2;
wire   [0:0] tmp_74_fu_756_p2;
wire   [6:0] tmp_69_fu_796_p3;
wire   [8:0] tmp_68_fu_788_p3;
wire   [8:0] p_shl11_cast_fu_804_p1;
wire   [0:0] exitcond5_fu_832_p2;
wire   [4:0] j_3_fu_826_p2;
wire   [9:0] tmp_36_tr_fu_860_p3;
wire   [6:0] tmp_25_cast_fu_874_p4;
wire   [6:0] j3_cast_mid2_fu_871_p1;
wire   [6:0] mul6_fu_892_p0;
wire   [15:0] mul6_fu_892_p2;
wire   [5:0] grp_fu_908_p1;
wire   [8:0] newIndex4_cast_fu_916_p1;
wire   [8:0] tmp_72_fu_925_p2;
wire  signed [7:0] r_V_3_fu_958_p0;
wire  signed [7:0] r_V_3_fu_958_p1;
wire   [16:0] tmp_40_tr6_fu_964_p1;
wire   [16:0] p_neg_fu_967_p2;
wire   [0:0] tmp_78_fu_988_p3;
wire   [7:0] tmp_29_fu_995_p4;
wire   [7:0] tmp_31_fu_1004_p3;
wire   [0:0] tmp_76_fu_1021_p3;
wire   [6:0] tmp_75_fu_1017_p1;
wire   [6:0] Outbuf_V_fu_1029_p3;
wire   [0:0] exitcond4_fu_1060_p2;
wire   [3:0] i_3_fu_1054_p2;
wire   [7:0] mul_fu_1091_p0;
wire   [17:0] mul_fu_1091_p2;
wire   [5:0] grp_fu_1107_p1;
wire   [6:0] tmp_63_fu_1125_p3;
wire   [8:0] tmp_62_fu_1118_p3;
wire   [8:0] p_shl9_cast_fu_1132_p1;
wire   [8:0] tmp_64_fu_1136_p2;
wire   [8:0] newIndex2_cast_fu_1142_p1;
wire   [8:0] tmp_66_fu_1145_p2;
wire   [9:0] grp_fu_1175_p0;
wire   [11:0] grp_fu_1175_p1;
wire   [3:0] grp_fu_1181_p0;
wire   [5:0] grp_fu_1181_p1;
wire   [5:0] grp_fu_1181_p2;
reg    grp_fu_1107_ce;
reg    grp_fu_1181_ce;
wire    ap_CS_fsm_state16;
reg   [22:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [21:0] grp_fu_1175_p00;
wire   [8:0] grp_fu_1181_p00;
wire   [15:0] mul6_fu_892_p00;
wire   [17:0] mul_fu_1091_p00;
reg    ap_condition_965;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 23'd1;
#0 ap_enable_reg_pp3_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter23 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter19 = 1'b0;
#0 ap_enable_reg_pp2_iter20 = 1'b0;
#0 ap_enable_reg_pp2_iter21 = 1'b0;
#0 ap_enable_reg_pp2_iter22 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter6 = 1'b0;
#0 ap_enable_reg_pp3_iter7 = 1'b0;
#0 ap_enable_reg_pp3_iter8 = 1'b0;
#0 ap_enable_reg_pp3_iter9 = 1'b0;
#0 ap_enable_reg_pp3_iter10 = 1'b0;
#0 ap_enable_reg_pp3_iter11 = 1'b0;
#0 ap_enable_reg_pp3_iter12 = 1'b0;
#0 ap_enable_reg_pp3_iter14 = 1'b0;
end

FC_Block_codeReplKfY #(
    .DataWidth( 8 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
B_V_3_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_4_addr_1_reg_1374),
    .ce0(B_V_3_4_ce0),
    .q0(B_V_3_4_q0),
    .address1(B_V_3_4_addr_reg_1548),
    .ce1(B_V_3_4_ce1),
    .we1(B_V_3_4_we1),
    .d1(reg_638)
);

FC_Block_codeReplLf8 #(
    .DataWidth( 8 ),
    .AddressRange( 260 ),
    .AddressWidth( 9 ))
B_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_0_address0),
    .ce0(B_V_3_0_ce0),
    .q0(B_V_3_0_q0),
    .address1(B_V_3_0_address1),
    .ce1(B_V_3_0_ce1),
    .we1(B_V_3_0_we1),
    .d1(reg_638)
);

FC_Block_codeReplLf8 #(
    .DataWidth( 8 ),
    .AddressRange( 260 ),
    .AddressWidth( 9 ))
B_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_1_address0),
    .ce0(B_V_3_1_ce0),
    .q0(B_V_3_1_q0),
    .address1(B_V_3_1_address1),
    .ce1(B_V_3_1_ce1),
    .we1(B_V_3_1_we1),
    .d1(reg_638)
);

FC_Block_codeReplLf8 #(
    .DataWidth( 8 ),
    .AddressRange( 260 ),
    .AddressWidth( 9 ))
B_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_2_address0),
    .ce0(B_V_3_2_ce0),
    .q0(B_V_3_2_q0),
    .address1(B_V_3_2_address1),
    .ce1(B_V_3_2_ce1),
    .we1(B_V_3_2_we1),
    .d1(reg_638)
);

FC_Block_codeReplLf8 #(
    .DataWidth( 8 ),
    .AddressRange( 260 ),
    .AddressWidth( 9 ))
B_V_3_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_3_3_address0),
    .ce0(B_V_3_3_ce0),
    .q0(B_V_3_3_q0),
    .address1(B_V_3_3_address1),
    .ce1(B_V_3_3_ce1),
    .we1(B_V_3_3_we1),
    .d1(reg_638)
);

FC_Block_codeReplPgM #(
    .DataWidth( 8 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
A_V_3_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_4_address0),
    .ce0(A_V_3_4_ce0),
    .q0(A_V_3_4_q0),
    .address1(A_V_3_4_address1),
    .ce1(A_V_3_4_ce1),
    .we1(A_V_3_4_we1),
    .d1(stream_in_V_V_dout)
);

FC_Block_codeReplQgW #(
    .DataWidth( 8 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
A_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_0_address0),
    .ce0(A_V_3_0_ce0),
    .q0(A_V_3_0_q0),
    .address1(A_V_3_0_address1),
    .ce1(A_V_3_0_ce1),
    .we1(A_V_3_0_we1),
    .d1(stream_in_V_V_dout)
);

FC_Block_codeReplQgW #(
    .DataWidth( 8 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
A_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_1_address0),
    .ce0(A_V_3_1_ce0),
    .q0(A_V_3_1_q0),
    .address1(A_V_3_1_address1),
    .ce1(A_V_3_1_ce1),
    .we1(A_V_3_1_we1),
    .d1(stream_in_V_V_dout)
);

FC_Block_codeReplQgW #(
    .DataWidth( 8 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
A_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_2_address0),
    .ce0(A_V_3_2_ce0),
    .q0(A_V_3_2_q0),
    .address1(A_V_3_2_address1),
    .ce1(A_V_3_2_ce1),
    .we1(A_V_3_2_we1),
    .d1(stream_in_V_V_dout)
);

FC_Block_codeReplQgW #(
    .DataWidth( 8 ),
    .AddressRange( 26 ),
    .AddressWidth( 5 ))
A_V_3_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_3_3_address0),
    .ce0(A_V_3_3_ce0),
    .q0(A_V_3_3_q0),
    .address1(A_V_3_3_address1),
    .ce1(A_V_3_3_ce1),
    .we1(A_V_3_3_we1),
    .d1(stream_in_V_V_dout)
);

cnn_urem_7ns_6ns_UhA #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 7 ))
cnn_urem_7ns_6ns_UhA_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_24_reg_1348),
    .din1(grp_fu_908_p1),
    .ce(1'b1),
    .dout(grp_fu_908_p2)
);

cnn_urem_8ns_6ns_VhK #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 8 ))
cnn_urem_8ns_6ns_VhK_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(j_mid2_reg_1505),
    .din1(grp_fu_1107_p1),
    .ce(grp_fu_1107_ce),
    .dout(grp_fu_1107_p2)
);

cnn_mul_mul_16s_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
cnn_mul_mul_16s_8bkb_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_V_reg_1218),
    .din1(tmp_V_41_reg_1194),
    .ce(1'b1),
    .dout(grp_fu_1163_p2)
);

cnn_mul_mul_24s_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 30 ))
cnn_mul_mul_24s_8cud_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(r_V_2_reg_1233),
    .din1(tmp_V_41_reg_1194),
    .ce(1'b1),
    .dout(grp_fu_1169_p2)
);

cnn_mul_mul_10ns_WhU #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 22 ))
cnn_mul_mul_10ns_WhU_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1175_p0),
    .din1(grp_fu_1175_p1),
    .ce(1'b1),
    .dout(grp_fu_1175_p2)
);

cnn_mac_muladd_4nXh4 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 6 ),
    .dout_WIDTH( 9 ))
cnn_mac_muladd_4nXh4_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1181_p0),
    .din1(grp_fu_1181_p1),
    .din2(grp_fu_1181_p2),
    .ce(grp_fu_1181_ce),
    .dout(grp_fu_1181_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state14))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state14);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state18) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_17_fu_702_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state18))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state18);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((tmp_17_fu_702_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state22) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((exitcond_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state22)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state22);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
        end else if (((exitcond_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
            ap_enable_reg_pp2_iter23 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state47) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_647_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state47)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state47);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter10 <= ap_enable_reg_pp3_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter11 <= ap_enable_reg_pp3_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter12 <= ap_enable_reg_pp3_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter13 <= ap_enable_reg_pp3_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter14 <= ap_enable_reg_pp3_iter13;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_647_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
            ap_enable_reg_pp3_iter14 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter5 <= ap_enable_reg_pp3_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter6 <= ap_enable_reg_pp3_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter7 <= ap_enable_reg_pp3_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter8 <= ap_enable_reg_pp3_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter9 <= ap_enable_reg_pp3_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter19 == 1'b1))) begin
        if ((1'b1 == ap_condition_965)) begin
            ap_phi_reg_pp2_iter20_A_V_3_load_phi_reg_575 <= A_V_3_4_load_reg_1444;
        end else if (((arrayNo2_reg_1359_pp2_iter18_reg == 7'd3) & (exitcond_flatten8_reg_1313_pp2_iter18_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter20_A_V_3_load_phi_reg_575 <= A_V_3_3_load_reg_1424;
        end else if (((arrayNo2_reg_1359_pp2_iter18_reg == 7'd2) & (exitcond_flatten8_reg_1313_pp2_iter18_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter20_A_V_3_load_phi_reg_575 <= A_V_3_2_load_reg_1429;
        end else if (((arrayNo2_reg_1359_pp2_iter18_reg == 7'd1) & (exitcond_flatten8_reg_1313_pp2_iter18_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter20_A_V_3_load_phi_reg_575 <= A_V_3_1_load_reg_1434;
        end else if (((arrayNo2_reg_1359_pp2_iter18_reg == 7'd0) & (exitcond_flatten8_reg_1313_pp2_iter18_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter20_A_V_3_load_phi_reg_575 <= A_V_3_0_load_reg_1439;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter20_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter19_A_V_3_load_phi_reg_575;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter19 == 1'b1))) begin
        if ((1'b1 == ap_condition_965)) begin
            ap_phi_reg_pp2_iter20_B_V_3_load_phi_reg_590 <= B_V_3_4_load_reg_1469;
        end else if (((arrayNo2_reg_1359_pp2_iter18_reg == 7'd3) & (exitcond_flatten8_reg_1313_pp2_iter18_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter20_B_V_3_load_phi_reg_590 <= B_V_3_3_load_reg_1449;
        end else if (((arrayNo2_reg_1359_pp2_iter18_reg == 7'd2) & (exitcond_flatten8_reg_1313_pp2_iter18_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter20_B_V_3_load_phi_reg_590 <= B_V_3_2_load_reg_1454;
        end else if (((arrayNo2_reg_1359_pp2_iter18_reg == 7'd1) & (exitcond_flatten8_reg_1313_pp2_iter18_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter20_B_V_3_load_phi_reg_590 <= B_V_3_1_load_reg_1459;
        end else if (((arrayNo2_reg_1359_pp2_iter18_reg == 7'd0) & (exitcond_flatten8_reg_1313_pp2_iter18_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter20_B_V_3_load_phi_reg_590 <= B_V_3_0_load_reg_1464;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter20_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter19_B_V_3_load_phi_reg_590;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_fu_702_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        i1_reg_473 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond7_fu_713_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i1_reg_473 <= i_5_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i2_reg_507 <= 4'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
        i2_reg_507 <= i_6_reg_1303;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_18_fu_687_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i4_reg_451 <= i_4_fu_692_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i4_reg_451 <= 29'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_647_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        i_reg_616 <= 4'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1496 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_reg_616 <= tmp_15_mid2_v_reg_1511;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_fu_814_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten6_reg_530 <= indvar_flatten_next7_fu_820_p2;
    end else if (((exitcond_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        indvar_flatten6_reg_530 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_647_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        indvar_flatten_reg_605 <= 11'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1042_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten_reg_605 <= indvar_flatten_next_fu_1048_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j3_reg_541 <= j3_cast_mid2_v_reg_1327;
    end else if (((exitcond_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        j3_reg_541 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_647_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        j_reg_627 <= 8'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1042_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_reg_627 <= j_2_fu_1082_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_fu_814_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        k_reg_564 <= k_1_fu_854_p2;
    end else if (((exitcond_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        k_reg_564 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_14_fu_653_p2 == 1'd1) & (tmp_s_fu_647_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        num_img_reg_462 <= 7'd0;
    end else if (((exitcond_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        num_img_reg_462 <= num_img_2_reg_1266;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter22_reg == 1'd0) & (ap_enable_reg_pp2_iter23 == 1'b1))) begin
        p_0128_1_reg_552 <= sum_V_fu_1011_p2;
    end else if (((exitcond_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        p_0128_1_reg_552 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        phi_mul1_reg_518 <= 9'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
        phi_mul1_reg_518 <= next_mul1_reg_1294;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_fu_702_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        phi_mul_reg_484 <= 16'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond7_fu_713_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        phi_mul_reg_484 <= next_mul_fu_725_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_17_fu_702_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        phi_urem_reg_495 <= 8'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond7_reg_1271 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        phi_urem_reg_495 <= idx_urem_fu_762_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((arrayNo2_reg_1359_pp2_iter17_reg == 7'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter17_reg == 1'd0) & (ap_enable_reg_pp2_iter18 == 1'b1))) begin
        A_V_3_0_load_reg_1439 <= A_V_3_0_q0;
        B_V_3_0_load_reg_1464 <= B_V_3_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((arrayNo2_reg_1359_pp2_iter17_reg == 7'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter17_reg == 1'd0) & (ap_enable_reg_pp2_iter18 == 1'b1))) begin
        A_V_3_1_load_reg_1434 <= A_V_3_1_q0;
        B_V_3_1_load_reg_1459 <= B_V_3_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((arrayNo2_reg_1359_pp2_iter17_reg == 7'd2) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter17_reg == 1'd0) & (ap_enable_reg_pp2_iter18 == 1'b1))) begin
        A_V_3_2_load_reg_1429 <= A_V_3_2_q0;
        B_V_3_2_load_reg_1454 <= B_V_3_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((arrayNo2_reg_1359_pp2_iter17_reg == 7'd3) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter17_reg == 1'd0) & (ap_enable_reg_pp2_iter18 == 1'b1))) begin
        A_V_3_3_load_reg_1424 <= A_V_3_3_q0;
        B_V_3_3_load_reg_1449 <= B_V_3_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(arrayNo2_reg_1359_pp2_iter17_reg == 7'd0) & ~(arrayNo2_reg_1359_pp2_iter17_reg == 7'd1) & ~(arrayNo2_reg_1359_pp2_iter17_reg == 7'd2) & ~(arrayNo2_reg_1359_pp2_iter17_reg == 7'd3) & (1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter17_reg == 1'd0) & (ap_enable_reg_pp2_iter18 == 1'b1))) begin
        A_V_3_4_load_reg_1444 <= A_V_3_4_q0;
        B_V_3_4_load_reg_1469 <= B_V_3_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter15_reg == 1'd0))) begin
        B_V_3_4_addr_1_reg_1374 <= tmp_72_cast_fu_930_p1;
        tmp_71_reg_1369 <= tmp_71_fu_919_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0))) begin
        B_V_3_4_addr_reg_1548 <= tmp_66_cast_fu_1151_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        ap_phi_reg_pp2_iter10_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter9_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter10_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter9_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter10_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter11_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter10_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        ap_phi_reg_pp2_iter12_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter11_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter12_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter11_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter12 == 1'b1))) begin
        ap_phi_reg_pp2_iter13_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter12_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter13_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter12_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter13 == 1'b1))) begin
        ap_phi_reg_pp2_iter14_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter13_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter14_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter13_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter14 == 1'b1))) begin
        ap_phi_reg_pp2_iter15_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter14_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter15_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter14_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter15 == 1'b1))) begin
        ap_phi_reg_pp2_iter16_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter15_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter16_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter15_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter16 == 1'b1))) begin
        ap_phi_reg_pp2_iter17_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter16_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter17_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter16_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        ap_phi_reg_pp2_iter18_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter17_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter18_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter17_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter18 == 1'b1))) begin
        ap_phi_reg_pp2_iter19_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter18_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter19_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter18_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_reg_pp2_iter1_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter0_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter1_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter0_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_reg_pp2_iter2_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter1_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter2_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter1_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        ap_phi_reg_pp2_iter3_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter2_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter3_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter2_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        ap_phi_reg_pp2_iter4_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter3_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter4_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter3_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        ap_phi_reg_pp2_iter5_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter4_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter5_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter4_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        ap_phi_reg_pp2_iter6_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter5_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter6_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter5_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        ap_phi_reg_pp2_iter7_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter6_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter7_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter6_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        ap_phi_reg_pp2_iter8_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter7_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter8_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter7_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1))) begin
        ap_phi_reg_pp2_iter9_A_V_3_load_phi_reg_575 <= ap_phi_reg_pp2_iter8_A_V_3_load_phi_reg_575;
        ap_phi_reg_pp2_iter9_B_V_3_load_phi_reg_590 <= ap_phi_reg_pp2_iter8_B_V_3_load_phi_reg_590;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1496_pp3_iter1_reg == 1'd0))) begin
        arrayNo1_reg_1529 <= arrayNo1_fu_1112_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        arrayNo1_reg_1529_pp3_iter10_reg <= arrayNo1_reg_1529_pp3_iter9_reg;
        arrayNo1_reg_1529_pp3_iter11_reg <= arrayNo1_reg_1529_pp3_iter10_reg;
        arrayNo1_reg_1529_pp3_iter12_reg <= arrayNo1_reg_1529_pp3_iter11_reg;
        arrayNo1_reg_1529_pp3_iter13_reg <= arrayNo1_reg_1529_pp3_iter12_reg;
        arrayNo1_reg_1529_pp3_iter3_reg <= arrayNo1_reg_1529;
        arrayNo1_reg_1529_pp3_iter4_reg <= arrayNo1_reg_1529_pp3_iter3_reg;
        arrayNo1_reg_1529_pp3_iter5_reg <= arrayNo1_reg_1529_pp3_iter4_reg;
        arrayNo1_reg_1529_pp3_iter6_reg <= arrayNo1_reg_1529_pp3_iter5_reg;
        arrayNo1_reg_1529_pp3_iter7_reg <= arrayNo1_reg_1529_pp3_iter6_reg;
        arrayNo1_reg_1529_pp3_iter8_reg <= arrayNo1_reg_1529_pp3_iter7_reg;
        arrayNo1_reg_1529_pp3_iter9_reg <= arrayNo1_reg_1529_pp3_iter8_reg;
        exitcond_flatten_reg_1496_pp3_iter10_reg <= exitcond_flatten_reg_1496_pp3_iter9_reg;
        exitcond_flatten_reg_1496_pp3_iter11_reg <= exitcond_flatten_reg_1496_pp3_iter10_reg;
        exitcond_flatten_reg_1496_pp3_iter12_reg <= exitcond_flatten_reg_1496_pp3_iter11_reg;
        exitcond_flatten_reg_1496_pp3_iter2_reg <= exitcond_flatten_reg_1496_pp3_iter1_reg;
        exitcond_flatten_reg_1496_pp3_iter3_reg <= exitcond_flatten_reg_1496_pp3_iter2_reg;
        exitcond_flatten_reg_1496_pp3_iter4_reg <= exitcond_flatten_reg_1496_pp3_iter3_reg;
        exitcond_flatten_reg_1496_pp3_iter5_reg <= exitcond_flatten_reg_1496_pp3_iter4_reg;
        exitcond_flatten_reg_1496_pp3_iter6_reg <= exitcond_flatten_reg_1496_pp3_iter5_reg;
        exitcond_flatten_reg_1496_pp3_iter7_reg <= exitcond_flatten_reg_1496_pp3_iter6_reg;
        exitcond_flatten_reg_1496_pp3_iter8_reg <= exitcond_flatten_reg_1496_pp3_iter7_reg;
        exitcond_flatten_reg_1496_pp3_iter9_reg <= exitcond_flatten_reg_1496_pp3_iter8_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter10_reg <= tmp_15_mid2_v_reg_1511_pp3_iter9_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter11_reg <= tmp_15_mid2_v_reg_1511_pp3_iter10_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter12_reg <= tmp_15_mid2_v_reg_1511_pp3_iter11_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter2_reg <= tmp_15_mid2_v_reg_1511_pp3_iter1_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter3_reg <= tmp_15_mid2_v_reg_1511_pp3_iter2_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter4_reg <= tmp_15_mid2_v_reg_1511_pp3_iter3_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter5_reg <= tmp_15_mid2_v_reg_1511_pp3_iter4_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter6_reg <= tmp_15_mid2_v_reg_1511_pp3_iter5_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter7_reg <= tmp_15_mid2_v_reg_1511_pp3_iter6_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter8_reg <= tmp_15_mid2_v_reg_1511_pp3_iter7_reg;
        tmp_15_mid2_v_reg_1511_pp3_iter9_reg <= tmp_15_mid2_v_reg_1511_pp3_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter5_reg == 1'd0))) begin
        arrayNo2_reg_1359 <= arrayNo2_fu_913_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        arrayNo2_reg_1359_pp2_iter10_reg <= arrayNo2_reg_1359_pp2_iter9_reg;
        arrayNo2_reg_1359_pp2_iter11_reg <= arrayNo2_reg_1359_pp2_iter10_reg;
        arrayNo2_reg_1359_pp2_iter12_reg <= arrayNo2_reg_1359_pp2_iter11_reg;
        arrayNo2_reg_1359_pp2_iter13_reg <= arrayNo2_reg_1359_pp2_iter12_reg;
        arrayNo2_reg_1359_pp2_iter14_reg <= arrayNo2_reg_1359_pp2_iter13_reg;
        arrayNo2_reg_1359_pp2_iter15_reg <= arrayNo2_reg_1359_pp2_iter14_reg;
        arrayNo2_reg_1359_pp2_iter16_reg <= arrayNo2_reg_1359_pp2_iter15_reg;
        arrayNo2_reg_1359_pp2_iter17_reg <= arrayNo2_reg_1359_pp2_iter16_reg;
        arrayNo2_reg_1359_pp2_iter18_reg <= arrayNo2_reg_1359_pp2_iter17_reg;
        arrayNo2_reg_1359_pp2_iter7_reg <= arrayNo2_reg_1359;
        arrayNo2_reg_1359_pp2_iter8_reg <= arrayNo2_reg_1359_pp2_iter7_reg;
        arrayNo2_reg_1359_pp2_iter9_reg <= arrayNo2_reg_1359_pp2_iter8_reg;
        exitcond_flatten8_reg_1313_pp2_iter10_reg <= exitcond_flatten8_reg_1313_pp2_iter9_reg;
        exitcond_flatten8_reg_1313_pp2_iter11_reg <= exitcond_flatten8_reg_1313_pp2_iter10_reg;
        exitcond_flatten8_reg_1313_pp2_iter12_reg <= exitcond_flatten8_reg_1313_pp2_iter11_reg;
        exitcond_flatten8_reg_1313_pp2_iter13_reg <= exitcond_flatten8_reg_1313_pp2_iter12_reg;
        exitcond_flatten8_reg_1313_pp2_iter14_reg <= exitcond_flatten8_reg_1313_pp2_iter13_reg;
        exitcond_flatten8_reg_1313_pp2_iter15_reg <= exitcond_flatten8_reg_1313_pp2_iter14_reg;
        exitcond_flatten8_reg_1313_pp2_iter16_reg <= exitcond_flatten8_reg_1313_pp2_iter15_reg;
        exitcond_flatten8_reg_1313_pp2_iter17_reg <= exitcond_flatten8_reg_1313_pp2_iter16_reg;
        exitcond_flatten8_reg_1313_pp2_iter18_reg <= exitcond_flatten8_reg_1313_pp2_iter17_reg;
        exitcond_flatten8_reg_1313_pp2_iter19_reg <= exitcond_flatten8_reg_1313_pp2_iter18_reg;
        exitcond_flatten8_reg_1313_pp2_iter20_reg <= exitcond_flatten8_reg_1313_pp2_iter19_reg;
        exitcond_flatten8_reg_1313_pp2_iter21_reg <= exitcond_flatten8_reg_1313_pp2_iter20_reg;
        exitcond_flatten8_reg_1313_pp2_iter22_reg <= exitcond_flatten8_reg_1313_pp2_iter21_reg;
        exitcond_flatten8_reg_1313_pp2_iter2_reg <= exitcond_flatten8_reg_1313_pp2_iter1_reg;
        exitcond_flatten8_reg_1313_pp2_iter3_reg <= exitcond_flatten8_reg_1313_pp2_iter2_reg;
        exitcond_flatten8_reg_1313_pp2_iter4_reg <= exitcond_flatten8_reg_1313_pp2_iter3_reg;
        exitcond_flatten8_reg_1313_pp2_iter5_reg <= exitcond_flatten8_reg_1313_pp2_iter4_reg;
        exitcond_flatten8_reg_1313_pp2_iter6_reg <= exitcond_flatten8_reg_1313_pp2_iter5_reg;
        exitcond_flatten8_reg_1313_pp2_iter7_reg <= exitcond_flatten8_reg_1313_pp2_iter6_reg;
        exitcond_flatten8_reg_1313_pp2_iter8_reg <= exitcond_flatten8_reg_1313_pp2_iter7_reg;
        exitcond_flatten8_reg_1313_pp2_iter9_reg <= exitcond_flatten8_reg_1313_pp2_iter8_reg;
        j3_cast_mid2_v_reg_1327_pp2_iter2_reg <= j3_cast_mid2_v_reg_1327_pp2_iter1_reg;
        j3_cast_mid2_v_reg_1327_pp2_iter3_reg <= j3_cast_mid2_v_reg_1327_pp2_iter2_reg;
        newIndex3_reg_1363_pp2_iter16_reg <= newIndex3_reg_1363;
        r_V_3_reg_1474_pp2_iter21_reg <= r_V_3_reg_1474;
        r_V_3_reg_1474_pp2_iter22_reg <= r_V_3_reg_1474_pp2_iter21_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond7_reg_1271 <= exitcond7_fu_713_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_flatten8_reg_1313 <= exitcond_flatten8_fu_814_p2;
        exitcond_flatten8_reg_1313_pp2_iter1_reg <= exitcond_flatten8_reg_1313;
        j3_cast_mid2_v_reg_1327_pp2_iter1_reg <= j3_cast_mid2_v_reg_1327;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        exitcond_flatten_reg_1496 <= exitcond_flatten_fu_1042_p2;
        exitcond_flatten_reg_1496_pp3_iter1_reg <= exitcond_flatten_reg_1496;
        tmp_15_mid2_v_reg_1511_pp3_iter1_reg <= tmp_15_mid2_v_reg_1511;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_6_reg_1303 <= i_6_fu_782_p2;
        next_mul1_reg_1294 <= next_mul1_fu_770_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_fu_814_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j3_cast_mid2_v_reg_1327 <= j3_cast_mid2_v_fu_846_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1042_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_mid2_reg_1505 <= j_mid2_fu_1066_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_fu_814_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        k_mid2_reg_1322 <= k_mid2_fu_838_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter2_reg == 1'd0))) begin
        mul5_reg_1343 <= grp_fu_1175_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1496_pp3_iter11_reg == 1'd0))) begin
        newIndex1_reg_1538 <= grp_fu_1107_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter14_reg == 1'd0))) begin
        newIndex3_reg_1363 <= grp_fu_908_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        num_img_2_reg_1266 <= num_img_2_fu_707_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        r_V_2_reg_1233 <= grp_fu_1163_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter19_reg == 1'd0))) begin
        r_V_3_reg_1474 <= r_V_3_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        r_V_7_reg_1248 <= grp_fu_1169_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_14_fu_653_p2 == 1'd0) & (tmp_s_fu_647_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        r_V_reg_1218 <= r_V_fu_665_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0) & (ap_enable_reg_pp3_iter13 == 1'b1)))) begin
        reg_638 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1042_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_15_mid2_v_reg_1511 <= tmp_15_mid2_v_fu_1074_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_18_reg_1253 <= tmp_18_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter3_reg == 1'd0))) begin
        tmp_24_reg_1348 <= tmp_24_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter20_reg == 1'd0))) begin
        tmp_27_reg_1481 <= {{p_neg_fu_967_p2[13:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter21_reg == 1'd0))) begin
        tmp_30_reg_1486 <= tmp_30_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0) & (ap_enable_reg_pp3_iter13 == 1'b1))) begin
        tmp_65_reg_1543 <= grp_fu_1181_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1496 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_67_reg_1524 <= {{mul_fu_1091_p2[17:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        tmp_70_reg_1308[8 : 3] <= tmp_70_fu_808_p2[8 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond7_fu_713_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_73_reg_1285 <= {{phi_mul_reg_484[15:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1313_pp2_iter4_reg == 1'd0))) begin
        tmp_77_reg_1354 <= {{mul6_fu_892_p2[15:12]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_39_reg_1189 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_41_reg_1194 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_43_reg_1200 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_47_reg_1205 <= stream_in_V_V_dout;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        A_V_3_0_ce0 = 1'b1;
    end else begin
        A_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_V_3_0_ce1 = 1'b1;
    end else begin
        A_V_3_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_73_reg_1285 == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_V_3_0_we1 = 1'b1;
    end else begin
        A_V_3_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        A_V_3_1_ce0 = 1'b1;
    end else begin
        A_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_V_3_1_ce1 = 1'b1;
    end else begin
        A_V_3_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_73_reg_1285 == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_V_3_1_we1 = 1'b1;
    end else begin
        A_V_3_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        A_V_3_2_ce0 = 1'b1;
    end else begin
        A_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_V_3_2_ce1 = 1'b1;
    end else begin
        A_V_3_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_73_reg_1285 == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_V_3_2_we1 = 1'b1;
    end else begin
        A_V_3_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        A_V_3_3_ce0 = 1'b1;
    end else begin
        A_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_V_3_3_ce1 = 1'b1;
    end else begin
        A_V_3_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_73_reg_1285 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_V_3_3_we1 = 1'b1;
    end else begin
        A_V_3_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        A_V_3_4_ce0 = 1'b1;
    end else begin
        A_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_V_3_4_ce1 = 1'b1;
    end else begin
        A_V_3_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_73_reg_1285 == 3'd0) & ~(tmp_73_reg_1285 == 3'd1) & ~(tmp_73_reg_1285 == 3'd2) & ~(tmp_73_reg_1285 == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        A_V_3_4_we1 = 1'b1;
    end else begin
        A_V_3_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        B_V_3_0_ce0 = 1'b1;
    end else begin
        B_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter14 == 1'b1))) begin
        B_V_3_0_ce1 = 1'b1;
    end else begin
        B_V_3_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo1_reg_1529_pp3_iter13_reg == 8'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter14 == 1'b1))) begin
        B_V_3_0_we1 = 1'b1;
    end else begin
        B_V_3_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        B_V_3_1_ce0 = 1'b1;
    end else begin
        B_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter14 == 1'b1))) begin
        B_V_3_1_ce1 = 1'b1;
    end else begin
        B_V_3_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo1_reg_1529_pp3_iter13_reg == 8'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter14 == 1'b1))) begin
        B_V_3_1_we1 = 1'b1;
    end else begin
        B_V_3_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        B_V_3_2_ce0 = 1'b1;
    end else begin
        B_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter14 == 1'b1))) begin
        B_V_3_2_ce1 = 1'b1;
    end else begin
        B_V_3_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo1_reg_1529_pp3_iter13_reg == 8'd2) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter14 == 1'b1))) begin
        B_V_3_2_we1 = 1'b1;
    end else begin
        B_V_3_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        B_V_3_3_ce0 = 1'b1;
    end else begin
        B_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter14 == 1'b1))) begin
        B_V_3_3_ce1 = 1'b1;
    end else begin
        B_V_3_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo1_reg_1529_pp3_iter13_reg == 8'd3) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter14 == 1'b1))) begin
        B_V_3_3_we1 = 1'b1;
    end else begin
        B_V_3_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        B_V_3_4_ce0 = 1'b1;
    end else begin
        B_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter14 == 1'b1))) begin
        B_V_3_4_ce1 = 1'b1;
    end else begin
        B_V_3_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(arrayNo1_reg_1529_pp3_iter13_reg == 8'd0) & ~(arrayNo1_reg_1529_pp3_iter13_reg == 8'd1) & ~(arrayNo1_reg_1529_pp3_iter13_reg == 8'd2) & ~(arrayNo1_reg_1529_pp3_iter13_reg == 8'd3) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter14 == 1'b1))) begin
        B_V_3_4_we1 = 1'b1;
    end else begin
        B_V_3_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_18_fu_687_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond7_fu_713_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state18 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state18 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten8_fu_814_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state22 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state22 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1042_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state47 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state47 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter22 == 1'b0) & (ap_enable_reg_pp2_iter21 == 1'b0) & (ap_enable_reg_pp2_iter20 == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b0) & (ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter23 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter14 == 1'b0) & (ap_enable_reg_pp3_iter12 == 1'b0) & (ap_enable_reg_pp3_iter11 == 1'b0) & (ap_enable_reg_pp3_iter10 == 1'b0) & (ap_enable_reg_pp3_iter9 == 1'b0) & (ap_enable_reg_pp3_iter8 == 1'b0) & (ap_enable_reg_pp3_iter7 == 1'b0) & (ap_enable_reg_pp3_iter6 == 1'b0) & (ap_enable_reg_pp3_iter5 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter13 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1496 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_i_phi_fu_620_p4 = tmp_15_mid2_v_reg_1511;
    end else begin
        ap_phi_mux_i_phi_fu_620_p4 = i_reg_616;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond_flatten8_reg_1313 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_j3_phi_fu_545_p4 = j3_cast_mid2_v_reg_1327;
    end else begin
        ap_phi_mux_j3_phi_fu_545_p4 = j3_reg_541;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_1107_ce = 1'b1;
    end else begin
        grp_fu_1107_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        grp_fu_1181_ce = 1'b1;
    end else begin
        grp_fu_1181_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_18_reg_1253 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (exitcond7_reg_1271 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter13 == 1'b1)))) begin
        stream_in_V_V_blk_n = stream_in_V_V_empty_n;
    end else begin
        stream_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_18_reg_1253 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (exitcond7_reg_1271 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0) & (ap_enable_reg_pp3_iter13 == 1'b1)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_in_V_V_read = 1'b1;
    end else begin
        stream_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_18_reg_1253 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter13 == 1'b1)))) begin
        stream_out_V_V_blk_n = stream_out_V_V_full_n;
    end else begin
        stream_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
        stream_out_V_V_din = tmp_V_56_fu_1037_p1;
    end else if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_18_reg_1253 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0) & (ap_enable_reg_pp3_iter13 == 1'b1) & (1'b0 == ap_block_pp3_stage0_01001)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_din = stream_in_V_V_dout;
    end else begin
        stream_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state46)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_18_reg_1253 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0) & (ap_enable_reg_pp3_iter13 == 1'b1)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_write = 1'b1;
    end else begin
        stream_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_647_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_14_fu_653_p2 == 1'd1) & (tmp_s_fu_647_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_14_fu_653_p2 == 1'd0) & (tmp_s_fu_647_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_18_fu_687_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_18_fu_687_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state17 : begin
            if (((tmp_17_fu_702_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond7_fu_713_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond7_fu_713_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((exitcond_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten8_fu_814_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter22 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter23 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter22 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter23 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten8_fu_814_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond_flatten_fu_1042_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter13 == 1'b0) & (ap_enable_reg_pp3_iter14 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter13 == 1'b0) & (ap_enable_reg_pp3_iter14 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b0) & (1'b0 == ap_block_pp3_stage0_subdone) & (exitcond_flatten_fu_1042_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_V_3_0_address0 = newIndex4_fu_935_p1;

assign A_V_3_0_address1 = newIndex9_fu_741_p1;

assign A_V_3_1_address0 = newIndex4_fu_935_p1;

assign A_V_3_1_address1 = newIndex9_fu_741_p1;

assign A_V_3_2_address0 = newIndex4_fu_935_p1;

assign A_V_3_2_address1 = newIndex9_fu_741_p1;

assign A_V_3_3_address0 = newIndex4_fu_935_p1;

assign A_V_3_3_address1 = newIndex9_fu_741_p1;

assign A_V_3_4_address0 = newIndex4_fu_935_p1;

assign A_V_3_4_address1 = newIndex9_fu_741_p1;

assign B_V_3_0_address0 = tmp_71_cast_fu_943_p1;

assign B_V_3_0_address1 = tmp_65_cast_fu_1156_p1;

assign B_V_3_1_address0 = tmp_71_cast_fu_943_p1;

assign B_V_3_1_address1 = tmp_65_cast_fu_1156_p1;

assign B_V_3_2_address0 = tmp_71_cast_fu_943_p1;

assign B_V_3_2_address1 = tmp_65_cast_fu_1156_p1;

assign B_V_3_3_address0 = tmp_71_cast_fu_943_p1;

assign B_V_3_3_address1 = tmp_65_cast_fu_1156_p1;

assign Outbuf_V_fu_1029_p3 = ((tmp_76_fu_1021_p3[0:0] === 1'b1) ? 7'd0 : tmp_75_fu_1017_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (tmp_18_reg_1253 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_18_reg_1253 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (tmp_18_reg_1253 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_18_reg_1253 == 1'd1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (tmp_18_reg_1253 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_18_reg_1253 == 1'd1))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((stream_in_V_V_empty_n == 1'b0) & (exitcond7_reg_1271 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((stream_in_V_V_empty_n == 1'b0) & (exitcond7_reg_1271 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((ap_enable_reg_pp3_iter13 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((ap_enable_reg_pp3_iter13 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0))));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((ap_enable_reg_pp3_iter13 == 1'b1) & (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign ap_block_state14_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage0_iter1 = (((stream_out_V_V_full_n == 1'b0) & (tmp_18_reg_1253 == 1'd1)) | ((stream_in_V_V_empty_n == 1'b0) & (tmp_18_reg_1253 == 1'd1)));
end

assign ap_block_state18_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp1_stage0_iter1 = ((stream_in_V_V_empty_n == 1'b0) & (exitcond7_reg_1271 == 1'd0));
end

always @ (*) begin
    ap_block_state2 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state22_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state30_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state40_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state50_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp3_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp3_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp3_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp3_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp3_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp3_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp3_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp3_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state60_pp3_stage0_iter13 = (((stream_out_V_V_full_n == 1'b0) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0)) | ((stream_in_V_V_empty_n == 1'b0) & (exitcond_flatten_reg_1496_pp3_iter12_reg == 1'd0)));
end

assign ap_block_state61_pp3_stage0_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_965 = (~(arrayNo2_reg_1359_pp2_iter18_reg == 7'd3) & ~(arrayNo2_reg_1359_pp2_iter18_reg == 7'd2) & ~(arrayNo2_reg_1359_pp2_iter18_reg == 7'd1) & ~(arrayNo2_reg_1359_pp2_iter18_reg == 7'd0) & (exitcond_flatten8_reg_1313_pp2_iter18_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_phi_reg_pp2_iter0_A_V_3_load_phi_reg_575 = 'bx;

assign ap_phi_reg_pp2_iter0_B_V_3_load_phi_reg_590 = 'bx;

assign arrayNo1_fu_1112_p1 = $signed(tmp_67_reg_1524);

assign arrayNo2_fu_913_p1 = $signed(tmp_77_reg_1354);

assign exitcond4_fu_1060_p2 = ((j_reg_627 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond5_fu_832_p2 = ((k_reg_564 == 3'd5) ? 1'b1 : 1'b0);

assign exitcond7_fu_713_p2 = ((i1_reg_473 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_814_p2 = ((indvar_flatten6_reg_530 == 7'd125) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1042_p2 = ((indvar_flatten_reg_605 == 11'd1280) ? 1'b1 : 1'b0);

assign exitcond_fu_776_p2 = ((i2_reg_507 == 4'd10) ? 1'b1 : 1'b0);

assign grp_fu_1107_p1 = 8'd26;

assign grp_fu_1175_p0 = grp_fu_1175_p00;

assign grp_fu_1175_p00 = tmp_36_tr_fu_860_p3;

assign grp_fu_1175_p1 = 22'd1639;

assign grp_fu_1181_p0 = grp_fu_1181_p00;

assign grp_fu_1181_p00 = tmp_15_mid2_v_reg_1511_pp3_iter10_reg;

assign grp_fu_1181_p1 = 9'd26;

assign grp_fu_1181_p2 = newIndex2_cast_fu_1142_p1;

assign grp_fu_908_p1 = 7'd26;

assign i4_cast_fu_683_p1 = i4_reg_451;

assign i_3_fu_1054_p2 = (ap_phi_mux_i_phi_fu_620_p4 + 4'd1);

assign i_4_fu_692_p2 = (i4_reg_451 + 29'd1);

assign i_5_fu_719_p2 = (i1_reg_473 + 8'd1);

assign i_6_fu_782_p2 = (i2_reg_507 + 4'd1);

assign idx_urem_fu_762_p3 = ((tmp_74_fu_756_p2[0:0] === 1'b1) ? next_urem_fu_750_p2 : 8'd0);

assign indvar_flatten_next7_fu_820_p2 = (indvar_flatten6_reg_530 + 7'd1);

assign indvar_flatten_next_fu_1048_p2 = (indvar_flatten_reg_605 + 11'd1);

assign j3_cast_mid2_fu_871_p1 = j3_cast_mid2_v_reg_1327_pp2_iter3_reg;

assign j3_cast_mid2_v_fu_846_p3 = ((exitcond5_fu_832_p2[0:0] === 1'b1) ? j_3_fu_826_p2 : ap_phi_mux_j3_phi_fu_545_p4);

assign j_2_fu_1082_p2 = (j_mid2_fu_1066_p3 + 8'd1);

assign j_3_fu_826_p2 = (ap_phi_mux_j3_phi_fu_545_p4 + 5'd1);

assign j_mid2_fu_1066_p3 = ((exitcond4_fu_1060_p2[0:0] === 1'b1) ? 8'd0 : j_reg_627);

assign k_1_fu_854_p2 = (k_mid2_fu_838_p3 + 3'd1);

assign k_mid2_fu_838_p3 = ((exitcond5_fu_832_p2[0:0] === 1'b1) ? 3'd0 : k_reg_564);

assign mul6_fu_892_p0 = mul6_fu_892_p00;

assign mul6_fu_892_p00 = tmp_24_reg_1348;

assign mul6_fu_892_p2 = (mul6_fu_892_p0 * $signed('h9E));

assign mul_fu_1091_p0 = mul_fu_1091_p00;

assign mul_fu_1091_p00 = j_mid2_reg_1505;

assign mul_fu_1091_p2 = (mul_fu_1091_p0 * $signed('h13C));

assign newIndex2_cast_fu_1142_p1 = newIndex1_reg_1538;

assign newIndex4_cast_fu_916_p1 = newIndex3_reg_1363;

assign newIndex4_fu_935_p1 = newIndex3_reg_1363_pp2_iter16_reg;

assign newIndex9_fu_741_p1 = phi_urem_reg_495;

assign next_mul1_fu_770_p2 = (phi_mul1_reg_518 + 9'd26);

assign next_mul_fu_725_p2 = (phi_mul_reg_484 + 16'd316);

assign next_urem_fu_750_p2 = (phi_urem_reg_495 + 8'd1);

assign num_img_2_fu_707_p2 = (num_img_reg_462 + 7'd1);

assign num_img_cast_fu_698_p1 = num_img_reg_462;

assign p_neg_fu_967_p2 = (17'd0 - tmp_40_tr6_fu_964_p1);

assign p_shl11_cast_fu_804_p1 = tmp_69_fu_796_p3;

assign p_shl9_cast_fu_1132_p1 = tmp_63_fu_1125_p3;

assign r_V_3_fu_958_p0 = ap_phi_reg_pp2_iter20_B_V_3_load_phi_reg_590;

assign r_V_3_fu_958_p1 = ap_phi_reg_pp2_iter20_A_V_3_load_phi_reg_575;

assign r_V_3_fu_958_p2 = ($signed(r_V_3_fu_958_p0) * $signed(r_V_3_fu_958_p1));

assign r_V_fu_665_p0 = tmp_V_47_reg_1205;

assign r_V_fu_665_p1 = tmp_V_43_reg_1200;

assign r_V_fu_665_p2 = ($signed(r_V_fu_665_p0) * $signed(r_V_fu_665_p1));

assign sum_V_fu_1011_p2 = (tmp_31_fu_1004_p3 + p_0128_1_reg_552);

assign tmp_14_fu_653_p2 = ((reg_638 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_15_mid2_v_fu_1074_p3 = ((exitcond4_fu_1060_p2[0:0] === 1'b1) ? i_3_fu_1054_p2 : ap_phi_mux_i_phi_fu_620_p4);

assign tmp_17_fu_702_p2 = (($signed(num_img_cast_fu_698_p1) < $signed(tmp_V_39_reg_1189)) ? 1'b1 : 1'b0);

assign tmp_18_fu_687_p2 = (($signed(i4_cast_fu_683_p1) < $signed(r_V_7_reg_1248)) ? 1'b1 : 1'b0);

assign tmp_24_fu_883_p2 = (tmp_25_cast_fu_874_p4 + j3_cast_mid2_fu_871_p1);

assign tmp_25_cast_fu_874_p4 = {{mul5_reg_1343[19:13]}};

assign tmp_29_fu_995_p4 = {{r_V_3_reg_1474_pp2_iter22_reg[13:6]}};

assign tmp_30_fu_983_p2 = (8'd0 - tmp_27_reg_1481);

assign tmp_31_fu_1004_p3 = ((tmp_78_fu_988_p3[0:0] === 1'b1) ? tmp_30_reg_1486 : tmp_29_fu_995_p4);

assign tmp_36_tr_fu_860_p3 = {{k_mid2_reg_1322}, {7'd0}};

assign tmp_40_tr6_fu_964_p1 = r_V_3_reg_1474;

assign tmp_62_fu_1118_p3 = {{tmp_15_mid2_v_reg_1511_pp3_iter12_reg}, {5'd0}};

assign tmp_63_fu_1125_p3 = {{tmp_15_mid2_v_reg_1511_pp3_iter12_reg}, {3'd0}};

assign tmp_64_fu_1136_p2 = (tmp_62_fu_1118_p3 - p_shl9_cast_fu_1132_p1);

assign tmp_65_cast_fu_1156_p1 = tmp_65_reg_1543;

assign tmp_66_cast_fu_1151_p1 = $signed(tmp_66_fu_1145_p2);

assign tmp_66_fu_1145_p2 = (tmp_64_fu_1136_p2 + newIndex2_cast_fu_1142_p1);

assign tmp_68_fu_788_p3 = {{i2_reg_507}, {5'd0}};

assign tmp_69_fu_796_p3 = {{i2_reg_507}, {3'd0}};

assign tmp_70_fu_808_p2 = (tmp_68_fu_788_p3 - p_shl11_cast_fu_804_p1);

assign tmp_71_cast_fu_943_p1 = tmp_71_reg_1369;

assign tmp_71_fu_919_p2 = (newIndex4_cast_fu_916_p1 + phi_mul1_reg_518);

assign tmp_72_cast_fu_930_p1 = $signed(tmp_72_fu_925_p2);

assign tmp_72_fu_925_p2 = (newIndex4_cast_fu_916_p1 + tmp_70_reg_1308);

assign tmp_74_fu_756_p2 = ((next_urem_fu_750_p2 < 8'd26) ? 1'b1 : 1'b0);

assign tmp_75_fu_1017_p1 = p_0128_1_reg_552[6:0];

assign tmp_76_fu_1021_p3 = p_0128_1_reg_552[32'd7];

assign tmp_78_fu_988_p3 = r_V_3_reg_1474_pp2_iter22_reg[32'd15];

assign tmp_V_56_fu_1037_p1 = Outbuf_V_fu_1029_p3;

assign tmp_s_fu_647_p2 = ((reg_638 == 8'd4) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    tmp_70_reg_1308[2:0] <= 3'b000;
end

endmodule //FC_Block_codeRepl154
