// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AXI_DMA_SLAVE_HH_
#define _AXI_DMA_SLAVE_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cnn_mul_32s_32s_3bkb.h"
#include "cnn_mul_mul_16s_1cud.h"

namespace ap_rtl {

struct AXI_DMA_SLAVE : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<16> > stream_in_TDATA;
    sc_in< sc_logic > stream_in_TVALID;
    sc_out< sc_logic > stream_in_TREADY;
    sc_in< sc_logic > stream_in_TLAST;
    sc_out< sc_lv<16> > stream_out_V_V_din;
    sc_in< sc_logic > stream_out_V_V_full_n;
    sc_out< sc_logic > stream_out_V_V_write;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    AXI_DMA_SLAVE(sc_module_name name);
    SC_HAS_PROCESS(AXI_DMA_SLAVE);

    ~AXI_DMA_SLAVE();

    sc_trace_file* mVcdFile;

    cnn_mul_32s_32s_3bkb<1,5,32,32,32>* cnn_mul_32s_32s_3bkb_U1;
    cnn_mul_32s_32s_3bkb<1,5,32,32,32>* cnn_mul_32s_32s_3bkb_U2;
    cnn_mul_mul_16s_1cud<1,3,16,16,32>* cnn_mul_mul_16s_1cud_U3;
    cnn_mul_mul_16s_1cud<1,3,16,16,32>* cnn_mul_mul_16s_1cud_U4;
    cnn_mul_mul_16s_1cud<1,3,16,16,32>* cnn_mul_mul_16s_1cud_U5;
    cnn_mul_mul_16s_1cud<1,3,16,16,32>* cnn_mul_mul_16s_1cud_U6;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<25> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<16> > stream_in_V_data_V_0_data_out;
    sc_signal< sc_logic > stream_in_V_data_V_0_vld_in;
    sc_signal< sc_logic > stream_in_V_data_V_0_vld_out;
    sc_signal< sc_logic > stream_in_V_data_V_0_ack_in;
    sc_signal< sc_logic > stream_in_V_data_V_0_ack_out;
    sc_signal< sc_lv<16> > stream_in_V_data_V_0_payload_A;
    sc_signal< sc_lv<16> > stream_in_V_data_V_0_payload_B;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel_rd;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel_wr;
    sc_signal< sc_logic > stream_in_V_data_V_0_sel;
    sc_signal< sc_logic > stream_in_V_data_V_0_load_A;
    sc_signal< sc_logic > stream_in_V_data_V_0_load_B;
    sc_signal< sc_lv<2> > stream_in_V_data_V_0_state;
    sc_signal< sc_logic > stream_in_V_data_V_0_state_cmp_full;
    sc_signal< sc_logic > stream_in_V_last_0_vld_in;
    sc_signal< sc_logic > stream_in_V_last_0_ack_out;
    sc_signal< sc_lv<2> > stream_in_V_last_0_state;
    sc_signal< sc_logic > stream_in_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > tmp_74_reg_299;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > tmp_75_reg_275;
    sc_signal< sc_logic > stream_out_V_V_blk_n;
    sc_signal< sc_lv<31> > i1_reg_85;
    sc_signal< sc_lv<31> > i_reg_96;
    sc_signal< sc_lv<1> > tmp_s_fu_112_p2;
    sc_signal< sc_lv<1> > tmp_s_reg_198;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<16> > tmp_data_V_1_reg_202;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<16> > tmp_data_V_2_reg_207;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<16> > tmp_data_V_3_reg_212;
    sc_signal< bool > ap_block_state5;
    sc_signal< sc_lv<16> > tmp_data_V_4_reg_218;
    sc_signal< bool > ap_block_state6;
    sc_signal< sc_lv<16> > tmp_data_V_5_reg_223;
    sc_signal< bool > ap_block_state7;
    sc_signal< bool > ap_block_state8;
    sc_signal< sc_lv<32> > tmp_72_fu_124_p1;
    sc_signal< sc_lv<32> > rhs_V_fu_130_p1;
    sc_signal< sc_lv<32> > grp_fu_174_p2;
    sc_signal< sc_lv<32> > tmp3_reg_260;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > grp_fu_180_p2;
    sc_signal< sc_lv<32> > tmp4_reg_265;
    sc_signal< sc_lv<32> > grp_fu_136_p2;
    sc_signal< sc_lv<32> > KER_bound_reg_270;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<1> > tmp_75_fu_144_p2;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state17_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<31> > i_4_fu_149_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > grp_fu_186_p2;
    sc_signal< sc_lv<32> > tmp1_reg_284;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<32> > grp_fu_192_p2;
    sc_signal< sc_lv<32> > tmp2_reg_289;
    sc_signal< sc_lv<32> > grp_fu_155_p2;
    sc_signal< sc_lv<32> > IFM_bound_reg_294;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<1> > tmp_74_fu_163_p2;
    sc_signal< bool > ap_block_state26_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state27_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<31> > i_s_fu_168_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state16;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state26;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > i1_cast_fu_140_p1;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_lv<32> > i_cast_fu_159_p1;
    sc_signal< sc_lv<16> > grp_fu_174_p0;
    sc_signal< sc_lv<16> > grp_fu_174_p1;
    sc_signal< sc_lv<16> > grp_fu_192_p0;
    sc_signal< sc_lv<16> > grp_fu_192_p1;
    sc_signal< sc_logic > grp_fu_174_ce;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > grp_fu_180_ce;
    sc_signal< sc_logic > grp_fu_186_ce;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > grp_fu_192_ce;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<25> > ap_NS_fsm;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<25> ap_ST_fsm_state1;
    static const sc_lv<25> ap_ST_fsm_state2;
    static const sc_lv<25> ap_ST_fsm_state3;
    static const sc_lv<25> ap_ST_fsm_state4;
    static const sc_lv<25> ap_ST_fsm_state5;
    static const sc_lv<25> ap_ST_fsm_state6;
    static const sc_lv<25> ap_ST_fsm_state7;
    static const sc_lv<25> ap_ST_fsm_state8;
    static const sc_lv<25> ap_ST_fsm_state9;
    static const sc_lv<25> ap_ST_fsm_state10;
    static const sc_lv<25> ap_ST_fsm_state11;
    static const sc_lv<25> ap_ST_fsm_state12;
    static const sc_lv<25> ap_ST_fsm_state13;
    static const sc_lv<25> ap_ST_fsm_state14;
    static const sc_lv<25> ap_ST_fsm_state15;
    static const sc_lv<25> ap_ST_fsm_pp0_stage0;
    static const sc_lv<25> ap_ST_fsm_state18;
    static const sc_lv<25> ap_ST_fsm_state19;
    static const sc_lv<25> ap_ST_fsm_state20;
    static const sc_lv<25> ap_ST_fsm_state21;
    static const sc_lv<25> ap_ST_fsm_state22;
    static const sc_lv<25> ap_ST_fsm_state23;
    static const sc_lv<25> ap_ST_fsm_state24;
    static const sc_lv<25> ap_ST_fsm_state25;
    static const sc_lv<25> ap_ST_fsm_pp1_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_18;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_10;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state16_pp0_stage0_iter0();
    void thread_ap_block_state17_pp0_stage0_iter1();
    void thread_ap_block_state2();
    void thread_ap_block_state26_pp1_stage0_iter0();
    void thread_ap_block_state27_pp1_stage0_iter1();
    void thread_ap_block_state3();
    void thread_ap_block_state4();
    void thread_ap_block_state5();
    void thread_ap_block_state6();
    void thread_ap_block_state7();
    void thread_ap_block_state8();
    void thread_ap_condition_pp0_exit_iter0_state16();
    void thread_ap_condition_pp1_exit_iter0_state26();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_ready();
    void thread_grp_fu_174_ce();
    void thread_grp_fu_174_p0();
    void thread_grp_fu_174_p1();
    void thread_grp_fu_180_ce();
    void thread_grp_fu_186_ce();
    void thread_grp_fu_192_ce();
    void thread_grp_fu_192_p0();
    void thread_grp_fu_192_p1();
    void thread_i1_cast_fu_140_p1();
    void thread_i_4_fu_149_p2();
    void thread_i_cast_fu_159_p1();
    void thread_i_s_fu_168_p2();
    void thread_internal_ap_ready();
    void thread_real_start();
    void thread_rhs_V_fu_130_p1();
    void thread_start_out();
    void thread_start_write();
    void thread_stream_in_TDATA_blk_n();
    void thread_stream_in_TREADY();
    void thread_stream_in_V_data_V_0_ack_in();
    void thread_stream_in_V_data_V_0_ack_out();
    void thread_stream_in_V_data_V_0_data_out();
    void thread_stream_in_V_data_V_0_load_A();
    void thread_stream_in_V_data_V_0_load_B();
    void thread_stream_in_V_data_V_0_sel();
    void thread_stream_in_V_data_V_0_state_cmp_full();
    void thread_stream_in_V_data_V_0_vld_in();
    void thread_stream_in_V_data_V_0_vld_out();
    void thread_stream_in_V_last_0_ack_out();
    void thread_stream_in_V_last_0_vld_in();
    void thread_stream_out_V_V_blk_n();
    void thread_stream_out_V_V_din();
    void thread_stream_out_V_V_write();
    void thread_tmp_72_fu_124_p1();
    void thread_tmp_74_fu_163_p2();
    void thread_tmp_75_fu_144_p2();
    void thread_tmp_s_fu_112_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
