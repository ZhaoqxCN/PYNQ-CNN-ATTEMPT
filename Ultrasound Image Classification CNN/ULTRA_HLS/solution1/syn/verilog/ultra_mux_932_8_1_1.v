// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================


`timescale 1ns/1ps

module ultra_mux_932_8_1_1 #(
parameter
    ID                = 0,
    NUM_STAGE         = 1,
    din0_WIDTH       = 32,
    din1_WIDTH       = 32,
    din2_WIDTH       = 32,
    din3_WIDTH       = 32,
    din4_WIDTH       = 32,
    din5_WIDTH       = 32,
    din6_WIDTH       = 32,
    din7_WIDTH       = 32,
    din8_WIDTH       = 32,
    din9_WIDTH         = 32,
    dout_WIDTH            = 32
)(
    input  [7 : 0]     din0,
    input  [7 : 0]     din1,
    input  [7 : 0]     din2,
    input  [7 : 0]     din3,
    input  [7 : 0]     din4,
    input  [7 : 0]     din5,
    input  [7 : 0]     din6,
    input  [7 : 0]     din7,
    input  [7 : 0]     din8,
    input  [31 : 0]    din9,
    output [7 : 0]   dout);

// puts internal signals
wire [31 : 0]     sel;
// level 1 signals
wire [7 : 0]         mux_1_0;
wire [7 : 0]         mux_1_1;
wire [7 : 0]         mux_1_2;
wire [7 : 0]         mux_1_3;
wire [7 : 0]         mux_1_4;
// level 2 signals
wire [7 : 0]         mux_2_0;
wire [7 : 0]         mux_2_1;
wire [7 : 0]         mux_2_2;
// level 3 signals
wire [7 : 0]         mux_3_0;
wire [7 : 0]         mux_3_1;
// level 4 signals
wire [7 : 0]         mux_4_0;
// level 5 signals
wire [7 : 0]         mux_5_0;
// level 6 signals
wire [7 : 0]         mux_6_0;
// level 7 signals
wire [7 : 0]         mux_7_0;
// level 8 signals
wire [7 : 0]         mux_8_0;
// level 9 signals
wire [7 : 0]         mux_9_0;
// level 10 signals
wire [7 : 0]         mux_10_0;
// level 11 signals
wire [7 : 0]         mux_11_0;
// level 12 signals
wire [7 : 0]         mux_12_0;
// level 13 signals
wire [7 : 0]         mux_13_0;
// level 14 signals
wire [7 : 0]         mux_14_0;
// level 15 signals
wire [7 : 0]         mux_15_0;
// level 16 signals
wire [7 : 0]         mux_16_0;
// level 17 signals
wire [7 : 0]         mux_17_0;
// level 18 signals
wire [7 : 0]         mux_18_0;
// level 19 signals
wire [7 : 0]         mux_19_0;
// level 20 signals
wire [7 : 0]         mux_20_0;
// level 21 signals
wire [7 : 0]         mux_21_0;
// level 22 signals
wire [7 : 0]         mux_22_0;
// level 23 signals
wire [7 : 0]         mux_23_0;
// level 24 signals
wire [7 : 0]         mux_24_0;
// level 25 signals
wire [7 : 0]         mux_25_0;
// level 26 signals
wire [7 : 0]         mux_26_0;
// level 27 signals
wire [7 : 0]         mux_27_0;
// level 28 signals
wire [7 : 0]         mux_28_0;
// level 29 signals
wire [7 : 0]         mux_29_0;
// level 30 signals
wire [7 : 0]         mux_30_0;
// level 31 signals
wire [7 : 0]         mux_31_0;
// level 32 signals
wire [7 : 0]         mux_32_0;

assign sel = din9;

// Generate level 1 logic
assign mux_1_0 = (sel[0] == 0)? din0 : din1;
assign mux_1_1 = (sel[0] == 0)? din2 : din3;
assign mux_1_2 = (sel[0] == 0)? din4 : din5;
assign mux_1_3 = (sel[0] == 0)? din6 : din7;
assign mux_1_4 = din8;

// Generate level 2 logic
assign mux_2_0 = (sel[1] == 0)? mux_1_0 : mux_1_1;
assign mux_2_1 = (sel[1] == 0)? mux_1_2 : mux_1_3;
assign mux_2_2 = mux_1_4;

// Generate level 3 logic
assign mux_3_0 = (sel[2] == 0)? mux_2_0 : mux_2_1;
assign mux_3_1 = mux_2_2;

// Generate level 4 logic
assign mux_4_0 = (sel[3] == 0)? mux_3_0 : mux_3_1;

// Generate level 5 logic
assign mux_5_0 = mux_4_0;

// Generate level 6 logic
assign mux_6_0 = mux_5_0;

// Generate level 7 logic
assign mux_7_0 = mux_6_0;

// Generate level 8 logic
assign mux_8_0 = mux_7_0;

// Generate level 9 logic
assign mux_9_0 = mux_8_0;

// Generate level 10 logic
assign mux_10_0 = mux_9_0;

// Generate level 11 logic
assign mux_11_0 = mux_10_0;

// Generate level 12 logic
assign mux_12_0 = mux_11_0;

// Generate level 13 logic
assign mux_13_0 = mux_12_0;

// Generate level 14 logic
assign mux_14_0 = mux_13_0;

// Generate level 15 logic
assign mux_15_0 = mux_14_0;

// Generate level 16 logic
assign mux_16_0 = mux_15_0;

// Generate level 17 logic
assign mux_17_0 = mux_16_0;

// Generate level 18 logic
assign mux_18_0 = mux_17_0;

// Generate level 19 logic
assign mux_19_0 = mux_18_0;

// Generate level 20 logic
assign mux_20_0 = mux_19_0;

// Generate level 21 logic
assign mux_21_0 = mux_20_0;

// Generate level 22 logic
assign mux_22_0 = mux_21_0;

// Generate level 23 logic
assign mux_23_0 = mux_22_0;

// Generate level 24 logic
assign mux_24_0 = mux_23_0;

// Generate level 25 logic
assign mux_25_0 = mux_24_0;

// Generate level 26 logic
assign mux_26_0 = mux_25_0;

// Generate level 27 logic
assign mux_27_0 = mux_26_0;

// Generate level 28 logic
assign mux_28_0 = mux_27_0;

// Generate level 29 logic
assign mux_29_0 = mux_28_0;

// Generate level 30 logic
assign mux_30_0 = mux_29_0;

// Generate level 31 logic
assign mux_31_0 = mux_30_0;

// Generate level 32 logic
assign mux_32_0 = mux_31_0;

// output logic
assign dout = mux_32_0;

endmodule
