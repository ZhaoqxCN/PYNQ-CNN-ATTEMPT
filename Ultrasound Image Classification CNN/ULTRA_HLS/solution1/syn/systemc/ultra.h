// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _ultra_HH_
#define _ultra_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "AXI_DMA_SLAVE.h"
#include "Conv_S.h"
#include "Pool_16_63_3_0_s.h"
#include "Conv_3.h"
#include "Conv_1.h"
#include "Conv.h"
#include "Conv_2.h"
#include "FC_144_128_s.h"
#include "FC_128_8_s.h"
#include "AXI_DMA_MASTER.h"
#include "fifo_w16_d2048_A.h"
#include "start_for_Conv_S_U0.h"
#include "start_for_Pool_16Xh4.h"
#include "start_for_Conv_3_U0.h"
#include "start_for_Conv_1_U0.h"
#include "start_for_Conv_U0.h"
#include "start_for_Conv_2_U0.h"
#include "start_for_FC_144_Yie.h"
#include "start_for_FC_128_Zio.h"
#include "start_for_AXI_DMA0iy.h"

namespace ap_rtl {

struct ultra : public sc_module {
    // Port declarations 10
    sc_in< sc_lv<16> > stream_in_TDATA;
    sc_in< sc_logic > stream_in_TLAST;
    sc_out< sc_lv<16> > stream_out_TDATA;
    sc_out< sc_logic > stream_out_TLAST;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > stream_in_TVALID;
    sc_out< sc_logic > stream_in_TREADY;
    sc_out< sc_logic > stream_out_TVALID;
    sc_in< sc_logic > stream_out_TREADY;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    ultra(sc_module_name name);
    SC_HAS_PROCESS(ultra);

    ~ultra();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    AXI_DMA_SLAVE* AXI_DMA_SLAVE_U0;
    Conv_S* Conv_S_U0;
    Pool_16_63_3_0_s* Pool_16_63_3_0_U0;
    Conv_3* Conv_3_U0;
    Conv_1* Conv_1_U0;
    Conv* Conv_U0;
    Conv_2* Conv_2_U0;
    FC_144_128_s* FC_144_128_U0;
    FC_128_8_s* FC_128_8_U0;
    AXI_DMA_MASTER* AXI_DMA_MASTER_U0;
    fifo_w16_d2048_A* connect_0_V_V_U;
    fifo_w16_d2048_A* connect_1_V_V_U;
    fifo_w16_d2048_A* connect_2_V_V_U;
    fifo_w16_d2048_A* connect_3_V_V_U;
    fifo_w16_d2048_A* connect_4_V_V_U;
    fifo_w16_d2048_A* connect_5_V_V_U;
    fifo_w16_d2048_A* connect_6_V_V_U;
    fifo_w16_d2048_A* connect_7_V_V_U;
    fifo_w16_d2048_A* connect_8_V_V_U;
    start_for_Conv_S_U0* start_for_Conv_S_U0_U;
    start_for_Pool_16Xh4* start_for_Pool_16Xh4_U;
    start_for_Conv_3_U0* start_for_Conv_3_U0_U;
    start_for_Conv_1_U0* start_for_Conv_1_U0_U;
    start_for_Conv_U0* start_for_Conv_U0_U;
    start_for_Conv_2_U0* start_for_Conv_2_U0_U;
    start_for_FC_144_Yie* start_for_FC_144_Yie_U;
    start_for_FC_128_Zio* start_for_FC_128_Zio_U;
    start_for_AXI_DMA0iy* start_for_AXI_DMA0iy_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_ap_start;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_ap_done;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_ap_continue;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_ap_idle;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_ap_ready;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_start_out;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_start_write;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_stream_in_TREADY;
    sc_signal< sc_lv<16> > AXI_DMA_SLAVE_U0_stream_out_V_V_din;
    sc_signal< sc_logic > AXI_DMA_SLAVE_U0_stream_out_V_V_write;
    sc_signal< sc_logic > Conv_S_U0_ap_start;
    sc_signal< sc_logic > Conv_S_U0_ap_done;
    sc_signal< sc_logic > Conv_S_U0_ap_continue;
    sc_signal< sc_logic > Conv_S_U0_ap_idle;
    sc_signal< sc_logic > Conv_S_U0_ap_ready;
    sc_signal< sc_logic > Conv_S_U0_start_out;
    sc_signal< sc_logic > Conv_S_U0_start_write;
    sc_signal< sc_logic > Conv_S_U0_stream_in_V_V_read;
    sc_signal< sc_lv<16> > Conv_S_U0_stream_out_V_V_din;
    sc_signal< sc_logic > Conv_S_U0_stream_out_V_V_write;
    sc_signal< sc_logic > Pool_16_63_3_0_U0_ap_start;
    sc_signal< sc_logic > Pool_16_63_3_0_U0_ap_done;
    sc_signal< sc_logic > Pool_16_63_3_0_U0_ap_continue;
    sc_signal< sc_logic > Pool_16_63_3_0_U0_ap_idle;
    sc_signal< sc_logic > Pool_16_63_3_0_U0_ap_ready;
    sc_signal< sc_logic > Pool_16_63_3_0_U0_start_out;
    sc_signal< sc_logic > Pool_16_63_3_0_U0_start_write;
    sc_signal< sc_logic > Pool_16_63_3_0_U0_stream_in_V_V_read;
    sc_signal< sc_lv<16> > Pool_16_63_3_0_U0_stream_out_V_V_din;
    sc_signal< sc_logic > Pool_16_63_3_0_U0_stream_out_V_V_write;
    sc_signal< sc_logic > Conv_3_U0_ap_start;
    sc_signal< sc_logic > Conv_3_U0_ap_done;
    sc_signal< sc_logic > Conv_3_U0_ap_continue;
    sc_signal< sc_logic > Conv_3_U0_ap_idle;
    sc_signal< sc_logic > Conv_3_U0_ap_ready;
    sc_signal< sc_logic > Conv_3_U0_start_out;
    sc_signal< sc_logic > Conv_3_U0_start_write;
    sc_signal< sc_logic > Conv_3_U0_stream_in_V_V_read;
    sc_signal< sc_lv<16> > Conv_3_U0_stream_out_V_V_din;
    sc_signal< sc_logic > Conv_3_U0_stream_out_V_V_write;
    sc_signal< sc_logic > Conv_1_U0_ap_start;
    sc_signal< sc_logic > Conv_1_U0_ap_done;
    sc_signal< sc_logic > Conv_1_U0_ap_continue;
    sc_signal< sc_logic > Conv_1_U0_ap_idle;
    sc_signal< sc_logic > Conv_1_U0_ap_ready;
    sc_signal< sc_logic > Conv_1_U0_start_out;
    sc_signal< sc_logic > Conv_1_U0_start_write;
    sc_signal< sc_logic > Conv_1_U0_stream_in_V_V_read;
    sc_signal< sc_lv<16> > Conv_1_U0_stream_out_V_V_din;
    sc_signal< sc_logic > Conv_1_U0_stream_out_V_V_write;
    sc_signal< sc_logic > Conv_U0_ap_start;
    sc_signal< sc_logic > Conv_U0_ap_done;
    sc_signal< sc_logic > Conv_U0_ap_continue;
    sc_signal< sc_logic > Conv_U0_ap_idle;
    sc_signal< sc_logic > Conv_U0_ap_ready;
    sc_signal< sc_logic > Conv_U0_start_out;
    sc_signal< sc_logic > Conv_U0_start_write;
    sc_signal< sc_logic > Conv_U0_stream_in_V_V_read;
    sc_signal< sc_lv<16> > Conv_U0_stream_out_V_V_din;
    sc_signal< sc_logic > Conv_U0_stream_out_V_V_write;
    sc_signal< sc_logic > Conv_2_U0_ap_start;
    sc_signal< sc_logic > Conv_2_U0_ap_done;
    sc_signal< sc_logic > Conv_2_U0_ap_continue;
    sc_signal< sc_logic > Conv_2_U0_ap_idle;
    sc_signal< sc_logic > Conv_2_U0_ap_ready;
    sc_signal< sc_logic > Conv_2_U0_start_out;
    sc_signal< sc_logic > Conv_2_U0_start_write;
    sc_signal< sc_logic > Conv_2_U0_stream_in_V_V_read;
    sc_signal< sc_lv<16> > Conv_2_U0_stream_out_V_V_din;
    sc_signal< sc_logic > Conv_2_U0_stream_out_V_V_write;
    sc_signal< sc_logic > FC_144_128_U0_ap_start;
    sc_signal< sc_logic > FC_144_128_U0_ap_done;
    sc_signal< sc_logic > FC_144_128_U0_ap_continue;
    sc_signal< sc_logic > FC_144_128_U0_ap_idle;
    sc_signal< sc_logic > FC_144_128_U0_ap_ready;
    sc_signal< sc_logic > FC_144_128_U0_start_out;
    sc_signal< sc_logic > FC_144_128_U0_start_write;
    sc_signal< sc_logic > FC_144_128_U0_stream_in_V_V_read;
    sc_signal< sc_lv<16> > FC_144_128_U0_stream_out_V_V_din;
    sc_signal< sc_logic > FC_144_128_U0_stream_out_V_V_write;
    sc_signal< sc_logic > FC_128_8_U0_ap_start;
    sc_signal< sc_logic > FC_128_8_U0_ap_done;
    sc_signal< sc_logic > FC_128_8_U0_ap_continue;
    sc_signal< sc_logic > FC_128_8_U0_ap_idle;
    sc_signal< sc_logic > FC_128_8_U0_ap_ready;
    sc_signal< sc_logic > FC_128_8_U0_start_out;
    sc_signal< sc_logic > FC_128_8_U0_start_write;
    sc_signal< sc_logic > FC_128_8_U0_stream_in_V_V_read;
    sc_signal< sc_lv<16> > FC_128_8_U0_stream_out_V_V_din;
    sc_signal< sc_logic > FC_128_8_U0_stream_out_V_V_write;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_ap_start;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_ap_done;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_ap_continue;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_ap_idle;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_ap_ready;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_stream_in_V_V_read;
    sc_signal< sc_lv<16> > AXI_DMA_MASTER_U0_stream_out_TDATA;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_stream_out_TVALID;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_stream_out_TLAST;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > connect_0_V_V_full_n;
    sc_signal< sc_lv<16> > connect_0_V_V_dout;
    sc_signal< sc_logic > connect_0_V_V_empty_n;
    sc_signal< sc_logic > connect_1_V_V_full_n;
    sc_signal< sc_lv<16> > connect_1_V_V_dout;
    sc_signal< sc_logic > connect_1_V_V_empty_n;
    sc_signal< sc_logic > connect_2_V_V_full_n;
    sc_signal< sc_lv<16> > connect_2_V_V_dout;
    sc_signal< sc_logic > connect_2_V_V_empty_n;
    sc_signal< sc_logic > connect_3_V_V_full_n;
    sc_signal< sc_lv<16> > connect_3_V_V_dout;
    sc_signal< sc_logic > connect_3_V_V_empty_n;
    sc_signal< sc_logic > connect_4_V_V_full_n;
    sc_signal< sc_lv<16> > connect_4_V_V_dout;
    sc_signal< sc_logic > connect_4_V_V_empty_n;
    sc_signal< sc_logic > connect_5_V_V_full_n;
    sc_signal< sc_lv<16> > connect_5_V_V_dout;
    sc_signal< sc_logic > connect_5_V_V_empty_n;
    sc_signal< sc_logic > connect_6_V_V_full_n;
    sc_signal< sc_lv<16> > connect_6_V_V_dout;
    sc_signal< sc_logic > connect_6_V_V_empty_n;
    sc_signal< sc_logic > connect_7_V_V_full_n;
    sc_signal< sc_lv<16> > connect_7_V_V_dout;
    sc_signal< sc_logic > connect_7_V_V_empty_n;
    sc_signal< sc_logic > connect_8_V_V_full_n;
    sc_signal< sc_lv<16> > connect_8_V_V_dout;
    sc_signal< sc_logic > connect_8_V_V_empty_n;
    sc_signal< sc_lv<1> > start_for_Conv_S_U0_din;
    sc_signal< sc_logic > start_for_Conv_S_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Conv_S_U0_dout;
    sc_signal< sc_logic > start_for_Conv_S_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Pool_16_63_3_0_U0_din;
    sc_signal< sc_logic > start_for_Pool_16_63_3_0_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Pool_16_63_3_0_U0_dout;
    sc_signal< sc_logic > start_for_Pool_16_63_3_0_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Conv_3_U0_din;
    sc_signal< sc_logic > start_for_Conv_3_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Conv_3_U0_dout;
    sc_signal< sc_logic > start_for_Conv_3_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Conv_1_U0_din;
    sc_signal< sc_logic > start_for_Conv_1_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Conv_1_U0_dout;
    sc_signal< sc_logic > start_for_Conv_1_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Conv_U0_din;
    sc_signal< sc_logic > start_for_Conv_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Conv_U0_dout;
    sc_signal< sc_logic > start_for_Conv_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Conv_2_U0_din;
    sc_signal< sc_logic > start_for_Conv_2_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Conv_2_U0_dout;
    sc_signal< sc_logic > start_for_Conv_2_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_FC_144_128_U0_din;
    sc_signal< sc_logic > start_for_FC_144_128_U0_full_n;
    sc_signal< sc_lv<1> > start_for_FC_144_128_U0_dout;
    sc_signal< sc_logic > start_for_FC_144_128_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_FC_128_8_U0_din;
    sc_signal< sc_logic > start_for_FC_128_8_U0_full_n;
    sc_signal< sc_lv<1> > start_for_FC_128_8_U0_dout;
    sc_signal< sc_logic > start_for_FC_128_8_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_AXI_DMA_MASTER_U0_din;
    sc_signal< sc_logic > start_for_AXI_DMA_MASTER_U0_full_n;
    sc_signal< sc_lv<1> > start_for_AXI_DMA_MASTER_U0_dout;
    sc_signal< sc_logic > start_for_AXI_DMA_MASTER_U0_empty_n;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_start_full_n;
    sc_signal< sc_logic > AXI_DMA_MASTER_U0_start_write;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_logic ap_const_logic_0;
    static const sc_logic ap_const_logic_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_AXI_DMA_MASTER_U0_ap_continue();
    void thread_AXI_DMA_MASTER_U0_ap_start();
    void thread_AXI_DMA_MASTER_U0_start_full_n();
    void thread_AXI_DMA_MASTER_U0_start_write();
    void thread_AXI_DMA_SLAVE_U0_ap_continue();
    void thread_AXI_DMA_SLAVE_U0_ap_start();
    void thread_Conv_1_U0_ap_continue();
    void thread_Conv_1_U0_ap_start();
    void thread_Conv_2_U0_ap_continue();
    void thread_Conv_2_U0_ap_start();
    void thread_Conv_3_U0_ap_continue();
    void thread_Conv_3_U0_ap_start();
    void thread_Conv_S_U0_ap_continue();
    void thread_Conv_S_U0_ap_start();
    void thread_Conv_U0_ap_continue();
    void thread_Conv_U0_ap_start();
    void thread_FC_128_8_U0_ap_continue();
    void thread_FC_128_8_U0_ap_start();
    void thread_FC_144_128_U0_ap_continue();
    void thread_FC_144_128_U0_ap_start();
    void thread_Pool_16_63_3_0_U0_ap_continue();
    void thread_Pool_16_63_3_0_U0_ap_start();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_continue();
    void thread_start_for_AXI_DMA_MASTER_U0_din();
    void thread_start_for_Conv_1_U0_din();
    void thread_start_for_Conv_2_U0_din();
    void thread_start_for_Conv_3_U0_din();
    void thread_start_for_Conv_S_U0_din();
    void thread_start_for_Conv_U0_din();
    void thread_start_for_FC_128_8_U0_din();
    void thread_start_for_FC_144_128_U0_din();
    void thread_start_for_Pool_16_63_3_0_U0_din();
    void thread_stream_in_TREADY();
    void thread_stream_out_TDATA();
    void thread_stream_out_TLAST();
    void thread_stream_out_TVALID();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
