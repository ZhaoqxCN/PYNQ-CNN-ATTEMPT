// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AXI_DMA_SLAVE.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AXI_DMA_SLAVE::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AXI_DMA_SLAVE::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state1 = "1";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state2 = "10";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state3 = "100";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state4 = "1000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state5 = "10000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state6 = "100000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state7 = "1000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state8 = "10000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state9 = "100000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state10 = "1000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state11 = "10000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state12 = "100000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_pp0_stage0 = "100000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state20 = "1000000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state21 = "10000000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state22 = "100000000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state23 = "1000000000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state24 = "10000000000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state25 = "100000000000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state26 = "1000000000000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state27 = "10000000000000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_pp1_stage0 = "100000000000000000000000000";
const sc_lv<28> AXI_DMA_SLAVE::ap_ST_fsm_state30 = "1000000000000000000000000000";
const bool AXI_DMA_SLAVE::ap_const_boolean_1 = true;
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> AXI_DMA_SLAVE::ap_const_lv1_0 = "0";
const sc_lv<1> AXI_DMA_SLAVE::ap_const_lv1_1 = "1";
const sc_lv<2> AXI_DMA_SLAVE::ap_const_lv2_0 = "00";
const sc_lv<2> AXI_DMA_SLAVE::ap_const_lv2_2 = "10";
const sc_lv<2> AXI_DMA_SLAVE::ap_const_lv2_3 = "11";
const sc_lv<2> AXI_DMA_SLAVE::ap_const_lv2_1 = "1";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_1 = "1";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_2 = "10";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_3 = "11";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_4 = "100";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_5 = "101";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_6 = "110";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_7 = "111";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_8 = "1000";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_1A = "11010";
const bool AXI_DMA_SLAVE::ap_const_boolean_0 = false;
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_11 = "10001";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_A = "1010";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_F = "1111";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_10 = "10000";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_14 = "10100";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_19 = "11001";
const sc_lv<31> AXI_DMA_SLAVE::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<16> AXI_DMA_SLAVE::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_B = "1011";
const sc_lv<31> AXI_DMA_SLAVE::ap_const_lv31_1 = "1";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_15 = "10101";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_9 = "1001";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_13 = "10011";
const sc_lv<32> AXI_DMA_SLAVE::ap_const_lv32_12 = "10010";

AXI_DMA_SLAVE::AXI_DMA_SLAVE(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ultra_mul_32s_32sbkb_U1 = new ultra_mul_32s_32sbkb<1,5,32,32,32>("ultra_mul_32s_32sbkb_U1");
    ultra_mul_32s_32sbkb_U1->clk(ap_clk);
    ultra_mul_32s_32sbkb_U1->reset(ap_rst);
    ultra_mul_32s_32sbkb_U1->din0(tmp4_reg_270);
    ultra_mul_32s_32sbkb_U1->din1(tmp3_reg_265);
    ultra_mul_32s_32sbkb_U1->ce(ap_var_for_const0);
    ultra_mul_32s_32sbkb_U1->dout(grp_fu_136_p2);
    ultra_mul_32s_32sbkb_U2 = new ultra_mul_32s_32sbkb<1,5,32,32,32>("ultra_mul_32s_32sbkb_U2");
    ultra_mul_32s_32sbkb_U2->clk(ap_clk);
    ultra_mul_32s_32sbkb_U2->reset(ap_rst);
    ultra_mul_32s_32sbkb_U2->din0(tmp2_reg_299);
    ultra_mul_32s_32sbkb_U2->din1(tmp1_reg_294);
    ultra_mul_32s_32sbkb_U2->ce(ap_var_for_const0);
    ultra_mul_32s_32sbkb_U2->dout(grp_fu_159_p2);
    ultra_mul_mul_16scud_U3 = new ultra_mul_mul_16scud<1,3,16,16,32>("ultra_mul_mul_16scud_U3");
    ultra_mul_mul_16scud_U3->clk(ap_clk);
    ultra_mul_mul_16scud_U3->reset(ap_rst);
    ultra_mul_mul_16scud_U3->din0(grp_fu_178_p0);
    ultra_mul_mul_16scud_U3->din1(grp_fu_178_p1);
    ultra_mul_mul_16scud_U3->ce(grp_fu_178_ce);
    ultra_mul_mul_16scud_U3->dout(grp_fu_178_p2);
    ultra_mul_mul_16scud_U4 = new ultra_mul_mul_16scud<1,3,16,16,32>("ultra_mul_mul_16scud_U4");
    ultra_mul_mul_16scud_U4->clk(ap_clk);
    ultra_mul_mul_16scud_U4->reset(ap_rst);
    ultra_mul_mul_16scud_U4->din0(tmp_data_V_3_reg_216);
    ultra_mul_mul_16scud_U4->din1(tmp_data_V_5_reg_227);
    ultra_mul_mul_16scud_U4->ce(grp_fu_184_ce);
    ultra_mul_mul_16scud_U4->dout(grp_fu_184_p2);
    ultra_mul_mul_16scud_U5 = new ultra_mul_mul_16scud<1,3,16,16,32>("ultra_mul_mul_16scud_U5");
    ultra_mul_mul_16scud_U5->clk(ap_clk);
    ultra_mul_mul_16scud_U5->reset(ap_rst);
    ultra_mul_mul_16scud_U5->din0(tmp_data_V_3_reg_216);
    ultra_mul_mul_16scud_U5->din1(tmp_data_V_1_reg_206);
    ultra_mul_mul_16scud_U5->ce(grp_fu_190_ce);
    ultra_mul_mul_16scud_U5->dout(grp_fu_190_p2);
    ultra_mul_mul_16scud_U6 = new ultra_mul_mul_16scud<1,3,16,16,32>("ultra_mul_mul_16scud_U6");
    ultra_mul_mul_16scud_U6->clk(ap_clk);
    ultra_mul_mul_16scud_U6->reset(ap_rst);
    ultra_mul_mul_16scud_U6->din0(grp_fu_196_p0);
    ultra_mul_mul_16scud_U6->din1(grp_fu_196_p1);
    ultra_mul_mul_16scud_U6->ce(grp_fu_196_ce);
    ultra_mul_mul_16scud_U6->dout(grp_fu_196_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_KER_bound_fu_140_p2);
    sensitive << ( lhs_V_3_reg_232 );
    sensitive << ( p_2_reg_275 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_165_reg_285 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_165_reg_285 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_165_reg_285 );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_164_reg_309 );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_164_reg_309 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_164_reg_309 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state18_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state19_pp0_stage0_iter1);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( tmp_165_reg_285 );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );

    SC_METHOD(thread_ap_block_state28_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state29_pp1_stage0_iter1);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( tmp_164_reg_309 );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );

    SC_METHOD(thread_ap_block_state4);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );

    SC_METHOD(thread_ap_block_state6);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );

    SC_METHOD(thread_ap_block_state9);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state18);
    sensitive << ( tmp_165_fu_148_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state28);
    sensitive << ( tmp_164_fu_167_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_grp_fu_178_ce);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_178_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_163_fu_124_p1 );

    SC_METHOD(thread_grp_fu_178_p1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_163_fu_124_p1 );

    SC_METHOD(thread_grp_fu_184_ce);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_190_ce);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_196_ce);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_196_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( rhs_V_fu_130_p1 );

    SC_METHOD(thread_grp_fu_196_p1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( rhs_V_fu_130_p1 );

    SC_METHOD(thread_i1_cast_fu_144_p1);
    sensitive << ( i1_reg_85 );

    SC_METHOD(thread_i_6_fu_153_p2);
    sensitive << ( i1_reg_85 );

    SC_METHOD(thread_i_cast_fu_163_p1);
    sensitive << ( i_reg_96 );

    SC_METHOD(thread_i_s_fu_172_p2);
    sensitive << ( i_reg_96 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_lhs_V_3_fu_118_p1);
    sensitive << ( tmp_data_V_5_reg_227 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_rhs_V_fu_130_p1);
    sensitive << ( tmp_data_V_4_reg_222 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_stream_in_TDATA_blk_n);
    sensitive << ( stream_in_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_164_reg_309 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_165_reg_285 );

    SC_METHOD(thread_stream_in_TREADY);
    sensitive << ( stream_in_V_last_0_state );

    SC_METHOD(thread_stream_in_V_data_V_0_ack_in);
    sensitive << ( stream_in_V_data_V_0_state );

    SC_METHOD(thread_stream_in_V_data_V_0_ack_out);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_164_reg_309 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_165_reg_285 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_stream_in_V_data_V_0_data_out);
    sensitive << ( stream_in_V_data_V_0_payload_A );
    sensitive << ( stream_in_V_data_V_0_payload_B );
    sensitive << ( stream_in_V_data_V_0_sel );

    SC_METHOD(thread_stream_in_V_data_V_0_load_A);
    sensitive << ( stream_in_V_data_V_0_sel_wr );
    sensitive << ( stream_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_V_data_V_0_load_B);
    sensitive << ( stream_in_V_data_V_0_sel_wr );
    sensitive << ( stream_in_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_stream_in_V_data_V_0_sel);
    sensitive << ( stream_in_V_data_V_0_sel_rd );

    SC_METHOD(thread_stream_in_V_data_V_0_state_cmp_full);
    sensitive << ( stream_in_V_data_V_0_state );

    SC_METHOD(thread_stream_in_V_data_V_0_vld_in);
    sensitive << ( stream_in_TVALID );

    SC_METHOD(thread_stream_in_V_data_V_0_vld_out);
    sensitive << ( stream_in_V_data_V_0_state );

    SC_METHOD(thread_stream_in_V_last_0_ack_out);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_164_reg_309 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_165_reg_285 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_stream_in_V_last_0_vld_in);
    sensitive << ( stream_in_TVALID );

    SC_METHOD(thread_stream_out_V_V_blk_n);
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( tmp_164_reg_309 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_165_reg_285 );

    SC_METHOD(thread_stream_out_V_V_din);
    sensitive << ( stream_in_V_data_V_0_data_out );
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_164_reg_309 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_165_reg_285 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_stream_out_V_V_write);
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( tmp_164_reg_309 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( tmp_165_reg_285 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_tmp_163_fu_124_p1);
    sensitive << ( tmp_data_V_2_reg_211 );

    SC_METHOD(thread_tmp_164_fu_167_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( IFM_bound_reg_304 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( i_cast_fu_163_p1 );

    SC_METHOD(thread_tmp_165_fu_148_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( KER_bound_reg_280 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i1_cast_fu_144_p1 );

    SC_METHOD(thread_tmp_s_fu_112_p2);
    sensitive << ( stream_in_V_data_V_0_data_out );
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( stream_in_V_data_V_0_vld_out );
    sensitive << ( stream_out_V_V_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_s_reg_202 );
    sensitive << ( tmp_165_fu_148_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( tmp_164_fu_167_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );

    SC_THREAD(thread_ap_var_for_const0);

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000000000000000000000001";
    stream_in_V_data_V_0_sel_rd = SC_LOGIC_0;
    stream_in_V_data_V_0_sel_wr = SC_LOGIC_0;
    stream_in_V_data_V_0_state = "00";
    stream_in_V_last_0_state = "00";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AXI_DMA_SLAVE_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, stream_in_TDATA, "(port)stream_in_TDATA");
    sc_trace(mVcdFile, stream_in_TVALID, "(port)stream_in_TVALID");
    sc_trace(mVcdFile, stream_in_TREADY, "(port)stream_in_TREADY");
    sc_trace(mVcdFile, stream_in_TLAST, "(port)stream_in_TLAST");
    sc_trace(mVcdFile, stream_out_V_V_din, "(port)stream_out_V_V_din");
    sc_trace(mVcdFile, stream_out_V_V_full_n, "(port)stream_out_V_V_full_n");
    sc_trace(mVcdFile, stream_out_V_V_write, "(port)stream_out_V_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, stream_in_V_data_V_0_data_out, "stream_in_V_data_V_0_data_out");
    sc_trace(mVcdFile, stream_in_V_data_V_0_vld_in, "stream_in_V_data_V_0_vld_in");
    sc_trace(mVcdFile, stream_in_V_data_V_0_vld_out, "stream_in_V_data_V_0_vld_out");
    sc_trace(mVcdFile, stream_in_V_data_V_0_ack_in, "stream_in_V_data_V_0_ack_in");
    sc_trace(mVcdFile, stream_in_V_data_V_0_ack_out, "stream_in_V_data_V_0_ack_out");
    sc_trace(mVcdFile, stream_in_V_data_V_0_payload_A, "stream_in_V_data_V_0_payload_A");
    sc_trace(mVcdFile, stream_in_V_data_V_0_payload_B, "stream_in_V_data_V_0_payload_B");
    sc_trace(mVcdFile, stream_in_V_data_V_0_sel_rd, "stream_in_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, stream_in_V_data_V_0_sel_wr, "stream_in_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, stream_in_V_data_V_0_sel, "stream_in_V_data_V_0_sel");
    sc_trace(mVcdFile, stream_in_V_data_V_0_load_A, "stream_in_V_data_V_0_load_A");
    sc_trace(mVcdFile, stream_in_V_data_V_0_load_B, "stream_in_V_data_V_0_load_B");
    sc_trace(mVcdFile, stream_in_V_data_V_0_state, "stream_in_V_data_V_0_state");
    sc_trace(mVcdFile, stream_in_V_data_V_0_state_cmp_full, "stream_in_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, stream_in_V_last_0_vld_in, "stream_in_V_last_0_vld_in");
    sc_trace(mVcdFile, stream_in_V_last_0_ack_out, "stream_in_V_last_0_ack_out");
    sc_trace(mVcdFile, stream_in_V_last_0_state, "stream_in_V_last_0_state");
    sc_trace(mVcdFile, stream_in_TDATA_blk_n, "stream_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, tmp_164_reg_309, "tmp_164_reg_309");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_165_reg_285, "tmp_165_reg_285");
    sc_trace(mVcdFile, stream_out_V_V_blk_n, "stream_out_V_V_blk_n");
    sc_trace(mVcdFile, i1_reg_85, "i1_reg_85");
    sc_trace(mVcdFile, i_reg_96, "i_reg_96");
    sc_trace(mVcdFile, tmp_s_fu_112_p2, "tmp_s_fu_112_p2");
    sc_trace(mVcdFile, tmp_s_reg_202, "tmp_s_reg_202");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_data_V_1_reg_206, "tmp_data_V_1_reg_206");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, tmp_data_V_2_reg_211, "tmp_data_V_2_reg_211");
    sc_trace(mVcdFile, ap_block_state4, "ap_block_state4");
    sc_trace(mVcdFile, tmp_data_V_3_reg_216, "tmp_data_V_3_reg_216");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, tmp_data_V_4_reg_222, "tmp_data_V_4_reg_222");
    sc_trace(mVcdFile, ap_block_state6, "ap_block_state6");
    sc_trace(mVcdFile, tmp_data_V_5_reg_227, "tmp_data_V_5_reg_227");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, lhs_V_3_fu_118_p1, "lhs_V_3_fu_118_p1");
    sc_trace(mVcdFile, lhs_V_3_reg_232, "lhs_V_3_reg_232");
    sc_trace(mVcdFile, ap_block_state9, "ap_block_state9");
    sc_trace(mVcdFile, tmp_163_fu_124_p1, "tmp_163_fu_124_p1");
    sc_trace(mVcdFile, rhs_V_fu_130_p1, "rhs_V_fu_130_p1");
    sc_trace(mVcdFile, grp_fu_178_p2, "grp_fu_178_p2");
    sc_trace(mVcdFile, tmp3_reg_265, "tmp3_reg_265");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_184_p2, "grp_fu_184_p2");
    sc_trace(mVcdFile, tmp4_reg_270, "tmp4_reg_270");
    sc_trace(mVcdFile, grp_fu_136_p2, "grp_fu_136_p2");
    sc_trace(mVcdFile, p_2_reg_275, "p_2_reg_275");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, KER_bound_fu_140_p2, "KER_bound_fu_140_p2");
    sc_trace(mVcdFile, KER_bound_reg_280, "KER_bound_reg_280");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, tmp_165_fu_148_p2, "tmp_165_fu_148_p2");
    sc_trace(mVcdFile, ap_block_state18_pp0_stage0_iter0, "ap_block_state18_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state19_pp0_stage0_iter1, "ap_block_state19_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_6_fu_153_p2, "i_6_fu_153_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, grp_fu_190_p2, "grp_fu_190_p2");
    sc_trace(mVcdFile, tmp1_reg_294, "tmp1_reg_294");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_196_p2, "grp_fu_196_p2");
    sc_trace(mVcdFile, tmp2_reg_299, "tmp2_reg_299");
    sc_trace(mVcdFile, grp_fu_159_p2, "grp_fu_159_p2");
    sc_trace(mVcdFile, IFM_bound_reg_304, "IFM_bound_reg_304");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, tmp_164_fu_167_p2, "tmp_164_fu_167_p2");
    sc_trace(mVcdFile, ap_block_state28_pp1_stage0_iter0, "ap_block_state28_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state29_pp1_stage0_iter1, "ap_block_state29_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i_s_fu_172_p2, "i_s_fu_172_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state18, "ap_condition_pp0_exit_iter0_state18");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state28, "ap_condition_pp1_exit_iter0_state28");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i1_cast_fu_144_p1, "i1_cast_fu_144_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, i_cast_fu_163_p1, "i_cast_fu_163_p1");
    sc_trace(mVcdFile, grp_fu_178_p0, "grp_fu_178_p0");
    sc_trace(mVcdFile, grp_fu_178_p1, "grp_fu_178_p1");
    sc_trace(mVcdFile, grp_fu_196_p0, "grp_fu_196_p0");
    sc_trace(mVcdFile, grp_fu_196_p1, "grp_fu_196_p1");
    sc_trace(mVcdFile, grp_fu_178_ce, "grp_fu_178_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_184_ce, "grp_fu_184_ce");
    sc_trace(mVcdFile, grp_fu_190_ce, "grp_fu_190_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, grp_fu_196_ce, "grp_fu_196_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
}

AXI_DMA_SLAVE::~AXI_DMA_SLAVE() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ultra_mul_32s_32sbkb_U1;
    delete ultra_mul_32s_32sbkb_U2;
    delete ultra_mul_mul_16scud_U3;
    delete ultra_mul_mul_16scud_U4;
    delete ultra_mul_mul_16scud_U5;
    delete ultra_mul_mul_16scud_U6;
}

void AXI_DMA_SLAVE::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void AXI_DMA_SLAVE::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state18.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state18.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state18.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read())) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state28.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state28.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state28.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read())) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_fu_148_p2.read()))) {
        i1_reg_85 = i_6_fu_153_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        i1_reg_85 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_fu_167_p2.read()))) {
        i_reg_96 = i_s_fu_172_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        i_reg_96 = ap_const_lv31_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        stream_in_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_vld_out.read()))) {
            stream_in_V_data_V_0_sel_rd =  (sc_logic) (~stream_in_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        stream_in_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_ack_in.read()))) {
            stream_in_V_data_V_0_sel_wr =  (sc_logic) (~stream_in_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        stream_in_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(stream_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(stream_in_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            stream_in_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(stream_in_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(stream_in_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            stream_in_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(stream_in_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(stream_in_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(stream_in_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_ack_out.read()))))) {
            stream_in_V_data_V_0_state = ap_const_lv2_3;
        } else {
            stream_in_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        stream_in_V_last_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_last_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_last_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_V_last_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_last_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_V_last_0_state.read())))) {
            stream_in_V_last_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_last_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_last_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_V_last_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_last_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_V_last_0_state.read())))) {
            stream_in_V_last_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_last_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, stream_in_V_last_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_last_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, stream_in_V_last_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, stream_in_V_last_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_last_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_last_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, stream_in_V_last_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_last_0_ack_out.read()))))) {
            stream_in_V_last_0_state = ap_const_lv2_3;
        } else {
            stream_in_V_last_0_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        IFM_bound_reg_304 = grp_fu_159_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        KER_bound_reg_280 = KER_bound_fu_140_p2.read();
    }
    if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(tmp_s_reg_202.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        lhs_V_3_reg_232 = lhs_V_3_fu_118_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        p_2_reg_275 = grp_fu_136_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_load_A.read())) {
        stream_in_V_data_V_0_payload_A = stream_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_load_B.read())) {
        stream_in_V_data_V_0_payload_B = stream_in_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp1_reg_294 = grp_fu_190_p2.read();
        tmp2_reg_299 = grp_fu_196_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        tmp3_reg_265 = grp_fu_178_p2.read();
        tmp4_reg_270 = grp_fu_184_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_164_reg_309 = tmp_164_fu_167_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_165_reg_285 = tmp_165_fu_148_p2.read();
    }
    if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        tmp_data_V_1_reg_206 = stream_in_V_data_V_0_data_out.read();
    }
    if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp_data_V_2_reg_211 = stream_in_V_data_V_0_data_out.read();
    }
    if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        tmp_data_V_3_reg_216 = stream_in_V_data_V_0_data_out.read();
    }
    if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        tmp_data_V_4_reg_222 = stream_in_V_data_V_0_data_out.read();
    }
    if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        tmp_data_V_5_reg_227 = stream_in_V_data_V_0_data_out.read();
    }
    if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        tmp_s_reg_202 = tmp_s_fu_112_p2.read();
    }
}

void AXI_DMA_SLAVE::thread_KER_bound_fu_140_p2() {
    KER_bound_fu_140_p2 = (!p_2_reg_275.read().is_01() || !lhs_V_3_reg_232.read().is_01())? sc_lv<32>(): (sc_biguint<32>(p_2_reg_275.read()) + sc_bigint<32>(lhs_V_3_reg_232.read()));
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[17];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[26];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[18];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[19];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[20];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[21];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[25];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void AXI_DMA_SLAVE::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void AXI_DMA_SLAVE::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXI_DMA_SLAVE::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
   esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
   esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))));
}

void AXI_DMA_SLAVE::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
   esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
   esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))));
}

void AXI_DMA_SLAVE::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
   esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
   esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))));
}

void AXI_DMA_SLAVE::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXI_DMA_SLAVE::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
   esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
   esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))));
}

void AXI_DMA_SLAVE::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
   esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
   esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))));
}

void AXI_DMA_SLAVE::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
   esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || 
  (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
   esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))));
}

void AXI_DMA_SLAVE::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0));
}

void AXI_DMA_SLAVE::thread_ap_block_state18_pp0_stage0_iter0() {
    ap_block_state18_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXI_DMA_SLAVE::thread_ap_block_state19_pp0_stage0_iter1() {
    ap_block_state19_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
  esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
  esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)));
}

void AXI_DMA_SLAVE::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0));
}

void AXI_DMA_SLAVE::thread_ap_block_state28_pp1_stage0_iter0() {
    ap_block_state28_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXI_DMA_SLAVE::thread_ap_block_state29_pp1_stage0_iter1() {
    ap_block_state29_pp1_stage0_iter1 = ((esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
  esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
  esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)));
}

void AXI_DMA_SLAVE::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0));
}

void AXI_DMA_SLAVE::thread_ap_block_state4() {
    ap_block_state4 = (esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0));
}

void AXI_DMA_SLAVE::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0));
}

void AXI_DMA_SLAVE::thread_ap_block_state6() {
    ap_block_state6 = (esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0));
}

void AXI_DMA_SLAVE::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0));
}

void AXI_DMA_SLAVE::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0));
}

void AXI_DMA_SLAVE::thread_ap_block_state9() {
    ap_block_state9 = (esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0));
}

void AXI_DMA_SLAVE::thread_ap_condition_pp0_exit_iter0_state18() {
    if (esl_seteq<1,1,1>(tmp_165_fu_148_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp0_exit_iter0_state18 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state18 = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_ap_condition_pp1_exit_iter0_state28() {
    if (esl_seteq<1,1,1>(tmp_164_fu_167_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp1_exit_iter0_state28 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state28 = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void AXI_DMA_SLAVE::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void AXI_DMA_SLAVE::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void AXI_DMA_SLAVE::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void AXI_DMA_SLAVE::thread_grp_fu_178_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        grp_fu_178_ce = ap_const_logic_1;
    } else {
        grp_fu_178_ce = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_grp_fu_178_p0() {
    grp_fu_178_p0 =  (sc_lv<16>) (tmp_163_fu_124_p1.read());
}

void AXI_DMA_SLAVE::thread_grp_fu_178_p1() {
    grp_fu_178_p1 =  (sc_lv<16>) (tmp_163_fu_124_p1.read());
}

void AXI_DMA_SLAVE::thread_grp_fu_184_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        grp_fu_184_ce = ap_const_logic_1;
    } else {
        grp_fu_184_ce = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_grp_fu_190_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        grp_fu_190_ce = ap_const_logic_1;
    } else {
        grp_fu_190_ce = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_grp_fu_196_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        grp_fu_196_ce = ap_const_logic_1;
    } else {
        grp_fu_196_ce = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_grp_fu_196_p0() {
    grp_fu_196_p0 =  (sc_lv<16>) (rhs_V_fu_130_p1.read());
}

void AXI_DMA_SLAVE::thread_grp_fu_196_p1() {
    grp_fu_196_p1 =  (sc_lv<16>) (rhs_V_fu_130_p1.read());
}

void AXI_DMA_SLAVE::thread_i1_cast_fu_144_p1() {
    i1_cast_fu_144_p1 = esl_zext<32,31>(i1_reg_85.read());
}

void AXI_DMA_SLAVE::thread_i_6_fu_153_p2() {
    i_6_fu_153_p2 = (!i1_reg_85.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i1_reg_85.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void AXI_DMA_SLAVE::thread_i_cast_fu_163_p1() {
    i_cast_fu_163_p1 = esl_zext<32,31>(i_reg_96.read());
}

void AXI_DMA_SLAVE::thread_i_s_fu_172_p2() {
    i_s_fu_172_p2 = (!i_reg_96.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(i_reg_96.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void AXI_DMA_SLAVE::thread_internal_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_lhs_V_3_fu_118_p1() {
    lhs_V_3_fu_118_p1 = esl_sext<32,16>(tmp_data_V_5_reg_227.read());
}

void AXI_DMA_SLAVE::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void AXI_DMA_SLAVE::thread_rhs_V_fu_130_p1() {
    rhs_V_fu_130_p1 = esl_sext<32,16>(tmp_data_V_4_reg_222.read());
}

void AXI_DMA_SLAVE::thread_start_out() {
    start_out = real_start.read();
}

void AXI_DMA_SLAVE::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_stream_in_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read())))) {
        stream_in_TDATA_blk_n = stream_in_V_data_V_0_state.read()[0];
    } else {
        stream_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void AXI_DMA_SLAVE::thread_stream_in_TREADY() {
    stream_in_TREADY = stream_in_V_last_0_state.read()[1];
}

void AXI_DMA_SLAVE::thread_stream_in_V_data_V_0_ack_in() {
    stream_in_V_data_V_0_ack_in = stream_in_V_data_V_0_state.read()[1];
}

void AXI_DMA_SLAVE::thread_stream_in_V_data_V_0_ack_out() {
    if (((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        stream_in_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        stream_in_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_stream_in_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, stream_in_V_data_V_0_sel.read())) {
        stream_in_V_data_V_0_data_out = stream_in_V_data_V_0_payload_B.read();
    } else {
        stream_in_V_data_V_0_data_out = stream_in_V_data_V_0_payload_A.read();
    }
}

void AXI_DMA_SLAVE::thread_stream_in_V_data_V_0_load_A() {
    stream_in_V_data_V_0_load_A = (stream_in_V_data_V_0_state_cmp_full.read() & ~stream_in_V_data_V_0_sel_wr.read());
}

void AXI_DMA_SLAVE::thread_stream_in_V_data_V_0_load_B() {
    stream_in_V_data_V_0_load_B = (stream_in_V_data_V_0_sel_wr.read() & stream_in_V_data_V_0_state_cmp_full.read());
}

void AXI_DMA_SLAVE::thread_stream_in_V_data_V_0_sel() {
    stream_in_V_data_V_0_sel = stream_in_V_data_V_0_sel_rd.read();
}

void AXI_DMA_SLAVE::thread_stream_in_V_data_V_0_state_cmp_full() {
    stream_in_V_data_V_0_state_cmp_full =  (sc_logic) ((!stream_in_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void AXI_DMA_SLAVE::thread_stream_in_V_data_V_0_vld_in() {
    stream_in_V_data_V_0_vld_in = stream_in_TVALID.read();
}

void AXI_DMA_SLAVE::thread_stream_in_V_data_V_0_vld_out() {
    stream_in_V_data_V_0_vld_out = stream_in_V_data_V_0_state.read()[0];
}

void AXI_DMA_SLAVE::thread_stream_in_V_last_0_ack_out() {
    if (((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        stream_in_V_last_0_ack_out = ap_const_logic_1;
    } else {
        stream_in_V_last_0_ack_out = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_stream_in_V_last_0_vld_in() {
    stream_in_V_last_0_vld_in = stream_in_TVALID.read();
}

void AXI_DMA_SLAVE::thread_stream_out_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read())))) {
        stream_out_V_V_blk_n = stream_out_V_V_full_n.read();
    } else {
        stream_out_V_V_blk_n = ap_const_logic_1;
    }
}

void AXI_DMA_SLAVE::thread_stream_out_V_V_din() {
    stream_out_V_V_din = stream_in_V_data_V_0_data_out.read();
}

void AXI_DMA_SLAVE::thread_stream_out_V_V_write() {
    if (((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          !(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0))) || 
         (!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_165_reg_285.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_164_reg_309.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        stream_out_V_V_write = ap_const_logic_1;
    } else {
        stream_out_V_V_write = ap_const_logic_0;
    }
}

void AXI_DMA_SLAVE::thread_tmp_163_fu_124_p1() {
    tmp_163_fu_124_p1 = esl_sext<32,16>(tmp_data_V_2_reg_211.read());
}

void AXI_DMA_SLAVE::thread_tmp_164_fu_167_p2() {
    tmp_164_fu_167_p2 = (!i_cast_fu_163_p1.read().is_01() || !IFM_bound_reg_304.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i_cast_fu_163_p1.read()) < sc_bigint<32>(IFM_bound_reg_304.read()));
}

void AXI_DMA_SLAVE::thread_tmp_165_fu_148_p2() {
    tmp_165_fu_148_p2 = (!i1_cast_fu_144_p1.read().is_01() || !KER_bound_reg_280.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i1_cast_fu_144_p1.read()) < sc_bigint<32>(KER_bound_reg_280.read()));
}

void AXI_DMA_SLAVE::thread_tmp_s_fu_112_p2() {
    tmp_s_fu_112_p2 = (!stream_in_V_data_V_0_data_out.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(stream_in_V_data_V_0_data_out.read() == ap_const_lv16_0);
}

void AXI_DMA_SLAVE::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(real_start.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(tmp_s_reg_202.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state21;
            } else if ((!(esl_seteq<1,1,1>(stream_in_V_data_V_0_vld_out.read(), ap_const_logic_0) || esl_seteq<1,1,1>(stream_out_V_V_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(tmp_s_reg_202.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 131072 : 
            if (!(esl_seteq<1,1,1>(tmp_165_fu_148_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(tmp_165_fu_148_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp0_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 67108864 : 
            if (!(esl_seteq<1,1,1>(tmp_164_fu_167_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(tmp_164_fu_167_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_pp1_stage0_subdone.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state30;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

}

