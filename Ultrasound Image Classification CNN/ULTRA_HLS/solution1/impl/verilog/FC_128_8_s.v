// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FC_128_8_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        stream_in_V_V_dout,
        stream_in_V_V_empty_n,
        stream_in_V_V_read,
        stream_out_V_V_din,
        stream_out_V_V_full_n,
        stream_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 27'd65536;
parameter    ap_ST_fsm_state19 = 27'd131072;
parameter    ap_ST_fsm_state20 = 27'd262144;
parameter    ap_ST_fsm_pp1_stage0 = 27'd524288;
parameter    ap_ST_fsm_state24 = 27'd1048576;
parameter    ap_ST_fsm_pp2_stage0 = 27'd2097152;
parameter    ap_ST_fsm_state44 = 27'd4194304;
parameter    ap_ST_fsm_pp3_stage0 = 27'd8388608;
parameter    ap_ST_fsm_state48 = 27'd16777216;
parameter    ap_ST_fsm_pp4_stage0 = 27'd33554432;
parameter    ap_ST_fsm_state52 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] stream_in_V_V_dout;
input   stream_in_V_V_empty_n;
output   stream_in_V_V_read;
output  [15:0] stream_out_V_V_din;
input   stream_out_V_V_full_n;
output   stream_out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg stream_in_V_V_read;
reg[15:0] stream_out_V_V_din;
reg stream_out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg  signed [7:0] multiple_V_11;
reg   [2:0] bias_V_11_address0;
reg    bias_V_11_ce0;
reg    bias_V_11_we0;
wire   [7:0] bias_V_11_q0;
wire   [3:0] A_V_5_0_address0;
reg    A_V_5_0_ce0;
wire   [7:0] A_V_5_0_q0;
wire   [3:0] A_V_5_0_address1;
reg    A_V_5_0_ce1;
reg    A_V_5_0_we1;
wire   [3:0] A_V_5_1_address0;
reg    A_V_5_1_ce0;
wire   [7:0] A_V_5_1_q0;
wire   [3:0] A_V_5_1_address1;
reg    A_V_5_1_ce1;
reg    A_V_5_1_we1;
wire   [3:0] A_V_5_2_address0;
reg    A_V_5_2_ce0;
wire   [7:0] A_V_5_2_q0;
wire   [3:0] A_V_5_2_address1;
reg    A_V_5_2_ce1;
reg    A_V_5_2_we1;
wire   [3:0] A_V_5_3_address0;
reg    A_V_5_3_ce0;
wire   [7:0] A_V_5_3_q0;
wire   [3:0] A_V_5_3_address1;
reg    A_V_5_3_ce1;
reg    A_V_5_3_we1;
wire   [3:0] A_V_5_4_address0;
reg    A_V_5_4_ce0;
wire   [7:0] A_V_5_4_q0;
wire   [3:0] A_V_5_4_address1;
reg    A_V_5_4_ce1;
reg    A_V_5_4_we1;
wire   [3:0] A_V_5_5_address0;
reg    A_V_5_5_ce0;
wire   [7:0] A_V_5_5_q0;
wire   [3:0] A_V_5_5_address1;
reg    A_V_5_5_ce1;
reg    A_V_5_5_we1;
wire   [3:0] A_V_5_6_address0;
reg    A_V_5_6_ce0;
wire   [7:0] A_V_5_6_q0;
wire   [3:0] A_V_5_6_address1;
reg    A_V_5_6_ce1;
reg    A_V_5_6_we1;
wire   [3:0] A_V_5_7_address0;
reg    A_V_5_7_ce0;
wire   [7:0] A_V_5_7_q0;
wire   [3:0] A_V_5_7_address1;
reg    A_V_5_7_ce1;
reg    A_V_5_7_we1;
wire   [6:0] B_V_5_0_address0;
reg    B_V_5_0_ce0;
wire   [7:0] B_V_5_0_q0;
wire   [6:0] B_V_5_0_address1;
reg    B_V_5_0_ce1;
reg    B_V_5_0_we1;
wire   [6:0] B_V_5_1_address0;
reg    B_V_5_1_ce0;
wire   [7:0] B_V_5_1_q0;
wire   [6:0] B_V_5_1_address1;
reg    B_V_5_1_ce1;
reg    B_V_5_1_we1;
wire   [6:0] B_V_5_2_address0;
reg    B_V_5_2_ce0;
wire   [7:0] B_V_5_2_q0;
wire   [6:0] B_V_5_2_address1;
reg    B_V_5_2_ce1;
reg    B_V_5_2_we1;
wire   [6:0] B_V_5_3_address0;
reg    B_V_5_3_ce0;
wire   [7:0] B_V_5_3_q0;
wire   [6:0] B_V_5_3_address1;
reg    B_V_5_3_ce1;
reg    B_V_5_3_we1;
wire   [6:0] B_V_5_4_address0;
reg    B_V_5_4_ce0;
wire   [7:0] B_V_5_4_q0;
wire   [6:0] B_V_5_4_address1;
reg    B_V_5_4_ce1;
reg    B_V_5_4_we1;
wire   [6:0] B_V_5_5_address0;
reg    B_V_5_5_ce0;
wire   [7:0] B_V_5_5_q0;
wire   [6:0] B_V_5_5_address1;
reg    B_V_5_5_ce1;
reg    B_V_5_5_we1;
wire   [6:0] B_V_5_6_address0;
reg    B_V_5_6_ce0;
wire   [7:0] B_V_5_6_q0;
wire   [6:0] B_V_5_6_address1;
reg    B_V_5_6_ce1;
reg    B_V_5_6_we1;
wire   [6:0] B_V_5_7_address0;
reg    B_V_5_7_ce0;
wire   [7:0] B_V_5_7_q0;
wire   [6:0] B_V_5_7_address1;
reg    B_V_5_7_ce1;
reg    B_V_5_7_we1;
reg    stream_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond_flatten_reg_1742;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] exitcond2_reg_1787;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_40_reg_1389;
reg    stream_out_V_V_blk_n;
reg    ap_enable_reg_pp2_iter18;
wire    ap_block_pp2_stage0;
reg   [0:0] ifzero_reg_1555;
reg   [0:0] ifzero_reg_1555_pp2_iter17_reg;
reg   [30:0] i5_reg_643;
reg   [7:0] i2_reg_665;
reg   [10:0] indvar_flatten6_reg_676;
reg   [3:0] i3_reg_687;
reg   [22:0] p_3_reg_698;
reg   [7:0] j4_reg_710;
reg   [10:0] indvar_flatten_reg_721;
reg   [7:0] j_reg_732;
reg   [3:0] i_reg_743;
reg   [3:0] i1_reg_754;
reg   [3:0] i1_reg_754_pp4_iter1_reg;
wire    ap_block_state49_pp4_stage0_iter0;
reg    ap_block_state50_pp4_stage0_iter1;
wire    ap_block_state51_pp4_stage0_iter2;
reg    ap_block_pp4_stage0_11001;
reg   [15:0] tmp_V_reg_1318;
reg    ap_block_state1;
reg   [15:0] tmp_V_44_reg_1324;
reg    ap_block_state2;
reg  signed [15:0] tmp_V_46_reg_1329;
reg    ap_block_state3;
reg  signed [15:0] tmp_V_48_reg_1334;
reg    ap_block_state4;
reg  signed [15:0] tmp_V_52_reg_1339;
reg    ap_block_state6;
wire   [0:0] tmp_s_fu_766_p2;
reg    ap_block_state8;
wire   [0:0] tmp_37_fu_771_p2;
wire  signed [31:0] lhs_V_fu_776_p1;
reg  signed [31:0] lhs_V_reg_1352;
wire  signed [31:0] tmp_38_fu_782_p1;
wire  signed [31:0] grp_fu_1291_p2;
reg  signed [31:0] tmp1_reg_1369;
wire    ap_CS_fsm_state10;
wire  signed [31:0] grp_fu_1297_p2;
reg  signed [31:0] tmp2_reg_1374;
wire   [31:0] grp_fu_795_p2;
reg   [31:0] p_8_reg_1379;
wire    ap_CS_fsm_state15;
wire   [31:0] KER_bound_fu_799_p2;
reg   [31:0] KER_bound_reg_1384;
wire    ap_CS_fsm_state16;
wire   [0:0] tmp_40_fu_807_p2;
wire    ap_block_state17_pp0_stage0_iter0;
reg    ap_block_state18_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [30:0] i_9_fu_812_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_39_fu_822_p2;
wire    ap_CS_fsm_state20;
wire   [14:0] num_img_3_fu_827_p2;
reg   [14:0] num_img_3_reg_1402;
wire   [0:0] exitcond4_fu_833_p2;
wire    ap_block_state21_pp1_stage0_iter0;
reg    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_state23_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [7:0] i_1_fu_839_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [3:0] arrayNo_cast_reg_1416;
reg   [3:0] arrayNo_cast_reg_1416_pp1_iter1_reg;
wire   [3:0] tmp_68_fu_855_p1;
reg   [3:0] tmp_68_reg_1420;
reg   [3:0] tmp_68_reg_1420_pp1_iter1_reg;
wire   [7:0] tmp_67_fu_859_p1;
reg   [7:0] tmp_67_reg_1425;
wire   [0:0] exitcond_flatten8_fu_874_p2;
reg   [0:0] exitcond_flatten8_reg_1437;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state25_pp2_stage0_iter0;
wire    ap_block_state26_pp2_stage0_iter1;
wire    ap_block_state27_pp2_stage0_iter2;
wire    ap_block_state28_pp2_stage0_iter3;
wire    ap_block_state29_pp2_stage0_iter4;
wire    ap_block_state30_pp2_stage0_iter5;
wire    ap_block_state31_pp2_stage0_iter6;
wire    ap_block_state32_pp2_stage0_iter7;
wire    ap_block_state33_pp2_stage0_iter8;
wire    ap_block_state34_pp2_stage0_iter9;
wire    ap_block_state35_pp2_stage0_iter10;
wire    ap_block_state36_pp2_stage0_iter11;
wire    ap_block_state37_pp2_stage0_iter12;
wire    ap_block_state38_pp2_stage0_iter13;
wire    ap_block_state39_pp2_stage0_iter14;
wire    ap_block_state40_pp2_stage0_iter15;
wire    ap_block_state41_pp2_stage0_iter16;
wire    ap_block_state42_pp2_stage0_iter17;
reg    ap_block_state43_pp2_stage0_iter18;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond_flatten8_reg_1437_pp2_iter1_reg;
reg   [0:0] exitcond_flatten8_reg_1437_pp2_iter2_reg;
reg   [0:0] exitcond_flatten8_reg_1437_pp2_iter3_reg;
reg   [0:0] exitcond_flatten8_reg_1437_pp2_iter4_reg;
reg   [0:0] exitcond_flatten8_reg_1437_pp2_iter5_reg;
wire   [10:0] indvar_flatten_next7_fu_880_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] exitcond5_fu_892_p2;
reg   [0:0] exitcond5_reg_1446;
reg   [0:0] exitcond5_reg_1446_pp2_iter1_reg;
reg   [0:0] exitcond5_reg_1446_pp2_iter2_reg;
reg   [0:0] exitcond5_reg_1446_pp2_iter3_reg;
reg   [0:0] exitcond5_reg_1446_pp2_iter4_reg;
wire   [3:0] tmp_47_mid2_v_fu_906_p3;
reg   [3:0] tmp_47_mid2_v_reg_1451;
reg   [3:0] tmp_47_mid2_v_reg_1451_pp2_iter1_reg;
reg   [3:0] tmp_47_mid2_v_reg_1451_pp2_iter2_reg;
reg   [3:0] tmp_47_mid2_v_reg_1451_pp2_iter3_reg;
reg   [3:0] arrayNo4_reg_1458;
reg   [3:0] arrayNo4_reg_1458_pp2_iter1_reg;
reg   [3:0] arrayNo4_reg_1458_pp2_iter2_reg;
wire   [3:0] tmp_69_fu_924_p1;
reg   [3:0] tmp_69_reg_1463;
wire   [7:0] j_5_fu_928_p2;
reg   [7:0] j_5_reg_1469;
wire   [0:0] ifzero_fu_963_p2;
reg   [0:0] ifzero_reg_1555_pp2_iter2_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter3_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter4_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter5_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter6_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter7_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter8_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter9_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter10_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter11_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter12_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter13_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter14_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter15_reg;
reg   [0:0] ifzero_reg_1555_pp2_iter16_reg;
reg   [7:0] A_V_5_0_load_reg_1559;
reg    ap_enable_reg_pp2_iter2;
reg   [7:0] A_V_5_1_load_reg_1564;
reg   [7:0] A_V_5_2_load_reg_1569;
reg   [7:0] A_V_5_3_load_reg_1574;
reg   [7:0] A_V_5_4_load_reg_1579;
reg   [7:0] A_V_5_5_load_reg_1584;
reg   [7:0] A_V_5_6_load_reg_1589;
reg   [7:0] A_V_5_7_load_reg_1594;
reg   [7:0] B_V_5_0_load_reg_1599;
reg   [7:0] B_V_5_1_load_reg_1604;
reg   [7:0] B_V_5_2_load_reg_1609;
reg   [7:0] B_V_5_3_load_reg_1614;
reg   [7:0] B_V_5_4_load_reg_1619;
reg   [7:0] B_V_5_5_load_reg_1624;
reg   [7:0] B_V_5_6_load_reg_1629;
reg   [7:0] B_V_5_7_load_reg_1634;
wire  signed [22:0] grp_fu_1303_p3;
reg  signed [22:0] buf_V_reg_1654;
reg    ap_enable_reg_pp2_iter5;
reg   [7:0] bias_V_11_load_reg_1660;
(* use_dsp48 = "no" *) wire   [22:0] r_V_4_tr_fu_1021_p2;
reg   [22:0] r_V_4_tr_reg_1665;
reg   [0:0] tmp_70_reg_1670;
reg   [0:0] tmp_70_reg_1670_pp2_iter7_reg;
reg   [14:0] tmp_57_reg_1675;
reg   [14:0] tmp_57_reg_1675_pp2_iter7_reg;
reg   [14:0] tmp_55_reg_1680;
wire   [16:0] tmp_52_fu_1079_p3;
reg  signed [16:0] tmp_52_reg_1685;
wire  signed [21:0] grp_fu_1311_p2;
reg  signed [21:0] r_V_5_reg_1700;
reg   [0:0] tmp_72_reg_1706;
reg   [0:0] tmp_72_reg_1706_pp2_iter12_reg;
reg   [0:0] tmp_72_reg_1706_pp2_iter13_reg;
reg   [0:0] tmp_72_reg_1706_pp2_iter14_reg;
reg   [0:0] tmp_72_reg_1706_pp2_iter15_reg;
reg   [0:0] tmp_72_reg_1706_pp2_iter16_reg;
wire   [0:0] tmp_i_fu_1113_p2;
reg   [0:0] tmp_i_reg_1717;
reg   [0:0] tmp_i_reg_1717_pp2_iter13_reg;
reg   [0:0] tmp_i_reg_1717_pp2_iter14_reg;
reg   [0:0] tmp_i_reg_1717_pp2_iter15_reg;
reg   [0:0] tmp_i_reg_1717_pp2_iter16_reg;
wire   [44:0] tmp_71_fu_1118_p1;
reg   [44:0] tmp_71_reg_1722;
reg   [18:0] tmp_74_reg_1727;
reg   [18:0] tmp_74_reg_1727_pp2_iter16_reg;
reg   [17:0] tmp_73_reg_1732;
wire   [15:0] Outbuf_V_fu_1181_p3;
reg   [15:0] Outbuf_V_reg_1737;
wire   [0:0] exitcond_flatten_fu_1188_p2;
wire    ap_block_state45_pp3_stage0_iter0;
reg    ap_block_state46_pp3_stage0_iter1;
wire    ap_block_state47_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [10:0] indvar_flatten_next_fu_1194_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [3:0] i_mid2_fu_1212_p3;
reg   [3:0] i_mid2_reg_1751;
reg   [3:0] i_mid2_reg_1751_pp3_iter1_reg;
wire   [7:0] arrayNo3_cast_mid2_v_fu_1220_p3;
reg   [7:0] arrayNo3_cast_mid2_v_reg_1756;
reg   [3:0] arrayNo3_cast_mid2_reg_1761;
reg   [3:0] arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg;
wire   [3:0] tmp_63_fu_1238_p1;
reg   [3:0] tmp_63_reg_1765;
reg   [3:0] tmp_63_reg_1765_pp3_iter1_reg;
wire   [3:0] i_10_fu_1242_p2;
wire   [7:0] tmp_64_fu_1248_p1;
reg   [7:0] tmp_64_reg_1775;
wire   [0:0] exitcond2_fu_1270_p2;
reg   [0:0] exitcond2_reg_1787_pp4_iter1_reg;
wire   [3:0] i_8_fu_1276_p2;
reg   [3:0] i_8_reg_1791;
reg    ap_enable_reg_pp4_iter0;
wire   [7:0] tmp_66_fu_1282_p1;
reg   [7:0] tmp_66_reg_1796;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state17;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state21;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state24;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state25;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state45;
reg    ap_enable_reg_pp3_iter2;
wire    ap_CS_fsm_state48;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state49;
reg    ap_enable_reg_pp4_iter2;
reg   [14:0] num_img_reg_654;
wire    ap_CS_fsm_state44;
reg   [3:0] ap_phi_mux_i3_phi_fu_691_p4;
reg   [22:0] ap_phi_mux_p_3_phi_fu_702_p4;
reg   [7:0] ap_phi_mux_j4_phi_fu_714_p4;
reg   [7:0] ap_phi_mux_j_phi_fu_736_p4;
reg   [3:0] ap_phi_mux_i1_phi_fu_758_p4;
wire   [63:0] newIndex9_fu_863_p1;
wire   [63:0] tmp_53_fu_951_p1;
wire   [63:0] newIndex3_fu_934_p1;
wire   [63:0] tmp_47_mid2_fu_1007_p1;
wire   [63:0] tmp_49_fu_1258_p1;
wire   [63:0] tmp_43_fu_1286_p1;
reg    ap_block_state5;
reg    ap_block_state7;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp2_stage0_01001;
reg    ap_block_pp3_stage0_01001;
reg    ap_block_pp4_stage0_01001;
wire   [7:0] tmp_62_fu_785_p1;
wire    ap_CS_fsm_state11;
wire   [31:0] i5_cast_fu_803_p1;
wire   [15:0] num_img_cast_fu_818_p1;
wire   [3:0] i_11_fu_886_p2;
wire   [7:0] j4_mid2_fu_898_p3;
wire   [7:0] tmp_50_fu_945_p3;
wire   [31:0] arrayNo4_cast_fu_968_p1;
wire  signed [7:0] tmp_47_fu_971_p10;
wire  signed [7:0] tmp_54_fu_989_p10;
wire  signed [22:0] tmp_58_cast_fu_1018_p1;
wire   [22:0] p_neg_fu_1044_p2;
wire  signed [15:0] tmp_56_fu_1059_p1;
wire   [16:0] tmp_60_cast_fu_1062_p1;
wire  signed [15:0] tmp_58_fu_1066_p1;
wire   [16:0] tmp_51_fu_1069_p2;
wire   [16:0] tmp_62_cast_fu_1075_p1;
wire   [23:0] grp_fu_1107_p0;
wire   [45:0] grp_fu_1107_p2;
wire   [44:0] neg_mul_fu_1132_p2;
wire  signed [22:0] tmp_59_fu_1147_p1;
wire  signed [22:0] tmp_60_fu_1150_p1;
wire   [22:0] p_v_fu_1153_p3;
wire   [15:0] tmp_75_fu_1160_p1;
wire   [15:0] neg_ti_fu_1164_p2;
wire   [15:0] tmp_76_fu_1170_p1;
wire   [15:0] tmp_61_fu_1174_p3;
wire   [0:0] exitcond_fu_1206_p2;
wire   [7:0] j_4_fu_1200_p2;
wire   [7:0] tmp_48_fu_1252_p3;
wire  signed [15:0] grp_fu_1291_p0;
wire  signed [15:0] grp_fu_1291_p1;
wire   [22:0] grp_fu_1303_p2;
reg    grp_fu_1107_ce;
reg    grp_fu_1291_ce;
wire    ap_CS_fsm_state9;
reg    grp_fu_1297_ce;
reg    grp_fu_1303_ce;
reg    grp_fu_1311_ce;
wire    ap_CS_fsm_state19;
reg   [26:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 27'd1;
#0 multiple_V_11 = 8'd0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
end

FC_128_8_s_bias_VUhA #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
bias_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_V_11_address0),
    .ce0(bias_V_11_ce0),
    .we0(bias_V_11_we0),
    .d0(tmp_66_reg_1796),
    .q0(bias_V_11_q0)
);

FC_144_128_s_A_V_zec #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_0_address0),
    .ce0(A_V_5_0_ce0),
    .q0(A_V_5_0_q0),
    .address1(A_V_5_0_address1),
    .ce1(A_V_5_0_ce1),
    .we1(A_V_5_0_we1),
    .d1(tmp_67_reg_1425)
);

FC_144_128_s_A_V_zec #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_1_address0),
    .ce0(A_V_5_1_ce0),
    .q0(A_V_5_1_q0),
    .address1(A_V_5_1_address1),
    .ce1(A_V_5_1_ce1),
    .we1(A_V_5_1_we1),
    .d1(tmp_67_reg_1425)
);

FC_144_128_s_A_V_zec #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_2_address0),
    .ce0(A_V_5_2_ce0),
    .q0(A_V_5_2_q0),
    .address1(A_V_5_2_address1),
    .ce1(A_V_5_2_ce1),
    .we1(A_V_5_2_we1),
    .d1(tmp_67_reg_1425)
);

FC_144_128_s_A_V_zec #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_3_address0),
    .ce0(A_V_5_3_ce0),
    .q0(A_V_5_3_q0),
    .address1(A_V_5_3_address1),
    .ce1(A_V_5_3_ce1),
    .we1(A_V_5_3_we1),
    .d1(tmp_67_reg_1425)
);

FC_144_128_s_A_V_zec #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_4_address0),
    .ce0(A_V_5_4_ce0),
    .q0(A_V_5_4_q0),
    .address1(A_V_5_4_address1),
    .ce1(A_V_5_4_ce1),
    .we1(A_V_5_4_we1),
    .d1(tmp_67_reg_1425)
);

FC_144_128_s_A_V_zec #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_5_address0),
    .ce0(A_V_5_5_ce0),
    .q0(A_V_5_5_q0),
    .address1(A_V_5_5_address1),
    .ce1(A_V_5_5_ce1),
    .we1(A_V_5_5_we1),
    .d1(tmp_67_reg_1425)
);

FC_144_128_s_A_V_zec #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_6_address0),
    .ce0(A_V_5_6_ce0),
    .q0(A_V_5_6_q0),
    .address1(A_V_5_6_address1),
    .ce1(A_V_5_6_ce1),
    .we1(A_V_5_6_we1),
    .d1(tmp_67_reg_1425)
);

FC_144_128_s_A_V_zec #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_7_address0),
    .ce0(A_V_5_7_ce0),
    .q0(A_V_5_7_q0),
    .address1(A_V_5_7_address1),
    .ce1(A_V_5_7_ce1),
    .we1(A_V_5_7_we1),
    .d1(tmp_67_reg_1425)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_0_address0),
    .ce0(B_V_5_0_ce0),
    .q0(B_V_5_0_q0),
    .address1(B_V_5_0_address1),
    .ce1(B_V_5_0_ce1),
    .we1(B_V_5_0_we1),
    .d1(tmp_64_reg_1775)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_1_address0),
    .ce0(B_V_5_1_ce0),
    .q0(B_V_5_1_q0),
    .address1(B_V_5_1_address1),
    .ce1(B_V_5_1_ce1),
    .we1(B_V_5_1_we1),
    .d1(tmp_64_reg_1775)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_2_address0),
    .ce0(B_V_5_2_ce0),
    .q0(B_V_5_2_q0),
    .address1(B_V_5_2_address1),
    .ce1(B_V_5_2_ce1),
    .we1(B_V_5_2_we1),
    .d1(tmp_64_reg_1775)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_3_address0),
    .ce0(B_V_5_3_ce0),
    .q0(B_V_5_3_q0),
    .address1(B_V_5_3_address1),
    .ce1(B_V_5_3_ce1),
    .we1(B_V_5_3_we1),
    .d1(tmp_64_reg_1775)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_4_address0),
    .ce0(B_V_5_4_ce0),
    .q0(B_V_5_4_q0),
    .address1(B_V_5_4_address1),
    .ce1(B_V_5_4_ce1),
    .we1(B_V_5_4_we1),
    .d1(tmp_64_reg_1775)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_5_address0),
    .ce0(B_V_5_5_ce0),
    .q0(B_V_5_5_q0),
    .address1(B_V_5_5_address1),
    .ce1(B_V_5_5_ce1),
    .we1(B_V_5_5_we1),
    .d1(tmp_64_reg_1775)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_6_address0),
    .ce0(B_V_5_6_ce0),
    .q0(B_V_5_6_q0),
    .address1(B_V_5_6_address1),
    .ce1(B_V_5_6_ce1),
    .we1(B_V_5_6_we1),
    .d1(tmp_64_reg_1775)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 8 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_7_address0),
    .ce0(B_V_5_7_ce0),
    .q0(B_V_5_7_q0),
    .address1(B_V_5_7_address1),
    .ce1(B_V_5_7_ce1),
    .we1(B_V_5_7_we1),
    .d1(tmp_64_reg_1775)
);

ultra_mul_32s_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ultra_mul_32s_32sbkb_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp2_reg_1374),
    .din1(tmp1_reg_1369),
    .ce(1'b1),
    .dout(grp_fu_795_p2)
);

ultra_mux_832_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
ultra_mux_832_8_1_1_U98(
    .din0(A_V_5_0_load_reg_1559),
    .din1(A_V_5_1_load_reg_1564),
    .din2(A_V_5_2_load_reg_1569),
    .din3(A_V_5_3_load_reg_1574),
    .din4(A_V_5_4_load_reg_1579),
    .din5(A_V_5_5_load_reg_1584),
    .din6(A_V_5_6_load_reg_1589),
    .din7(A_V_5_7_load_reg_1594),
    .din8(arrayNo4_cast_fu_968_p1),
    .dout(tmp_47_fu_971_p10)
);

ultra_mux_832_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 8 ))
ultra_mux_832_8_1_1_U99(
    .din0(B_V_5_0_load_reg_1599),
    .din1(B_V_5_1_load_reg_1604),
    .din2(B_V_5_2_load_reg_1609),
    .din3(B_V_5_3_load_reg_1614),
    .din4(B_V_5_4_load_reg_1619),
    .din5(B_V_5_5_load_reg_1624),
    .din6(B_V_5_6_load_reg_1629),
    .din7(B_V_5_7_load_reg_1634),
    .din8(arrayNo4_cast_fu_968_p1),
    .dout(tmp_54_fu_989_p10)
);

ultra_mul_24ns_22VhK #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 22 ),
    .dout_WIDTH( 46 ))
ultra_mul_24ns_22VhK_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1107_p0),
    .din1(r_V_5_reg_1700),
    .ce(grp_fu_1107_ce),
    .dout(grp_fu_1107_p2)
);

ultra_mul_mul_16scud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
ultra_mul_mul_16scud_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1291_p0),
    .din1(grp_fu_1291_p1),
    .ce(grp_fu_1291_ce),
    .dout(grp_fu_1291_p2)
);

ultra_mul_mul_16scud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
ultra_mul_mul_16scud_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_V_48_reg_1334),
    .din1(tmp_V_52_reg_1339),
    .ce(grp_fu_1297_ce),
    .dout(grp_fu_1297_p2)
);

ultra_mac_muladd_Shg #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 23 ))
ultra_mac_muladd_Shg_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_47_fu_971_p10),
    .din1(tmp_54_fu_989_p10),
    .din2(grp_fu_1303_p2),
    .ce(grp_fu_1303_ce),
    .dout(grp_fu_1303_p3)
);

ultra_mul_mul_8s_WhU #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 22 ))
ultra_mul_mul_8s_WhU_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(multiple_V_11),
    .din1(tmp_52_reg_1685),
    .ce(grp_fu_1311_ce),
    .dout(grp_fu_1311_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_39_fu_822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state21)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((tmp_39_fu_822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state25) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state25)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state25);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp2_iter18 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state45) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_766_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state45)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state45);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_766_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state49) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state49)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state49);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if ((1'b1 == ap_CS_fsm_state48)) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        i1_reg_754 <= 4'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond2_reg_1787 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i1_reg_754 <= i_8_reg_1791;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond4_fu_833_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i2_reg_665 <= i_1_fu_839_p2;
    end else if (((tmp_39_fu_822_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        i2_reg_665 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i3_reg_687 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1437 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i3_reg_687 <= tmp_47_mid2_v_reg_1451;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_40_fu_807_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i5_reg_643 <= i_9_fu_812_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i5_reg_643 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1188_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_reg_743 <= i_10_fu_1242_p2;
    end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_766_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_reg_743 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        indvar_flatten6_reg_676 <= 11'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_fu_874_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten6_reg_676 <= indvar_flatten_next7_fu_880_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1188_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten_reg_721 <= indvar_flatten_next_fu_1194_p2;
    end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_766_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        indvar_flatten_reg_721 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        j4_reg_710 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1437 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j4_reg_710 <= j_5_reg_1469;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1742 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_reg_732 <= arrayNo3_cast_mid2_v_reg_1756;
    end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_766_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        j_reg_732 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_37_fu_771_p2 == 1'd1) & (tmp_s_fu_766_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        num_img_reg_654 <= 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        num_img_reg_654 <= num_img_3_reg_1402;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        p_3_reg_698 <= 23'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1437_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        p_3_reg_698 <= buf_V_reg_1654;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1437_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_5_0_load_reg_1559 <= A_V_5_0_q0;
        A_V_5_1_load_reg_1564 <= A_V_5_1_q0;
        A_V_5_2_load_reg_1569 <= A_V_5_2_q0;
        A_V_5_3_load_reg_1574 <= A_V_5_3_q0;
        A_V_5_4_load_reg_1579 <= A_V_5_4_q0;
        A_V_5_5_load_reg_1584 <= A_V_5_5_q0;
        A_V_5_6_load_reg_1589 <= A_V_5_6_q0;
        A_V_5_7_load_reg_1594 <= A_V_5_7_q0;
        B_V_5_0_load_reg_1599 <= B_V_5_0_q0;
        B_V_5_1_load_reg_1604 <= B_V_5_1_q0;
        B_V_5_2_load_reg_1609 <= B_V_5_2_q0;
        B_V_5_3_load_reg_1614 <= B_V_5_3_q0;
        B_V_5_4_load_reg_1619 <= B_V_5_4_q0;
        B_V_5_5_load_reg_1624 <= B_V_5_5_q0;
        B_V_5_6_load_reg_1629 <= B_V_5_6_q0;
        B_V_5_7_load_reg_1634 <= B_V_5_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        KER_bound_reg_1384 <= KER_bound_fu_799_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1555_pp2_iter16_reg == 1'd1))) begin
        Outbuf_V_reg_1737 <= Outbuf_V_fu_1181_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        arrayNo3_cast_mid2_reg_1761 <= {{arrayNo3_cast_mid2_v_fu_1220_p3[7:4]}};
        i_mid2_reg_1751 <= i_mid2_fu_1212_p3;
        tmp_63_reg_1765 <= tmp_63_fu_1238_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg <= arrayNo3_cast_mid2_reg_1761;
        exitcond_flatten_reg_1742 <= exitcond_flatten_fu_1188_p2;
        i_mid2_reg_1751_pp3_iter1_reg <= i_mid2_reg_1751;
        tmp_63_reg_1765_pp3_iter1_reg <= tmp_63_reg_1765;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1188_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        arrayNo3_cast_mid2_v_reg_1756 <= arrayNo3_cast_mid2_v_fu_1220_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_fu_874_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        arrayNo4_reg_1458 <= {{j4_mid2_fu_898_p3[7:4]}};
        exitcond5_reg_1446 <= exitcond5_fu_892_p2;
        tmp_69_reg_1463 <= tmp_69_fu_924_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        arrayNo4_reg_1458_pp2_iter1_reg <= arrayNo4_reg_1458;
        exitcond5_reg_1446_pp2_iter1_reg <= exitcond5_reg_1446;
        exitcond_flatten8_reg_1437 <= exitcond_flatten8_fu_874_p2;
        exitcond_flatten8_reg_1437_pp2_iter1_reg <= exitcond_flatten8_reg_1437;
        tmp_47_mid2_v_reg_1451_pp2_iter1_reg <= tmp_47_mid2_v_reg_1451;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        arrayNo4_reg_1458_pp2_iter2_reg <= arrayNo4_reg_1458_pp2_iter1_reg;
        exitcond5_reg_1446_pp2_iter2_reg <= exitcond5_reg_1446_pp2_iter1_reg;
        exitcond5_reg_1446_pp2_iter3_reg <= exitcond5_reg_1446_pp2_iter2_reg;
        exitcond5_reg_1446_pp2_iter4_reg <= exitcond5_reg_1446_pp2_iter3_reg;
        exitcond_flatten8_reg_1437_pp2_iter2_reg <= exitcond_flatten8_reg_1437_pp2_iter1_reg;
        exitcond_flatten8_reg_1437_pp2_iter3_reg <= exitcond_flatten8_reg_1437_pp2_iter2_reg;
        exitcond_flatten8_reg_1437_pp2_iter4_reg <= exitcond_flatten8_reg_1437_pp2_iter3_reg;
        exitcond_flatten8_reg_1437_pp2_iter5_reg <= exitcond_flatten8_reg_1437_pp2_iter4_reg;
        ifzero_reg_1555_pp2_iter10_reg <= ifzero_reg_1555_pp2_iter9_reg;
        ifzero_reg_1555_pp2_iter11_reg <= ifzero_reg_1555_pp2_iter10_reg;
        ifzero_reg_1555_pp2_iter12_reg <= ifzero_reg_1555_pp2_iter11_reg;
        ifzero_reg_1555_pp2_iter13_reg <= ifzero_reg_1555_pp2_iter12_reg;
        ifzero_reg_1555_pp2_iter14_reg <= ifzero_reg_1555_pp2_iter13_reg;
        ifzero_reg_1555_pp2_iter15_reg <= ifzero_reg_1555_pp2_iter14_reg;
        ifzero_reg_1555_pp2_iter16_reg <= ifzero_reg_1555_pp2_iter15_reg;
        ifzero_reg_1555_pp2_iter17_reg <= ifzero_reg_1555_pp2_iter16_reg;
        ifzero_reg_1555_pp2_iter2_reg <= ifzero_reg_1555;
        ifzero_reg_1555_pp2_iter3_reg <= ifzero_reg_1555_pp2_iter2_reg;
        ifzero_reg_1555_pp2_iter4_reg <= ifzero_reg_1555_pp2_iter3_reg;
        ifzero_reg_1555_pp2_iter5_reg <= ifzero_reg_1555_pp2_iter4_reg;
        ifzero_reg_1555_pp2_iter6_reg <= ifzero_reg_1555_pp2_iter5_reg;
        ifzero_reg_1555_pp2_iter7_reg <= ifzero_reg_1555_pp2_iter6_reg;
        ifzero_reg_1555_pp2_iter8_reg <= ifzero_reg_1555_pp2_iter7_reg;
        ifzero_reg_1555_pp2_iter9_reg <= ifzero_reg_1555_pp2_iter8_reg;
        tmp_47_mid2_v_reg_1451_pp2_iter2_reg <= tmp_47_mid2_v_reg_1451_pp2_iter1_reg;
        tmp_47_mid2_v_reg_1451_pp2_iter3_reg <= tmp_47_mid2_v_reg_1451_pp2_iter2_reg;
        tmp_57_reg_1675_pp2_iter7_reg <= tmp_57_reg_1675;
        tmp_70_reg_1670_pp2_iter7_reg <= tmp_70_reg_1670;
        tmp_72_reg_1706_pp2_iter12_reg <= tmp_72_reg_1706;
        tmp_72_reg_1706_pp2_iter13_reg <= tmp_72_reg_1706_pp2_iter12_reg;
        tmp_72_reg_1706_pp2_iter14_reg <= tmp_72_reg_1706_pp2_iter13_reg;
        tmp_72_reg_1706_pp2_iter15_reg <= tmp_72_reg_1706_pp2_iter14_reg;
        tmp_72_reg_1706_pp2_iter16_reg <= tmp_72_reg_1706_pp2_iter15_reg;
        tmp_74_reg_1727_pp2_iter16_reg <= tmp_74_reg_1727;
        tmp_i_reg_1717_pp2_iter13_reg <= tmp_i_reg_1717;
        tmp_i_reg_1717_pp2_iter14_reg <= tmp_i_reg_1717_pp2_iter13_reg;
        tmp_i_reg_1717_pp2_iter15_reg <= tmp_i_reg_1717_pp2_iter14_reg;
        tmp_i_reg_1717_pp2_iter16_reg <= tmp_i_reg_1717_pp2_iter15_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond4_fu_833_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        arrayNo_cast_reg_1416 <= {{i2_reg_665[7:4]}};
        tmp_68_reg_1420 <= tmp_68_fu_855_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        arrayNo_cast_reg_1416_pp1_iter1_reg <= arrayNo_cast_reg_1416;
        tmp_67_reg_1425 <= tmp_67_fu_859_p1;
        tmp_68_reg_1420_pp1_iter1_reg <= tmp_68_reg_1420;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1555_pp2_iter4_reg == 1'd1) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        bias_V_11_load_reg_1660 <= bias_V_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1437_pp2_iter4_reg == 1'd0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        buf_V_reg_1654 <= grp_fu_1303_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond2_reg_1787 <= exitcond2_fu_1270_p2;
        exitcond2_reg_1787_pp4_iter1_reg <= exitcond2_reg_1787;
        i1_reg_754_pp4_iter1_reg <= i1_reg_754;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_8_reg_1791 <= i_8_fu_1276_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1437 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ifzero_reg_1555 <= ifzero_fu_963_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_fu_874_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_5_reg_1469 <= j_5_fu_928_p2;
        tmp_47_mid2_v_reg_1451 <= tmp_47_mid2_v_fu_906_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_37_fu_771_p2 == 1'd0) & (tmp_s_fu_766_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        lhs_V_reg_1352 <= lhs_V_fu_776_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_766_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        multiple_V_11 <= tmp_62_fu_785_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        num_img_3_reg_1402 <= num_img_3_fu_827_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p_8_reg_1379 <= grp_fu_795_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1555_pp2_iter5_reg == 1'd1))) begin
        r_V_4_tr_reg_1665 <= r_V_4_tr_fu_1021_p2;
        tmp_57_reg_1675 <= {{r_V_4_tr_fu_1021_p2[22:8]}};
        tmp_70_reg_1670 <= r_V_4_tr_fu_1021_p2[32'd22];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1555_pp2_iter10_reg == 1'd1))) begin
        r_V_5_reg_1700 <= grp_fu_1311_p2;
        tmp_72_reg_1706 <= grp_fu_1311_p2[32'd21];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp1_reg_1369 <= grp_fu_1291_p2;
        tmp2_reg_1374 <= grp_fu_1297_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_40_reg_1389 <= tmp_40_fu_807_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1555_pp2_iter7_reg == 1'd1))) begin
        tmp_52_reg_1685 <= tmp_52_fu_1079_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_70_reg_1670 == 1'd1) & (ifzero_reg_1555_pp2_iter6_reg == 1'd1))) begin
        tmp_55_reg_1680 <= {{p_neg_fu_1044_p2[22:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1742 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_64_reg_1775 <= tmp_64_fu_1248_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond2_reg_1787 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_66_reg_1796 <= tmp_66_fu_1282_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_72_reg_1706_pp2_iter14_reg == 1'd1) & (ifzero_reg_1555_pp2_iter14_reg == 1'd1) & (tmp_i_reg_1717_pp2_iter14_reg == 1'd0))) begin
        tmp_71_reg_1722 <= tmp_71_fu_1118_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_72_reg_1706_pp2_iter15_reg == 1'd1) & (ifzero_reg_1555_pp2_iter15_reg == 1'd1) & (tmp_i_reg_1717_pp2_iter15_reg == 1'd0))) begin
        tmp_73_reg_1732 <= {{neg_mul_fu_1132_p2[44:27]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1555_pp2_iter14_reg == 1'd1) & (tmp_i_reg_1717_pp2_iter14_reg == 1'd0) & (tmp_72_reg_1706_pp2_iter14_reg == 1'd0))) begin
        tmp_74_reg_1727 <= {{grp_fu_1107_p2[45:27]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_44_reg_1324 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_46_reg_1329 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_48_reg_1334 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_52_reg_1339 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_V_reg_1318 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1555_pp2_iter11_reg == 1'd1))) begin
        tmp_i_reg_1717 <= tmp_i_fu_1113_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_0_ce0 = 1'b1;
    end else begin
        A_V_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_0_ce1 = 1'b1;
    end else begin
        A_V_5_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_0_we1 = 1'b1;
    end else begin
        A_V_5_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_1_ce0 = 1'b1;
    end else begin
        A_V_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_1_ce1 = 1'b1;
    end else begin
        A_V_5_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_1_we1 = 1'b1;
    end else begin
        A_V_5_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_2_ce0 = 1'b1;
    end else begin
        A_V_5_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_2_ce1 = 1'b1;
    end else begin
        A_V_5_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_2_we1 = 1'b1;
    end else begin
        A_V_5_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_3_ce0 = 1'b1;
    end else begin
        A_V_5_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_3_ce1 = 1'b1;
    end else begin
        A_V_5_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_3_we1 = 1'b1;
    end else begin
        A_V_5_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_4_ce0 = 1'b1;
    end else begin
        A_V_5_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_4_ce1 = 1'b1;
    end else begin
        A_V_5_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd4) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_4_we1 = 1'b1;
    end else begin
        A_V_5_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_5_ce0 = 1'b1;
    end else begin
        A_V_5_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_5_ce1 = 1'b1;
    end else begin
        A_V_5_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd5) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_5_we1 = 1'b1;
    end else begin
        A_V_5_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_6_ce0 = 1'b1;
    end else begin
        A_V_5_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_6_ce1 = 1'b1;
    end else begin
        A_V_5_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd6) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_6_we1 = 1'b1;
    end else begin
        A_V_5_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_7_ce0 = 1'b1;
    end else begin
        A_V_5_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_7_ce1 = 1'b1;
    end else begin
        A_V_5_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd0) & ~(arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd1) & ~(arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd2) & ~(arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd3) & ~(arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd4) & ~(arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd5) & ~(arrayNo_cast_reg_1416_pp1_iter1_reg == 4'd6) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_7_we1 = 1'b1;
    end else begin
        A_V_5_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_0_ce0 = 1'b1;
    end else begin
        B_V_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_0_ce1 = 1'b1;
    end else begin
        B_V_5_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_0_we1 = 1'b1;
    end else begin
        B_V_5_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_1_ce0 = 1'b1;
    end else begin
        B_V_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_1_ce1 = 1'b1;
    end else begin
        B_V_5_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_1_we1 = 1'b1;
    end else begin
        B_V_5_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_2_ce0 = 1'b1;
    end else begin
        B_V_5_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_2_ce1 = 1'b1;
    end else begin
        B_V_5_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd2) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_2_we1 = 1'b1;
    end else begin
        B_V_5_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_3_ce0 = 1'b1;
    end else begin
        B_V_5_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_3_ce1 = 1'b1;
    end else begin
        B_V_5_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd3) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_3_we1 = 1'b1;
    end else begin
        B_V_5_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_4_ce0 = 1'b1;
    end else begin
        B_V_5_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_4_ce1 = 1'b1;
    end else begin
        B_V_5_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd4) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_4_we1 = 1'b1;
    end else begin
        B_V_5_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_5_ce0 = 1'b1;
    end else begin
        B_V_5_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_5_ce1 = 1'b1;
    end else begin
        B_V_5_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd5) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_5_we1 = 1'b1;
    end else begin
        B_V_5_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_6_ce0 = 1'b1;
    end else begin
        B_V_5_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_6_ce1 = 1'b1;
    end else begin
        B_V_5_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd6) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_6_we1 = 1'b1;
    end else begin
        B_V_5_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_7_ce0 = 1'b1;
    end else begin
        B_V_5_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_7_ce1 = 1'b1;
    end else begin
        B_V_5_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd6) & ~(arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd5) & ~(arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd4) & ~(arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd3) & ~(arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd2) & ~(arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd1) & ~(arrayNo3_cast_mid2_reg_1761_pp3_iter1_reg == 4'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_7_we1 = 1'b1;
    end else begin
        B_V_5_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_40_fu_807_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_833_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten8_fu_874_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1188_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state45 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state45 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_1270_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state49 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state49 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (exitcond2_reg_1787 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_i1_phi_fu_758_p4 = i_8_reg_1791;
    end else begin
        ap_phi_mux_i1_phi_fu_758_p4 = i1_reg_754;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond_flatten8_reg_1437 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i3_phi_fu_691_p4 = tmp_47_mid2_v_reg_1451;
    end else begin
        ap_phi_mux_i3_phi_fu_691_p4 = i3_reg_687;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond_flatten8_reg_1437 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_j4_phi_fu_714_p4 = j_5_reg_1469;
    end else begin
        ap_phi_mux_j4_phi_fu_714_p4 = j4_reg_710;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1742 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_j_phi_fu_736_p4 = arrayNo3_cast_mid2_v_reg_1756;
    end else begin
        ap_phi_mux_j_phi_fu_736_p4 = j_reg_732;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond_flatten8_reg_1437_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        ap_phi_mux_p_3_phi_fu_702_p4 = buf_V_reg_1654;
    end else begin
        ap_phi_mux_p_3_phi_fu_702_p4 = p_3_reg_698;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        bias_V_11_address0 = tmp_43_fu_1286_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        bias_V_11_address0 = tmp_47_mid2_fu_1007_p1;
    end else begin
        bias_V_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
        bias_V_11_ce0 = 1'b1;
    end else begin
        bias_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond2_reg_1787_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        bias_V_11_we0 = 1'b1;
    end else begin
        bias_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1107_ce = 1'b1;
    end else begin
        grp_fu_1107_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_fu_1291_ce = 1'b1;
    end else begin
        grp_fu_1291_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_fu_1297_ce = 1'b1;
    end else begin
        grp_fu_1297_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1303_ce = 1'b1;
    end else begin
        grp_fu_1303_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1311_ce = 1'b1;
    end else begin
        grp_fu_1311_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_40_reg_1389 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp4_stage0) & (exitcond2_reg_1787 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((exitcond_flatten_reg_1742 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        stream_in_V_V_blk_n = stream_in_V_V_empty_n;
    end else begin
        stream_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_40_reg_1389 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (exitcond2_reg_1787 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1742 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_in_V_V_read = 1'b1;
    end else begin
        stream_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp2_stage0) & (ifzero_reg_1555_pp2_iter17_reg == 1'd1) & (ap_enable_reg_pp2_iter18 == 1'b1)) | ((tmp_40_reg_1389 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp4_stage0) & (exitcond2_reg_1787 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((exitcond_flatten_reg_1742 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        stream_out_V_V_blk_n = stream_out_V_V_full_n;
    end else begin
        stream_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ifzero_reg_1555_pp2_iter17_reg == 1'd1) & (ap_enable_reg_pp2_iter18 == 1'b1) & (1'b0 == ap_block_pp2_stage0_01001))) begin
        stream_out_V_V_din = Outbuf_V_reg_1737;
    end else if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_40_reg_1389 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((exitcond2_reg_1787 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_01001)) | ((exitcond_flatten_reg_1742 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_din = stream_in_V_V_dout;
    end else begin
        stream_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1555_pp2_iter17_reg == 1'd1) & (ap_enable_reg_pp2_iter18 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_40_reg_1389 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (exitcond2_reg_1787 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1742 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_write = 1'b1;
    end else begin
        stream_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_766_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_37_fu_771_p2 == 1'd1) & (tmp_s_fu_766_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_37_fu_771_p2 == 1'd0) & (tmp_s_fu_766_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_40_fu_807_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_40_fu_807_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state20 : begin
            if (((tmp_39_fu_822_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond4_fu_833_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond4_fu_833_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten8_fu_874_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter17 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter18 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten8_fu_874_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter17 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter18 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond_flatten_fu_1188_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond_flatten_fu_1188_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (exitcond2_fu_1270_p2 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (exitcond2_fu_1270_p2 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_V_5_0_address0 = newIndex3_fu_934_p1;

assign A_V_5_0_address1 = newIndex9_fu_863_p1;

assign A_V_5_1_address0 = newIndex3_fu_934_p1;

assign A_V_5_1_address1 = newIndex9_fu_863_p1;

assign A_V_5_2_address0 = newIndex3_fu_934_p1;

assign A_V_5_2_address1 = newIndex9_fu_863_p1;

assign A_V_5_3_address0 = newIndex3_fu_934_p1;

assign A_V_5_3_address1 = newIndex9_fu_863_p1;

assign A_V_5_4_address0 = newIndex3_fu_934_p1;

assign A_V_5_4_address1 = newIndex9_fu_863_p1;

assign A_V_5_5_address0 = newIndex3_fu_934_p1;

assign A_V_5_5_address1 = newIndex9_fu_863_p1;

assign A_V_5_6_address0 = newIndex3_fu_934_p1;

assign A_V_5_6_address1 = newIndex9_fu_863_p1;

assign A_V_5_7_address0 = newIndex3_fu_934_p1;

assign A_V_5_7_address1 = newIndex9_fu_863_p1;

assign B_V_5_0_address0 = tmp_53_fu_951_p1;

assign B_V_5_0_address1 = tmp_49_fu_1258_p1;

assign B_V_5_1_address0 = tmp_53_fu_951_p1;

assign B_V_5_1_address1 = tmp_49_fu_1258_p1;

assign B_V_5_2_address0 = tmp_53_fu_951_p1;

assign B_V_5_2_address1 = tmp_49_fu_1258_p1;

assign B_V_5_3_address0 = tmp_53_fu_951_p1;

assign B_V_5_3_address1 = tmp_49_fu_1258_p1;

assign B_V_5_4_address0 = tmp_53_fu_951_p1;

assign B_V_5_4_address1 = tmp_49_fu_1258_p1;

assign B_V_5_5_address0 = tmp_53_fu_951_p1;

assign B_V_5_5_address1 = tmp_49_fu_1258_p1;

assign B_V_5_6_address0 = tmp_53_fu_951_p1;

assign B_V_5_6_address1 = tmp_49_fu_1258_p1;

assign B_V_5_7_address0 = tmp_53_fu_951_p1;

assign B_V_5_7_address1 = tmp_49_fu_1258_p1;

assign KER_bound_fu_799_p2 = ($signed(p_8_reg_1379) + $signed(lhs_V_reg_1352));

assign Outbuf_V_fu_1181_p3 = ((tmp_i_reg_1717_pp2_iter16_reg[0:0] === 1'b1) ? 16'd0 : tmp_61_fu_1174_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_40_reg_1389 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_40_reg_1389 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_40_reg_1389 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_40_reg_1389 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_40_reg_1389 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_40_reg_1389 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((stream_in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((stream_in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((ifzero_reg_1555_pp2_iter17_reg == 1'd1) & (stream_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((ifzero_reg_1555_pp2_iter17_reg == 1'd1) & (stream_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((ifzero_reg_1555_pp2_iter17_reg == 1'd1) & (stream_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((exitcond_flatten_reg_1742 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1742 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((exitcond_flatten_reg_1742 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1742 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((exitcond_flatten_reg_1742 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1742 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_01001 = ((ap_enable_reg_pp4_iter1 == 1'b1) & (((exitcond2_reg_1787 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond2_reg_1787 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((ap_enable_reg_pp4_iter1 == 1'b1) & (((exitcond2_reg_1787 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond2_reg_1787 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((ap_enable_reg_pp4_iter1 == 1'b1) & (((exitcond2_reg_1787 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond2_reg_1787 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0));
end

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp0_stage0_iter1 = (((tmp_40_reg_1389 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_40_reg_1389 == 1'd1) & (stream_in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state21_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp1_stage0_iter1 = (stream_in_V_V_empty_n == 1'b0);
end

assign ap_block_state23_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state30_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state40_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state43_pp2_stage0_iter18 = ((ifzero_reg_1555_pp2_iter17_reg == 1'd1) & (stream_out_V_V_full_n == 1'b0));
end

assign ap_block_state45_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state46_pp3_stage0_iter1 = (((exitcond_flatten_reg_1742 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1742 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)));
end

assign ap_block_state47_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state50_pp4_stage0_iter1 = (((exitcond2_reg_1787 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond2_reg_1787 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)));
end

assign ap_block_state51_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign arrayNo3_cast_mid2_v_fu_1220_p3 = ((exitcond_fu_1206_p2[0:0] === 1'b1) ? j_4_fu_1200_p2 : ap_phi_mux_j_phi_fu_736_p4);

assign arrayNo4_cast_fu_968_p1 = arrayNo4_reg_1458_pp2_iter2_reg;

assign exitcond2_fu_1270_p2 = ((ap_phi_mux_i1_phi_fu_758_p4 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond4_fu_833_p2 = ((i2_reg_665 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond5_fu_892_p2 = ((ap_phi_mux_j4_phi_fu_714_p4 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_874_p2 = ((indvar_flatten6_reg_676 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1188_p2 = ((indvar_flatten_reg_721 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond_fu_1206_p2 = ((i_reg_743 == 4'd8) ? 1'b1 : 1'b0);

assign grp_fu_1107_p0 = 46'd6710887;

assign grp_fu_1291_p0 = tmp_38_fu_782_p1;

assign grp_fu_1291_p1 = tmp_38_fu_782_p1;

assign grp_fu_1303_p2 = ((exitcond5_reg_1446_pp2_iter4_reg[0:0] === 1'b1) ? 23'd0 : ap_phi_mux_p_3_phi_fu_702_p4);

assign i5_cast_fu_803_p1 = i5_reg_643;

assign i_10_fu_1242_p2 = (i_mid2_fu_1212_p3 + 4'd1);

assign i_11_fu_886_p2 = (4'd1 + ap_phi_mux_i3_phi_fu_691_p4);

assign i_1_fu_839_p2 = (i2_reg_665 + 8'd1);

assign i_8_fu_1276_p2 = (ap_phi_mux_i1_phi_fu_758_p4 + 4'd1);

assign i_9_fu_812_p2 = (i5_reg_643 + 31'd1);

assign i_mid2_fu_1212_p3 = ((exitcond_fu_1206_p2[0:0] === 1'b1) ? 4'd0 : i_reg_743);

assign ifzero_fu_963_p2 = ((j_5_reg_1469 == 8'd128) ? 1'b1 : 1'b0);

assign indvar_flatten_next7_fu_880_p2 = (indvar_flatten6_reg_676 + 11'd1);

assign indvar_flatten_next_fu_1194_p2 = (indvar_flatten_reg_721 + 11'd1);

assign j4_mid2_fu_898_p3 = ((exitcond5_fu_892_p2[0:0] === 1'b1) ? 8'd0 : ap_phi_mux_j4_phi_fu_714_p4);

assign j_4_fu_1200_p2 = (8'd1 + ap_phi_mux_j_phi_fu_736_p4);

assign j_5_fu_928_p2 = (8'd1 + j4_mid2_fu_898_p3);

assign lhs_V_fu_776_p1 = tmp_V_52_reg_1339;

assign neg_mul_fu_1132_p2 = (45'd0 - tmp_71_reg_1722);

assign neg_ti_fu_1164_p2 = (16'd0 - tmp_75_fu_1160_p1);

assign newIndex3_fu_934_p1 = tmp_69_reg_1463;

assign newIndex9_fu_863_p1 = tmp_68_reg_1420_pp1_iter1_reg;

assign num_img_3_fu_827_p2 = (num_img_reg_654 + 15'd1);

assign num_img_cast_fu_818_p1 = num_img_reg_654;

assign p_neg_fu_1044_p2 = (23'd0 - r_V_4_tr_reg_1665);

assign p_v_fu_1153_p3 = ((tmp_72_reg_1706_pp2_iter16_reg[0:0] === 1'b1) ? tmp_59_fu_1147_p1 : tmp_60_fu_1150_p1);

assign r_V_4_tr_fu_1021_p2 = ($signed(tmp_58_cast_fu_1018_p1) + $signed(buf_V_reg_1654));

assign start_out = real_start;

assign tmp_37_fu_771_p2 = ((tmp_V_reg_1318 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_38_fu_782_p1 = tmp_V_46_reg_1329;

assign tmp_39_fu_822_p2 = (($signed(num_img_cast_fu_818_p1) < $signed(tmp_V_44_reg_1324)) ? 1'b1 : 1'b0);

assign tmp_40_fu_807_p2 = (($signed(i5_cast_fu_803_p1) < $signed(KER_bound_reg_1384)) ? 1'b1 : 1'b0);

assign tmp_43_fu_1286_p1 = i1_reg_754_pp4_iter1_reg;

assign tmp_47_mid2_fu_1007_p1 = tmp_47_mid2_v_reg_1451_pp2_iter3_reg;

assign tmp_47_mid2_v_fu_906_p3 = ((exitcond5_fu_892_p2[0:0] === 1'b1) ? i_11_fu_886_p2 : ap_phi_mux_i3_phi_fu_691_p4);

assign tmp_48_fu_1252_p3 = {{i_mid2_reg_1751_pp3_iter1_reg}, {tmp_63_reg_1765_pp3_iter1_reg}};

assign tmp_49_fu_1258_p1 = tmp_48_fu_1252_p3;

assign tmp_50_fu_945_p3 = {{tmp_47_mid2_v_reg_1451}, {tmp_69_reg_1463}};

assign tmp_51_fu_1069_p2 = (17'd0 - tmp_60_cast_fu_1062_p1);

assign tmp_52_fu_1079_p3 = ((tmp_70_reg_1670_pp2_iter7_reg[0:0] === 1'b1) ? tmp_51_fu_1069_p2 : tmp_62_cast_fu_1075_p1);

assign tmp_53_fu_951_p1 = tmp_50_fu_945_p3;

assign tmp_56_fu_1059_p1 = $signed(tmp_55_reg_1680);

assign tmp_58_cast_fu_1018_p1 = $signed(bias_V_11_load_reg_1660);

assign tmp_58_fu_1066_p1 = $signed(tmp_57_reg_1675_pp2_iter7_reg);

assign tmp_59_fu_1147_p1 = $signed(tmp_73_reg_1732);

assign tmp_60_cast_fu_1062_p1 = $unsigned(tmp_56_fu_1059_p1);

assign tmp_60_fu_1150_p1 = $signed(tmp_74_reg_1727_pp2_iter16_reg);

assign tmp_61_fu_1174_p3 = ((tmp_72_reg_1706_pp2_iter16_reg[0:0] === 1'b1) ? neg_ti_fu_1164_p2 : tmp_76_fu_1170_p1);

assign tmp_62_cast_fu_1075_p1 = $unsigned(tmp_58_fu_1066_p1);

assign tmp_62_fu_785_p1 = stream_in_V_V_dout[7:0];

assign tmp_63_fu_1238_p1 = arrayNo3_cast_mid2_v_fu_1220_p3[3:0];

assign tmp_64_fu_1248_p1 = stream_in_V_V_dout[7:0];

assign tmp_66_fu_1282_p1 = stream_in_V_V_dout[7:0];

assign tmp_67_fu_859_p1 = stream_in_V_V_dout[7:0];

assign tmp_68_fu_855_p1 = i2_reg_665[3:0];

assign tmp_69_fu_924_p1 = j4_mid2_fu_898_p3[3:0];

assign tmp_71_fu_1118_p1 = grp_fu_1107_p2[44:0];

assign tmp_75_fu_1160_p1 = p_v_fu_1153_p3[15:0];

assign tmp_76_fu_1170_p1 = p_v_fu_1153_p3[15:0];

assign tmp_i_fu_1113_p2 = (($signed(r_V_5_reg_1700) < $signed(22'd4194285)) ? 1'b1 : 1'b0);

assign tmp_s_fu_766_p2 = ((tmp_V_reg_1318 == 16'd7) ? 1'b1 : 1'b0);

endmodule //FC_128_8_s
