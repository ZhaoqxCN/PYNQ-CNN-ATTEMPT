// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Pool_16_63_3_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        stream_in_V_V_dout,
        stream_in_V_V_empty_n,
        stream_in_V_V_read,
        stream_out_V_V_din,
        stream_out_V_V_full_n,
        stream_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 29'd65536;
parameter    ap_ST_fsm_state19 = 29'd131072;
parameter    ap_ST_fsm_state20 = 29'd262144;
parameter    ap_ST_fsm_pp1_stage0 = 29'd524288;
parameter    ap_ST_fsm_state25 = 29'd1048576;
parameter    ap_ST_fsm_state26 = 29'd2097152;
parameter    ap_ST_fsm_state27 = 29'd4194304;
parameter    ap_ST_fsm_state28 = 29'd8388608;
parameter    ap_ST_fsm_state29 = 29'd16777216;
parameter    ap_ST_fsm_state30 = 29'd33554432;
parameter    ap_ST_fsm_state31 = 29'd67108864;
parameter    ap_ST_fsm_pp2_stage0 = 29'd134217728;
parameter    ap_ST_fsm_state45 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] stream_in_V_V_dout;
input   stream_in_V_V_empty_n;
output   stream_in_V_V_read;
output  [15:0] stream_out_V_V_din;
input   stream_out_V_V_full_n;
output   stream_out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg stream_in_V_V_read;
reg[15:0] stream_out_V_V_din;
reg stream_out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [11:0] A_V_7_0_address0;
reg    A_V_7_0_ce0;
wire   [11:0] A_V_7_0_q0;
wire   [11:0] A_V_7_0_address1;
reg    A_V_7_0_ce1;
reg    A_V_7_0_we1;
reg   [11:0] A_V_7_1_address0;
reg    A_V_7_1_ce0;
wire   [11:0] A_V_7_1_q0;
wire   [11:0] A_V_7_1_address1;
reg    A_V_7_1_ce1;
reg    A_V_7_1_we1;
reg   [11:0] A_V_7_2_address0;
reg    A_V_7_2_ce0;
wire   [11:0] A_V_7_2_q0;
wire   [11:0] A_V_7_2_address1;
reg    A_V_7_2_ce1;
reg    A_V_7_2_we1;
reg   [11:0] A_V_7_3_address0;
reg    A_V_7_3_ce0;
wire   [11:0] A_V_7_3_q0;
wire   [11:0] A_V_7_3_address1;
reg    A_V_7_3_ce1;
reg    A_V_7_3_we1;
reg   [11:0] A_V_7_4_address0;
reg    A_V_7_4_ce0;
wire   [11:0] A_V_7_4_q0;
wire   [11:0] A_V_7_4_address1;
reg    A_V_7_4_ce1;
reg    A_V_7_4_we1;
reg   [11:0] A_V_7_5_address0;
reg    A_V_7_5_ce0;
wire   [11:0] A_V_7_5_q0;
wire   [11:0] A_V_7_5_address1;
reg    A_V_7_5_ce1;
reg    A_V_7_5_we1;
reg   [11:0] A_V_7_6_address0;
reg    A_V_7_6_ce0;
wire   [11:0] A_V_7_6_q0;
wire   [11:0] A_V_7_6_address1;
reg    A_V_7_6_ce1;
reg    A_V_7_6_we1;
reg   [11:0] A_V_7_7_address0;
reg    A_V_7_7_ce0;
wire   [11:0] A_V_7_7_q0;
wire   [11:0] A_V_7_7_address1;
reg    A_V_7_7_ce1;
reg    A_V_7_7_we1;
reg   [11:0] A_V_7_8_address0;
reg    A_V_7_8_ce0;
wire   [11:0] A_V_7_8_q0;
wire   [11:0] A_V_7_8_address1;
reg    A_V_7_8_ce1;
reg    A_V_7_8_we1;
reg   [11:0] A_V_7_9_address0;
reg    A_V_7_9_ce0;
wire   [11:0] A_V_7_9_q0;
wire   [11:0] A_V_7_9_address1;
reg    A_V_7_9_ce1;
reg    A_V_7_9_we1;
reg   [11:0] A_V_7_10_address0;
reg    A_V_7_10_ce0;
wire   [11:0] A_V_7_10_q0;
wire   [11:0] A_V_7_10_address1;
reg    A_V_7_10_ce1;
reg    A_V_7_10_we1;
reg   [11:0] A_V_7_11_address0;
reg    A_V_7_11_ce0;
wire   [11:0] A_V_7_11_q0;
wire   [11:0] A_V_7_11_address1;
reg    A_V_7_11_ce1;
reg    A_V_7_11_we1;
reg   [11:0] A_V_7_12_address0;
reg    A_V_7_12_ce0;
wire   [11:0] A_V_7_12_q0;
wire   [11:0] A_V_7_12_address1;
reg    A_V_7_12_ce1;
reg    A_V_7_12_we1;
reg   [11:0] A_V_7_13_address0;
reg    A_V_7_13_ce0;
wire   [11:0] A_V_7_13_q0;
wire   [11:0] A_V_7_13_address1;
reg    A_V_7_13_ce1;
reg    A_V_7_13_we1;
reg   [11:0] A_V_7_14_address0;
reg    A_V_7_14_ce0;
wire   [11:0] A_V_7_14_q0;
wire   [11:0] A_V_7_14_address1;
reg    A_V_7_14_ce1;
reg    A_V_7_14_we1;
reg   [11:0] A_V_7_15_address0;
reg    A_V_7_15_ce0;
wire   [11:0] A_V_7_15_q0;
wire   [11:0] A_V_7_15_address1;
reg    A_V_7_15_ce1;
reg    A_V_7_15_we1;
reg    stream_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    ap_enable_reg_pp1_iter2;
wire    ap_block_pp1_stage0;
reg   [0:0] exitcond_flatten1_reg_1581;
reg   [0:0] exitcond_flatten1_reg_1581_pp1_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_7_reg_1563;
reg    stream_out_V_V_blk_n;
wire    ap_CS_fsm_state45;
reg   [30:0] i3_reg_744;
reg   [15:0] indvar_flatten1_reg_766;
reg   [5:0] j_reg_777;
reg   [10:0] indvar_flatten_reg_789;
reg   [5:0] k_reg_800;
reg   [4:0] i1_reg_812;
reg  signed [11:0] p_1_reg_883;
reg   [3:0] k2_reg_893;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state32_pp2_stage0_iter0;
wire    ap_block_state33_pp2_stage0_iter1;
wire    ap_block_state34_pp2_stage0_iter2;
wire    ap_block_state35_pp2_stage0_iter3;
wire    ap_block_state36_pp2_stage0_iter4;
wire    ap_block_state37_pp2_stage0_iter5;
wire    ap_block_state38_pp2_stage0_iter6;
wire    ap_block_state39_pp2_stage0_iter7;
wire    ap_block_state40_pp2_stage0_iter8;
wire    ap_block_state41_pp2_stage0_iter9;
wire    ap_block_state42_pp2_stage0_iter10;
wire    ap_block_state43_pp2_stage0_iter11;
wire    ap_block_state44_pp2_stage0_iter12;
wire    ap_block_pp2_stage0_11001;
reg   [15:0] reg_905;
reg    ap_block_state1;
reg    ap_block_state2;
reg   [11:0] reg_909;
wire    ap_CS_fsm_state30;
reg    ap_enable_reg_pp2_iter10;
reg   [0:0] exitcond_reg_1797;
reg   [0:0] exitcond_reg_1797_pp2_iter9_reg;
reg   [11:0] reg_913;
reg   [11:0] reg_917;
reg   [11:0] reg_921;
reg   [11:0] reg_925;
reg   [11:0] reg_929;
reg   [11:0] reg_933;
reg   [11:0] reg_937;
reg   [11:0] reg_941;
reg   [11:0] reg_945;
reg   [11:0] reg_949;
reg   [11:0] reg_953;
reg   [11:0] reg_957;
reg   [11:0] reg_961;
reg   [11:0] reg_965;
reg   [11:0] reg_969;
wire   [0:0] tmp_s_fu_1010_p2;
reg   [0:0] tmp_s_reg_1507;
reg  signed [15:0] tmp_V_4_reg_1511;
reg    ap_block_state3;
reg  signed [15:0] tmp_V_6_reg_1516;
reg    ap_block_state4;
reg  signed [15:0] tmp_V_10_reg_1521;
reg    ap_block_state6;
wire  signed [31:0] lhs_V_fu_1016_p1;
reg  signed [31:0] lhs_V_reg_1526;
reg    ap_block_state8;
wire  signed [31:0] tmp_4_fu_1022_p1;
wire  signed [31:0] grp_fu_1495_p2;
reg  signed [31:0] tmp1_reg_1543;
wire    ap_CS_fsm_state10;
wire  signed [31:0] grp_fu_1501_p2;
reg  signed [31:0] tmp2_reg_1548;
wire   [31:0] grp_fu_1025_p2;
reg   [31:0] p_s_reg_1553;
wire    ap_CS_fsm_state15;
wire   [31:0] KER_bound_fu_1029_p2;
reg   [31:0] KER_bound_reg_1558;
wire    ap_CS_fsm_state16;
wire   [0:0] tmp_7_fu_1037_p2;
wire    ap_block_state17_pp0_stage0_iter0;
reg    ap_block_state18_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [30:0] i_fu_1042_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_6_fu_1052_p2;
wire    ap_CS_fsm_state20;
wire   [14:0] num_img_1_fu_1058_p2;
reg   [14:0] num_img_1_reg_1576;
wire   [0:0] exitcond_flatten1_fu_1064_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state21_pp1_stage0_iter0;
wire    ap_block_state22_pp1_stage0_iter1;
reg    ap_block_state23_pp1_stage0_iter2;
wire    ap_block_state24_pp1_stage0_iter3;
reg    ap_block_pp1_stage0_11001;
wire   [15:0] indvar_flatten_next1_fu_1070_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] exitcond_flatten_fu_1076_p2;
reg   [0:0] exitcond_flatten_reg_1590;
wire   [10:0] indvar_flatten_next_fu_1088_p3;
wire   [5:0] tmp_8_mid2_v_fu_1109_p3;
reg   [5:0] tmp_8_mid2_v_reg_1603;
reg    ap_enable_reg_pp1_iter1;
wire   [5:0] tmp_3_mid2_fu_1152_p3;
reg   [5:0] tmp_3_mid2_reg_1610;
wire   [3:0] tmp_11_fu_1160_p1;
reg   [3:0] tmp_11_reg_1616;
reg   [3:0] tmp_11_reg_1616_pp1_iter2_reg;
wire   [4:0] i_1_fu_1164_p2;
reg   [4:0] i_1_reg_1620;
wire   [12:0] tmp_9_fu_1193_p2;
reg   [12:0] tmp_9_reg_1625;
wire   [11:0] tmp_10_fu_1199_p1;
reg   [11:0] tmp_10_reg_1630;
wire   [12:0] indvar_flatten_next3_fu_1228_p2;
reg   [12:0] indvar_flatten_next3_reg_1653;
wire    ap_CS_fsm_state26;
wire   [0:0] exitcond_flatten2_fu_1234_p2;
reg   [0:0] exitcond_flatten2_reg_1658;
wire   [0:0] exitcond_flatten3_fu_1222_p2;
wire   [5:0] ia_cast_mid2_v_fu_1253_p3;
reg   [5:0] ia_cast_mid2_v_reg_1667;
wire    ap_CS_fsm_state27;
wire   [0:0] exitcond4_mid_fu_1271_p2;
reg   [0:0] exitcond4_mid_reg_1675;
wire   [5:0] ib_cast_mid2_fu_1283_p3;
reg   [5:0] ib_cast_mid2_reg_1680;
wire   [12:0] tmp_21_fu_1314_p2;
reg   [12:0] tmp_21_reg_1687;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire   [4:0] i2_mid2_fu_1343_p3;
reg   [4:0] i2_mid2_reg_1772;
wire   [3:0] tmp_22_fu_1351_p1;
reg   [3:0] tmp_22_reg_1777;
wire   [6:0] ia_cast_mid2_fu_1355_p1;
reg   [6:0] ia_cast_mid2_reg_1782;
wire    ap_CS_fsm_state31;
wire   [6:0] ib_cast_mid2_cast_fu_1358_p1;
reg   [6:0] ib_cast_mid2_cast_reg_1787;
wire   [11:0] grp_fu_973_p18;
wire   [0:0] exitcond_fu_1361_p2;
reg   [0:0] exitcond_reg_1797_pp2_iter1_reg;
reg   [0:0] exitcond_reg_1797_pp2_iter2_reg;
reg   [0:0] exitcond_reg_1797_pp2_iter3_reg;
reg   [0:0] exitcond_reg_1797_pp2_iter4_reg;
reg   [0:0] exitcond_reg_1797_pp2_iter5_reg;
reg   [0:0] exitcond_reg_1797_pp2_iter6_reg;
reg   [0:0] exitcond_reg_1797_pp2_iter7_reg;
reg   [0:0] exitcond_reg_1797_pp2_iter8_reg;
reg   [0:0] exitcond_reg_1797_pp2_iter10_reg;
reg   [0:0] exitcond_reg_1797_pp2_iter11_reg;
reg   [3:0] tmp_17_reg_1801;
reg   [3:0] tmp_17_reg_1801_pp2_iter1_reg;
reg   [3:0] tmp_17_reg_1801_pp2_iter2_reg;
reg   [3:0] tmp_17_reg_1801_pp2_iter3_reg;
reg   [3:0] tmp_17_reg_1801_pp2_iter4_reg;
reg   [3:0] tmp_17_reg_1801_pp2_iter5_reg;
reg   [3:0] tmp_17_reg_1801_pp2_iter6_reg;
wire   [3:0] k_2_fu_1393_p2;
reg   [3:0] k_2_reg_1806;
reg    ap_enable_reg_pp2_iter0;
wire   [6:0] tmp_15_fu_1403_p2;
reg   [6:0] tmp_15_reg_1811;
wire   [6:0] tmp_18_fu_1411_p2;
reg   [6:0] tmp_18_reg_1816;
wire   [12:0] tmp_25_fu_1435_p2;
reg   [12:0] tmp_25_reg_1822;
reg   [11:0] tmp_20_reg_1907;
reg    ap_enable_reg_pp2_iter11;
wire   [11:0] buf_V_1_fu_1465_p3;
reg    ap_enable_reg_pp2_iter12;
wire   [4:0] i_2_fu_1477_p2;
wire   [9:0] indvar_flatten_next2_fu_1488_p3;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state17;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state21;
reg    ap_enable_reg_pp1_iter3;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state32;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg   [14:0] num_img_reg_755;
reg   [5:0] ap_phi_mux_j_phi_fu_781_p4;
reg   [5:0] ap_phi_mux_k_phi_fu_804_p4;
reg   [4:0] ap_phi_mux_i1_phi_fu_816_p4;
reg   [12:0] indvar_flatten2_reg_824;
wire    ap_CS_fsm_state25;
reg   [5:0] ia_reg_835;
reg   [9:0] indvar_flatten3_reg_847;
reg   [5:0] ib_reg_859;
reg   [4:0] i2_reg_871;
reg   [3:0] ap_phi_mux_k2_phi_fu_897_p4;
wire    ap_block_pp2_stage0;
wire  signed [63:0] tmp_9_cast_fu_1203_p1;
wire  signed [63:0] tmp_24_cast_fu_1320_p1;
wire  signed [63:0] tmp_27_cast_fu_1441_p1;
reg    ap_block_state5;
reg    ap_block_state7;
reg    ap_block_pp0_stage0_01001;
wire  signed [15:0] Outbuf_V_fu_1472_p1;
wire    ap_CS_fsm_state11;
wire   [31:0] i3_cast_fu_1033_p1;
wire   [15:0] num_img_cast_fu_1048_p1;
wire   [10:0] indvar_flatten_op_fu_1082_p2;
wire   [5:0] j_1_fu_1096_p2;
wire   [0:0] exitcond1_fu_1121_p2;
wire   [0:0] not_exitcond_flatten_fu_1116_p2;
wire   [5:0] k_mid_fu_1102_p3;
wire   [0:0] exitcond3_mid_fu_1127_p2;
wire   [0:0] tmp_8_fu_1139_p2;
wire   [5:0] k_1_fu_1133_p2;
wire   [4:0] i1_mid2_fu_1144_p3;
wire   [11:0] tmp_2_fu_1173_p3;
wire   [12:0] p_shl_cast_fu_1180_p1;
wire   [12:0] tmp_8_mid2_cast_fu_1170_p1;
wire   [12:0] tmp_3_mid2_cast_fu_1190_p1;
wire   [12:0] tmp_5_fu_1184_p2;
wire   [5:0] ia_1_fu_1240_p2;
wire   [0:0] exitcond2_fu_1265_p2;
wire   [0:0] not_exitcond_flatten_2_fu_1260_p2;
wire   [5:0] ib_mid_fu_1246_p3;
wire   [5:0] ib_1_fu_1277_p2;
wire   [11:0] tmp_12_fu_1294_p3;
wire   [12:0] p_shl1_cast_fu_1301_p1;
wire   [12:0] tmp_2_mid2_cast_fu_1291_p1;
wire   [12:0] tmp_10_mid2_cast_fu_1311_p1;
wire   [12:0] tmp_16_fu_1305_p2;
wire   [0:0] tmp_19_fu_1339_p2;
wire   [2:0] grp_fu_1367_p1;
wire   [3:0] mul_fu_1377_p0;
wire   [9:0] mul_fu_1377_p2;
wire   [3:0] grp_fu_1367_p2;
wire   [6:0] tmp_15_cast_fu_1399_p1;
wire   [6:0] tmp_20_cast_fu_1408_p1;
wire   [12:0] tmp_23_fu_1422_p3;
wire   [12:0] tmp_19_cast_fu_1419_p1;
wire   [12:0] tmp_24_fu_1429_p2;
wire   [12:0] tmp_16_cast_fu_1416_p1;
wire   [0:0] tmp_i_fu_1460_p2;
wire   [9:0] indvar_flatten52_op_fu_1482_p2;
wire  signed [15:0] grp_fu_1495_p0;
wire  signed [15:0] grp_fu_1495_p1;
reg    grp_fu_1495_ce;
wire    ap_CS_fsm_state9;
reg    grp_fu_1501_ce;
wire    ap_CS_fsm_state19;
reg   [28:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [9:0] mul_fu_1377_p00;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 29'd1;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
end

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_0_address0),
    .ce0(A_V_7_0_ce0),
    .q0(A_V_7_0_q0),
    .address1(A_V_7_0_address1),
    .ce1(A_V_7_0_ce1),
    .we1(A_V_7_0_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_1_address0),
    .ce0(A_V_7_1_ce0),
    .q0(A_V_7_1_q0),
    .address1(A_V_7_1_address1),
    .ce1(A_V_7_1_ce1),
    .we1(A_V_7_1_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_2_address0),
    .ce0(A_V_7_2_ce0),
    .q0(A_V_7_2_q0),
    .address1(A_V_7_2_address1),
    .ce1(A_V_7_2_ce1),
    .we1(A_V_7_2_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_3_address0),
    .ce0(A_V_7_3_ce0),
    .q0(A_V_7_3_q0),
    .address1(A_V_7_3_address1),
    .ce1(A_V_7_3_ce1),
    .we1(A_V_7_3_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_4_address0),
    .ce0(A_V_7_4_ce0),
    .q0(A_V_7_4_q0),
    .address1(A_V_7_4_address1),
    .ce1(A_V_7_4_ce1),
    .we1(A_V_7_4_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_5_address0),
    .ce0(A_V_7_5_ce0),
    .q0(A_V_7_5_q0),
    .address1(A_V_7_5_address1),
    .ce1(A_V_7_5_ce1),
    .we1(A_V_7_5_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_6_address0),
    .ce0(A_V_7_6_ce0),
    .q0(A_V_7_6_q0),
    .address1(A_V_7_6_address1),
    .ce1(A_V_7_6_ce1),
    .we1(A_V_7_6_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_7_address0),
    .ce0(A_V_7_7_ce0),
    .q0(A_V_7_7_q0),
    .address1(A_V_7_7_address1),
    .ce1(A_V_7_7_ce1),
    .we1(A_V_7_7_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_8_address0),
    .ce0(A_V_7_8_ce0),
    .q0(A_V_7_8_q0),
    .address1(A_V_7_8_address1),
    .ce1(A_V_7_8_ce1),
    .we1(A_V_7_8_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_9_address0),
    .ce0(A_V_7_9_ce0),
    .q0(A_V_7_9_q0),
    .address1(A_V_7_9_address1),
    .ce1(A_V_7_9_ce1),
    .we1(A_V_7_9_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_10_address0),
    .ce0(A_V_7_10_ce0),
    .q0(A_V_7_10_q0),
    .address1(A_V_7_10_address1),
    .ce1(A_V_7_10_ce1),
    .we1(A_V_7_10_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_11_address0),
    .ce0(A_V_7_11_ce0),
    .q0(A_V_7_11_q0),
    .address1(A_V_7_11_address1),
    .ce1(A_V_7_11_ce1),
    .we1(A_V_7_11_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_12_address0),
    .ce0(A_V_7_12_ce0),
    .q0(A_V_7_12_q0),
    .address1(A_V_7_12_address1),
    .ce1(A_V_7_12_ce1),
    .we1(A_V_7_12_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_13_address0),
    .ce0(A_V_7_13_ce0),
    .q0(A_V_7_13_q0),
    .address1(A_V_7_13_address1),
    .ce1(A_V_7_13_ce1),
    .we1(A_V_7_13_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_14_address0),
    .ce0(A_V_7_14_ce0),
    .q0(A_V_7_14_q0),
    .address1(A_V_7_14_address1),
    .ce1(A_V_7_14_ce1),
    .we1(A_V_7_14_we1),
    .d1(tmp_10_reg_1630)
);

Pool_16_63_3_0_s_hbi #(
    .DataWidth( 12 ),
    .AddressRange( 3969 ),
    .AddressWidth( 12 ))
A_V_7_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_7_15_address0),
    .ce0(A_V_7_15_ce0),
    .q0(A_V_7_15_q0),
    .address1(A_V_7_15_address1),
    .ce1(A_V_7_15_ce1),
    .we1(A_V_7_15_we1),
    .d1(tmp_10_reg_1630)
);

ultra_mux_164_12_xdS #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 12 ),
    .din9_WIDTH( 12 ),
    .din10_WIDTH( 12 ),
    .din11_WIDTH( 12 ),
    .din12_WIDTH( 12 ),
    .din13_WIDTH( 12 ),
    .din14_WIDTH( 12 ),
    .din15_WIDTH( 12 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 12 ))
ultra_mux_164_12_xdS_U32(
    .din0(reg_909),
    .din1(reg_913),
    .din2(reg_917),
    .din3(reg_921),
    .din4(reg_925),
    .din5(reg_929),
    .din6(reg_933),
    .din7(reg_937),
    .din8(reg_941),
    .din9(reg_945),
    .din10(reg_949),
    .din11(reg_953),
    .din12(reg_957),
    .din13(reg_961),
    .din14(reg_965),
    .din15(reg_969),
    .din16(tmp_22_reg_1777),
    .dout(grp_fu_973_p18)
);

ultra_mul_32s_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ultra_mul_32s_32sbkb_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp2_reg_1548),
    .din1(tmp1_reg_1543),
    .ce(1'b1),
    .dout(grp_fu_1025_p2)
);

ultra_urem_4ns_3nyd2 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 4 ))
ultra_urem_4ns_3nyd2_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_phi_mux_k2_phi_fu_897_p4),
    .din1(grp_fu_1367_p1),
    .ce(1'b1),
    .dout(grp_fu_1367_p2)
);

ultra_mul_mul_16scud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
ultra_mul_mul_16scud_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1495_p0),
    .din1(grp_fu_1495_p1),
    .ce(grp_fu_1495_ce),
    .dout(grp_fu_1495_p2)
);

ultra_mul_mul_16scud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
ultra_mul_mul_16scud_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_V_6_reg_1516),
    .din1(tmp_V_10_reg_1521),
    .ce(grp_fu_1501_ce),
    .dout(grp_fu_1501_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_6_fu_1052_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state21)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((tmp_6_fu_1052_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state32) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state32)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state32);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_enable_reg_pp2_iter12 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        i1_reg_812 <= i_1_reg_1620;
    end else if (((tmp_6_fu_1052_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        i1_reg_812 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        i2_reg_871 <= 5'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        i2_reg_871 <= i_2_fu_1477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_7_fu_1037_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i3_reg_744 <= i_fu_1042_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i3_reg_744 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ia_reg_835 <= 6'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        ia_reg_835 <= ia_cast_mid2_v_reg_1667;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ib_reg_859 <= 6'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        ib_reg_859 <= ib_cast_mid2_reg_1680;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_fu_1064_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten1_reg_766 <= indvar_flatten_next1_fu_1070_p2;
    end else if (((tmp_6_fu_1052_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        indvar_flatten1_reg_766 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        indvar_flatten2_reg_824 <= 13'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        indvar_flatten2_reg_824 <= indvar_flatten_next3_reg_1653;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        indvar_flatten3_reg_847 <= 10'd0;
    end else if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        indvar_flatten3_reg_847 <= indvar_flatten_next2_fu_1488_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_fu_1064_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_789 <= indvar_flatten_next_fu_1088_p3;
    end else if (((tmp_6_fu_1052_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        indvar_flatten_reg_789 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        j_reg_777 <= tmp_8_mid2_v_reg_1603;
    end else if (((tmp_6_fu_1052_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        j_reg_777 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_reg_1797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        k2_reg_893 <= k_2_reg_1806;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        k2_reg_893 <= 4'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        k_reg_800 <= tmp_3_mid2_reg_1610;
    end else if (((tmp_6_fu_1052_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        k_reg_800 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_reg_1507 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        num_img_reg_755 <= 15'd0;
    end else if (((exitcond_flatten3_fu_1222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        num_img_reg_755 <= num_img_1_reg_1576;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_reg_1797_pp2_iter11_reg == 1'd0) & (ap_enable_reg_pp2_iter12 == 1'b1))) begin
        p_1_reg_883 <= buf_V_1_fu_1465_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        p_1_reg_883 <= grp_fu_973_p18;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        KER_bound_reg_1558 <= KER_bound_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        exitcond4_mid_reg_1675 <= exitcond4_mid_fu_1271_p2;
        ia_cast_mid2_v_reg_1667 <= ia_cast_mid2_v_fu_1253_p3;
        ib_cast_mid2_reg_1680 <= ib_cast_mid2_fu_1283_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten1_reg_1581 <= exitcond_flatten1_fu_1064_p2;
        exitcond_flatten1_reg_1581_pp1_iter1_reg <= exitcond_flatten1_reg_1581;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten3_fu_1222_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        exitcond_flatten2_reg_1658 <= exitcond_flatten2_fu_1234_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_fu_1064_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten_reg_1590 <= exitcond_flatten_fu_1076_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        exitcond_reg_1797 <= exitcond_fu_1361_p2;
        exitcond_reg_1797_pp2_iter1_reg <= exitcond_reg_1797;
        tmp_17_reg_1801_pp2_iter1_reg <= tmp_17_reg_1801;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        exitcond_reg_1797_pp2_iter10_reg <= exitcond_reg_1797_pp2_iter9_reg;
        exitcond_reg_1797_pp2_iter11_reg <= exitcond_reg_1797_pp2_iter10_reg;
        exitcond_reg_1797_pp2_iter2_reg <= exitcond_reg_1797_pp2_iter1_reg;
        exitcond_reg_1797_pp2_iter3_reg <= exitcond_reg_1797_pp2_iter2_reg;
        exitcond_reg_1797_pp2_iter4_reg <= exitcond_reg_1797_pp2_iter3_reg;
        exitcond_reg_1797_pp2_iter5_reg <= exitcond_reg_1797_pp2_iter4_reg;
        exitcond_reg_1797_pp2_iter6_reg <= exitcond_reg_1797_pp2_iter5_reg;
        exitcond_reg_1797_pp2_iter7_reg <= exitcond_reg_1797_pp2_iter6_reg;
        exitcond_reg_1797_pp2_iter8_reg <= exitcond_reg_1797_pp2_iter7_reg;
        exitcond_reg_1797_pp2_iter9_reg <= exitcond_reg_1797_pp2_iter8_reg;
        tmp_17_reg_1801_pp2_iter2_reg <= tmp_17_reg_1801_pp2_iter1_reg;
        tmp_17_reg_1801_pp2_iter3_reg <= tmp_17_reg_1801_pp2_iter2_reg;
        tmp_17_reg_1801_pp2_iter4_reg <= tmp_17_reg_1801_pp2_iter3_reg;
        tmp_17_reg_1801_pp2_iter5_reg <= tmp_17_reg_1801_pp2_iter4_reg;
        tmp_17_reg_1801_pp2_iter6_reg <= tmp_17_reg_1801_pp2_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        i2_mid2_reg_1772 <= i2_mid2_fu_1343_p3;
        tmp_22_reg_1777 <= tmp_22_fu_1351_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_reg_1581 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_1_reg_1620 <= i_1_fu_1164_p2;
        tmp_3_mid2_reg_1610 <= tmp_3_mid2_fu_1152_p3;
        tmp_8_mid2_v_reg_1603 <= tmp_8_mid2_v_fu_1109_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ia_cast_mid2_reg_1782[5 : 0] <= ia_cast_mid2_fu_1355_p1[5 : 0];
        ib_cast_mid2_cast_reg_1787[5 : 0] <= ib_cast_mid2_cast_fu_1358_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        indvar_flatten_next3_reg_1653 <= indvar_flatten_next3_fu_1228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_fu_1361_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        k_2_reg_1806 <= k_2_fu_1393_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_reg_1507 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        lhs_V_reg_1526 <= lhs_V_fu_1016_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        num_img_1_reg_1576 <= num_img_1_fu_1058_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p_s_reg_1553 <= grp_fu_1025_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        reg_905 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | ((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_reg_1797_pp2_iter9_reg == 1'd0) & (ap_enable_reg_pp2_iter10 == 1'b1)))) begin
        reg_909 <= A_V_7_0_q0;
        reg_913 <= A_V_7_1_q0;
        reg_917 <= A_V_7_2_q0;
        reg_921 <= A_V_7_3_q0;
        reg_925 <= A_V_7_4_q0;
        reg_929 <= A_V_7_5_q0;
        reg_933 <= A_V_7_6_q0;
        reg_937 <= A_V_7_7_q0;
        reg_941 <= A_V_7_8_q0;
        reg_945 <= A_V_7_9_q0;
        reg_949 <= A_V_7_10_q0;
        reg_953 <= A_V_7_11_q0;
        reg_957 <= A_V_7_12_q0;
        reg_961 <= A_V_7_13_q0;
        reg_965 <= A_V_7_14_q0;
        reg_969 <= A_V_7_15_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp1_reg_1543 <= grp_fu_1495_p2;
        tmp2_reg_1548 <= grp_fu_1501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0))) begin
        tmp_10_reg_1630 <= tmp_10_fu_1199_p1;
        tmp_9_reg_1625 <= tmp_9_fu_1193_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_reg_1581 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_11_reg_1616 <= tmp_11_fu_1160_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        tmp_11_reg_1616_pp1_iter2_reg <= tmp_11_reg_1616;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_reg_1797_pp2_iter6_reg == 1'd0))) begin
        tmp_15_reg_1811 <= tmp_15_fu_1403_p2;
        tmp_18_reg_1816 <= tmp_18_fu_1411_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_fu_1361_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_17_reg_1801 <= {{mul_fu_1377_p2[9:6]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_reg_1797_pp2_iter10_reg == 1'd0) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        tmp_20_reg_1907 <= grp_fu_973_p18;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        tmp_21_reg_1687 <= tmp_21_fu_1314_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_reg_1797_pp2_iter7_reg == 1'd0))) begin
        tmp_25_reg_1822 <= tmp_25_fu_1435_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_7_reg_1563 <= tmp_7_fu_1037_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_10_reg_1521 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_4_reg_1511 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_6_reg_1516 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_s_reg_1507 <= tmp_s_fu_1010_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_0_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_0_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_0_ce0 = 1'b1;
    end else begin
        A_V_7_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_0_ce1 = 1'b1;
    end else begin
        A_V_7_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_0_we1 = 1'b1;
    end else begin
        A_V_7_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_10_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_10_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_10_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_10_ce0 = 1'b1;
    end else begin
        A_V_7_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_10_ce1 = 1'b1;
    end else begin
        A_V_7_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd10) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_10_we1 = 1'b1;
    end else begin
        A_V_7_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_11_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_11_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_11_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_11_ce0 = 1'b1;
    end else begin
        A_V_7_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_11_ce1 = 1'b1;
    end else begin
        A_V_7_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd11) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_11_we1 = 1'b1;
    end else begin
        A_V_7_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_12_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_12_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_12_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_12_ce0 = 1'b1;
    end else begin
        A_V_7_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_12_ce1 = 1'b1;
    end else begin
        A_V_7_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd12) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_12_we1 = 1'b1;
    end else begin
        A_V_7_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_13_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_13_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_13_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_13_ce0 = 1'b1;
    end else begin
        A_V_7_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_13_ce1 = 1'b1;
    end else begin
        A_V_7_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd13) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_13_we1 = 1'b1;
    end else begin
        A_V_7_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_14_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_14_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_14_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_14_ce0 = 1'b1;
    end else begin
        A_V_7_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_14_ce1 = 1'b1;
    end else begin
        A_V_7_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd14) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_14_we1 = 1'b1;
    end else begin
        A_V_7_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_15_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_15_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_15_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_15_ce0 = 1'b1;
    end else begin
        A_V_7_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_15_ce1 = 1'b1;
    end else begin
        A_V_7_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd15) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_15_we1 = 1'b1;
    end else begin
        A_V_7_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_1_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_1_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_1_ce0 = 1'b1;
    end else begin
        A_V_7_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_1_ce1 = 1'b1;
    end else begin
        A_V_7_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_1_we1 = 1'b1;
    end else begin
        A_V_7_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_2_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_2_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_2_ce0 = 1'b1;
    end else begin
        A_V_7_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_2_ce1 = 1'b1;
    end else begin
        A_V_7_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_2_we1 = 1'b1;
    end else begin
        A_V_7_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_3_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_3_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_3_ce0 = 1'b1;
    end else begin
        A_V_7_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_3_ce1 = 1'b1;
    end else begin
        A_V_7_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_3_we1 = 1'b1;
    end else begin
        A_V_7_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_4_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_4_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_4_ce0 = 1'b1;
    end else begin
        A_V_7_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_4_ce1 = 1'b1;
    end else begin
        A_V_7_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd4) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_4_we1 = 1'b1;
    end else begin
        A_V_7_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_5_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_5_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_5_ce0 = 1'b1;
    end else begin
        A_V_7_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_5_ce1 = 1'b1;
    end else begin
        A_V_7_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd5) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_5_we1 = 1'b1;
    end else begin
        A_V_7_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_6_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_6_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_6_ce0 = 1'b1;
    end else begin
        A_V_7_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_6_ce1 = 1'b1;
    end else begin
        A_V_7_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd6) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_6_we1 = 1'b1;
    end else begin
        A_V_7_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_7_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_7_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_7_ce0 = 1'b1;
    end else begin
        A_V_7_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_7_ce1 = 1'b1;
    end else begin
        A_V_7_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd7) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_7_we1 = 1'b1;
    end else begin
        A_V_7_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_8_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_8_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_8_ce0 = 1'b1;
    end else begin
        A_V_7_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_8_ce1 = 1'b1;
    end else begin
        A_V_7_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd8) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_8_we1 = 1'b1;
    end else begin
        A_V_7_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        A_V_7_9_address0 = tmp_27_cast_fu_1441_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        A_V_7_9_address0 = tmp_24_cast_fu_1320_p1;
    end else begin
        A_V_7_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1)))) begin
        A_V_7_9_ce0 = 1'b1;
    end else begin
        A_V_7_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_9_ce1 = 1'b1;
    end else begin
        A_V_7_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_11_reg_1616_pp1_iter2_reg == 4'd9) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        A_V_7_9_we1 = 1'b1;
    end else begin
        A_V_7_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_7_fu_1037_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten1_fu_1064_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_1361_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state32 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state32 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_i1_phi_fu_816_p4 = i_1_reg_1620;
    end else begin
        ap_phi_mux_i1_phi_fu_816_p4 = i1_reg_812;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_j_phi_fu_781_p4 = tmp_8_mid2_v_reg_1603;
    end else begin
        ap_phi_mux_j_phi_fu_781_p4 = j_reg_777;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond_reg_1797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_k2_phi_fu_897_p4 = k_2_reg_1806;
    end else begin
        ap_phi_mux_k2_phi_fu_897_p4 = k2_reg_893;
    end
end

always @ (*) begin
    if (((exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_mux_k_phi_fu_804_p4 = tmp_3_mid2_reg_1610;
    end else begin
        ap_phi_mux_k_phi_fu_804_p4 = k_reg_800;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_fu_1495_ce = 1'b1;
    end else begin
        grp_fu_1495_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_fu_1501_ce = 1'b1;
    end else begin
        grp_fu_1501_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_7_reg_1563 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
        stream_in_V_V_blk_n = stream_in_V_V_empty_n;
    end else begin
        stream_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_7_reg_1563 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_in_V_V_read = 1'b1;
    end else begin
        stream_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_7_reg_1563 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stream_out_V_V_blk_n = stream_out_V_V_full_n;
    end else begin
        stream_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        stream_out_V_V_din = Outbuf_V_fu_1472_p1;
    end else if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (tmp_7_reg_1563 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_din = stream_in_V_V_dout;
    end else begin
        stream_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_7_reg_1563 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_write = 1'b1;
    end else begin
        stream_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_reg_1507 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_reg_1507 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_7_fu_1037_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_7_fu_1037_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state20 : begin
            if (((tmp_6_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_flatten1_fu_1064_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_flatten1_fu_1064_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((exitcond_flatten3_fu_1222_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_fu_1361_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_fu_1361_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((stream_out_V_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_V_7_0_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_10_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_11_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_12_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_13_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_14_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_15_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_1_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_2_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_3_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_4_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_5_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_6_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_7_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_8_address1 = tmp_9_cast_fu_1203_p1;

assign A_V_7_9_address1 = tmp_9_cast_fu_1203_p1;

assign KER_bound_fu_1029_p2 = ($signed(p_s_reg_1553) + $signed(lhs_V_reg_1526));

assign Outbuf_V_fu_1472_p1 = p_1_reg_883;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_7_reg_1563 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_7_reg_1563 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_7_reg_1563 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_7_reg_1563 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_7_reg_1563 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_7_reg_1563 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0));
end

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp0_stage0_iter1 = (((tmp_7_reg_1563 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_7_reg_1563 == 1'd1) & (stream_in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state21_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_pp1_stage0_iter2 = ((exitcond_flatten1_reg_1581_pp1_iter1_reg == 1'd0) & (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state24_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state32_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state40_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign buf_V_1_fu_1465_p3 = ((tmp_i_fu_1460_p2[0:0] === 1'b1) ? p_1_reg_883 : tmp_20_reg_1907);

assign exitcond1_fu_1121_p2 = ((ap_phi_mux_i1_phi_fu_816_p4 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond2_fu_1265_p2 = ((i2_reg_871 == 5'd16) ? 1'b1 : 1'b0);

assign exitcond3_mid_fu_1127_p2 = (not_exitcond_flatten_fu_1116_p2 & exitcond1_fu_1121_p2);

assign exitcond4_mid_fu_1271_p2 = (not_exitcond_flatten_2_fu_1260_p2 & exitcond2_fu_1265_p2);

assign exitcond_flatten1_fu_1064_p2 = ((indvar_flatten1_reg_766 == 16'd63504) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_1234_p2 = ((indvar_flatten3_reg_847 == 10'd336) ? 1'b1 : 1'b0);

assign exitcond_flatten3_fu_1222_p2 = ((indvar_flatten2_reg_824 == 13'd7056) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1076_p2 = ((indvar_flatten_reg_789 == 11'd1008) ? 1'b1 : 1'b0);

assign exitcond_fu_1361_p2 = ((ap_phi_mux_k2_phi_fu_897_p4 == 4'd9) ? 1'b1 : 1'b0);

assign grp_fu_1367_p1 = 4'd3;

assign grp_fu_1495_p0 = tmp_4_fu_1022_p1;

assign grp_fu_1495_p1 = tmp_4_fu_1022_p1;

assign i1_mid2_fu_1144_p3 = ((tmp_8_fu_1139_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_i1_phi_fu_816_p4);

assign i2_mid2_fu_1343_p3 = ((tmp_19_fu_1339_p2[0:0] === 1'b1) ? 5'd0 : i2_reg_871);

assign i3_cast_fu_1033_p1 = i3_reg_744;

assign i_1_fu_1164_p2 = (i1_mid2_fu_1144_p3 + 5'd1);

assign i_2_fu_1477_p2 = (i2_mid2_reg_1772 + 5'd1);

assign i_fu_1042_p2 = (i3_reg_744 + 31'd1);

assign ia_1_fu_1240_p2 = (6'd3 + ia_reg_835);

assign ia_cast_mid2_fu_1355_p1 = ia_cast_mid2_v_reg_1667;

assign ia_cast_mid2_v_fu_1253_p3 = ((exitcond_flatten2_reg_1658[0:0] === 1'b1) ? ia_1_fu_1240_p2 : ia_reg_835);

assign ib_1_fu_1277_p2 = (6'd3 + ib_mid_fu_1246_p3);

assign ib_cast_mid2_cast_fu_1358_p1 = ib_cast_mid2_reg_1680;

assign ib_cast_mid2_fu_1283_p3 = ((exitcond4_mid_fu_1271_p2[0:0] === 1'b1) ? ib_1_fu_1277_p2 : ib_mid_fu_1246_p3);

assign ib_mid_fu_1246_p3 = ((exitcond_flatten2_reg_1658[0:0] === 1'b1) ? 6'd0 : ib_reg_859);

assign indvar_flatten52_op_fu_1482_p2 = (indvar_flatten3_reg_847 + 10'd1);

assign indvar_flatten_next1_fu_1070_p2 = (indvar_flatten1_reg_766 + 16'd1);

assign indvar_flatten_next2_fu_1488_p3 = ((exitcond_flatten2_reg_1658[0:0] === 1'b1) ? 10'd1 : indvar_flatten52_op_fu_1482_p2);

assign indvar_flatten_next3_fu_1228_p2 = (indvar_flatten2_reg_824 + 13'd1);

assign indvar_flatten_next_fu_1088_p3 = ((exitcond_flatten_fu_1076_p2[0:0] === 1'b1) ? 11'd1 : indvar_flatten_op_fu_1082_p2);

assign indvar_flatten_op_fu_1082_p2 = (indvar_flatten_reg_789 + 11'd1);

assign j_1_fu_1096_p2 = (6'd1 + ap_phi_mux_j_phi_fu_781_p4);

assign k_1_fu_1133_p2 = (6'd1 + k_mid_fu_1102_p3);

assign k_2_fu_1393_p2 = (ap_phi_mux_k2_phi_fu_897_p4 + 4'd1);

assign k_mid_fu_1102_p3 = ((exitcond_flatten_reg_1590[0:0] === 1'b1) ? 6'd0 : ap_phi_mux_k_phi_fu_804_p4);

assign lhs_V_fu_1016_p1 = tmp_V_10_reg_1521;

assign mul_fu_1377_p0 = mul_fu_1377_p00;

assign mul_fu_1377_p00 = ap_phi_mux_k2_phi_fu_897_p4;

assign mul_fu_1377_p2 = (mul_fu_1377_p0 * $signed('h16));

assign not_exitcond_flatten_2_fu_1260_p2 = (exitcond_flatten2_reg_1658 ^ 1'd1);

assign not_exitcond_flatten_fu_1116_p2 = (exitcond_flatten_reg_1590 ^ 1'd1);

assign num_img_1_fu_1058_p2 = (num_img_reg_755 + 15'd1);

assign num_img_cast_fu_1048_p1 = num_img_reg_755;

assign p_shl1_cast_fu_1301_p1 = tmp_12_fu_1294_p3;

assign p_shl_cast_fu_1180_p1 = tmp_2_fu_1173_p3;

assign start_out = real_start;

assign tmp_10_fu_1199_p1 = stream_in_V_V_dout[11:0];

assign tmp_10_mid2_cast_fu_1311_p1 = ib_cast_mid2_reg_1680;

assign tmp_11_fu_1160_p1 = i1_mid2_fu_1144_p3[3:0];

assign tmp_12_fu_1294_p3 = {{ia_cast_mid2_v_reg_1667}, {6'd0}};

assign tmp_15_cast_fu_1399_p1 = grp_fu_1367_p2;

assign tmp_15_fu_1403_p2 = (tmp_15_cast_fu_1399_p1 + ib_cast_mid2_cast_reg_1787);

assign tmp_16_cast_fu_1416_p1 = tmp_15_reg_1811;

assign tmp_16_fu_1305_p2 = (p_shl1_cast_fu_1301_p1 - tmp_2_mid2_cast_fu_1291_p1);

assign tmp_18_fu_1411_p2 = (tmp_20_cast_fu_1408_p1 + ia_cast_mid2_reg_1782);

assign tmp_19_cast_fu_1419_p1 = tmp_18_reg_1816;

assign tmp_19_fu_1339_p2 = (exitcond_flatten2_reg_1658 | exitcond4_mid_reg_1675);

assign tmp_20_cast_fu_1408_p1 = tmp_17_reg_1801_pp2_iter6_reg;

assign tmp_21_fu_1314_p2 = (tmp_10_mid2_cast_fu_1311_p1 + tmp_16_fu_1305_p2);

assign tmp_22_fu_1351_p1 = i2_mid2_fu_1343_p3[3:0];

assign tmp_23_fu_1422_p3 = {{tmp_18_reg_1816}, {6'd0}};

assign tmp_24_cast_fu_1320_p1 = $signed(tmp_21_reg_1687);

assign tmp_24_fu_1429_p2 = (tmp_23_fu_1422_p3 - tmp_19_cast_fu_1419_p1);

assign tmp_25_fu_1435_p2 = (tmp_24_fu_1429_p2 + tmp_16_cast_fu_1416_p1);

assign tmp_27_cast_fu_1441_p1 = $signed(tmp_25_reg_1822);

assign tmp_2_fu_1173_p3 = {{tmp_8_mid2_v_reg_1603}, {6'd0}};

assign tmp_2_mid2_cast_fu_1291_p1 = ia_cast_mid2_v_reg_1667;

assign tmp_3_mid2_cast_fu_1190_p1 = tmp_3_mid2_reg_1610;

assign tmp_3_mid2_fu_1152_p3 = ((exitcond3_mid_fu_1127_p2[0:0] === 1'b1) ? k_1_fu_1133_p2 : k_mid_fu_1102_p3);

assign tmp_4_fu_1022_p1 = tmp_V_4_reg_1511;

assign tmp_5_fu_1184_p2 = (p_shl_cast_fu_1180_p1 - tmp_8_mid2_cast_fu_1170_p1);

assign tmp_6_fu_1052_p2 = (($signed(num_img_cast_fu_1048_p1) < $signed(reg_905)) ? 1'b1 : 1'b0);

assign tmp_7_fu_1037_p2 = (($signed(i3_cast_fu_1033_p1) < $signed(KER_bound_reg_1558)) ? 1'b1 : 1'b0);

assign tmp_8_fu_1139_p2 = (exitcond_flatten_reg_1590 | exitcond3_mid_fu_1127_p2);

assign tmp_8_mid2_cast_fu_1170_p1 = tmp_8_mid2_v_reg_1603;

assign tmp_8_mid2_v_fu_1109_p3 = ((exitcond_flatten_reg_1590[0:0] === 1'b1) ? j_1_fu_1096_p2 : ap_phi_mux_j_phi_fu_781_p4);

assign tmp_9_cast_fu_1203_p1 = $signed(tmp_9_reg_1625);

assign tmp_9_fu_1193_p2 = (tmp_3_mid2_cast_fu_1190_p1 + tmp_5_fu_1184_p2);

assign tmp_i_fu_1460_p2 = (($signed(p_1_reg_883) > $signed(tmp_20_reg_1907)) ? 1'b1 : 1'b0);

assign tmp_s_fu_1010_p2 = ((reg_905 == 16'd0) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    ia_cast_mid2_reg_1782[6] <= 1'b0;
    ib_cast_mid2_cast_reg_1787[6] <= 1'b0;
end

endmodule //Pool_16_63_3_0_s
