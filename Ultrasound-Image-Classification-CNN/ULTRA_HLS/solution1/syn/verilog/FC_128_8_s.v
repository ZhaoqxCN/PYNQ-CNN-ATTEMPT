// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FC_128_8_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        stream_in_V_V_dout,
        stream_in_V_V_empty_n,
        stream_in_V_V_read,
        stream_out_V_V_din,
        stream_out_V_V_full_n,
        stream_out_V_V_write
);

parameter    ap_ST_fsm_state1 = 27'd1;
parameter    ap_ST_fsm_state2 = 27'd2;
parameter    ap_ST_fsm_state3 = 27'd4;
parameter    ap_ST_fsm_state4 = 27'd8;
parameter    ap_ST_fsm_state5 = 27'd16;
parameter    ap_ST_fsm_state6 = 27'd32;
parameter    ap_ST_fsm_state7 = 27'd64;
parameter    ap_ST_fsm_state8 = 27'd128;
parameter    ap_ST_fsm_state9 = 27'd256;
parameter    ap_ST_fsm_state10 = 27'd512;
parameter    ap_ST_fsm_state11 = 27'd1024;
parameter    ap_ST_fsm_state12 = 27'd2048;
parameter    ap_ST_fsm_state13 = 27'd4096;
parameter    ap_ST_fsm_state14 = 27'd8192;
parameter    ap_ST_fsm_state15 = 27'd16384;
parameter    ap_ST_fsm_state16 = 27'd32768;
parameter    ap_ST_fsm_pp0_stage0 = 27'd65536;
parameter    ap_ST_fsm_state19 = 27'd131072;
parameter    ap_ST_fsm_state20 = 27'd262144;
parameter    ap_ST_fsm_pp1_stage0 = 27'd524288;
parameter    ap_ST_fsm_state24 = 27'd1048576;
parameter    ap_ST_fsm_pp2_stage0 = 27'd2097152;
parameter    ap_ST_fsm_state45 = 27'd4194304;
parameter    ap_ST_fsm_pp3_stage0 = 27'd8388608;
parameter    ap_ST_fsm_state49 = 27'd16777216;
parameter    ap_ST_fsm_pp4_stage0 = 27'd33554432;
parameter    ap_ST_fsm_state53 = 27'd67108864;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] stream_in_V_V_dout;
input   stream_in_V_V_empty_n;
output   stream_in_V_V_read;
output  [15:0] stream_out_V_V_din;
input   stream_out_V_V_full_n;
output   stream_out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg stream_in_V_V_read;
reg[15:0] stream_out_V_V_din;
reg stream_out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [26:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg  signed [11:0] multiple_V_11;
reg   [2:0] bias_V_11_address0;
reg    bias_V_11_ce0;
reg    bias_V_11_we0;
wire   [11:0] bias_V_11_q0;
wire   [3:0] A_V_5_0_address0;
reg    A_V_5_0_ce0;
wire   [11:0] A_V_5_0_q0;
wire   [3:0] A_V_5_0_address1;
reg    A_V_5_0_ce1;
reg    A_V_5_0_we1;
wire   [3:0] A_V_5_1_address0;
reg    A_V_5_1_ce0;
wire   [11:0] A_V_5_1_q0;
wire   [3:0] A_V_5_1_address1;
reg    A_V_5_1_ce1;
reg    A_V_5_1_we1;
wire   [3:0] A_V_5_2_address0;
reg    A_V_5_2_ce0;
wire   [11:0] A_V_5_2_q0;
wire   [3:0] A_V_5_2_address1;
reg    A_V_5_2_ce1;
reg    A_V_5_2_we1;
wire   [3:0] A_V_5_3_address0;
reg    A_V_5_3_ce0;
wire   [11:0] A_V_5_3_q0;
wire   [3:0] A_V_5_3_address1;
reg    A_V_5_3_ce1;
reg    A_V_5_3_we1;
wire   [3:0] A_V_5_4_address0;
reg    A_V_5_4_ce0;
wire   [11:0] A_V_5_4_q0;
wire   [3:0] A_V_5_4_address1;
reg    A_V_5_4_ce1;
reg    A_V_5_4_we1;
wire   [3:0] A_V_5_5_address0;
reg    A_V_5_5_ce0;
wire   [11:0] A_V_5_5_q0;
wire   [3:0] A_V_5_5_address1;
reg    A_V_5_5_ce1;
reg    A_V_5_5_we1;
wire   [3:0] A_V_5_6_address0;
reg    A_V_5_6_ce0;
wire   [11:0] A_V_5_6_q0;
wire   [3:0] A_V_5_6_address1;
reg    A_V_5_6_ce1;
reg    A_V_5_6_we1;
wire   [3:0] A_V_5_7_address0;
reg    A_V_5_7_ce0;
wire   [11:0] A_V_5_7_q0;
wire   [3:0] A_V_5_7_address1;
reg    A_V_5_7_ce1;
reg    A_V_5_7_we1;
wire   [6:0] B_V_5_0_address0;
reg    B_V_5_0_ce0;
wire   [11:0] B_V_5_0_q0;
wire   [6:0] B_V_5_0_address1;
reg    B_V_5_0_ce1;
reg    B_V_5_0_we1;
wire   [6:0] B_V_5_1_address0;
reg    B_V_5_1_ce0;
wire   [11:0] B_V_5_1_q0;
wire   [6:0] B_V_5_1_address1;
reg    B_V_5_1_ce1;
reg    B_V_5_1_we1;
wire   [6:0] B_V_5_2_address0;
reg    B_V_5_2_ce0;
wire   [11:0] B_V_5_2_q0;
wire   [6:0] B_V_5_2_address1;
reg    B_V_5_2_ce1;
reg    B_V_5_2_we1;
wire   [6:0] B_V_5_3_address0;
reg    B_V_5_3_ce0;
wire   [11:0] B_V_5_3_q0;
wire   [6:0] B_V_5_3_address1;
reg    B_V_5_3_ce1;
reg    B_V_5_3_we1;
wire   [6:0] B_V_5_4_address0;
reg    B_V_5_4_ce0;
wire   [11:0] B_V_5_4_q0;
wire   [6:0] B_V_5_4_address1;
reg    B_V_5_4_ce1;
reg    B_V_5_4_we1;
wire   [6:0] B_V_5_5_address0;
reg    B_V_5_5_ce0;
wire   [11:0] B_V_5_5_q0;
wire   [6:0] B_V_5_5_address1;
reg    B_V_5_5_ce1;
reg    B_V_5_5_we1;
wire   [6:0] B_V_5_6_address0;
reg    B_V_5_6_ce0;
wire   [11:0] B_V_5_6_q0;
wire   [6:0] B_V_5_6_address1;
reg    B_V_5_6_ce1;
reg    B_V_5_6_we1;
wire   [6:0] B_V_5_7_address0;
reg    B_V_5_7_ce0;
wire   [11:0] B_V_5_7_q0;
wire   [6:0] B_V_5_7_address1;
reg    B_V_5_7_ce1;
reg    B_V_5_7_we1;
reg    stream_in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage0;
reg   [0:0] exitcond_flatten_reg_1724;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_pp4_stage0;
reg   [0:0] exitcond2_reg_1769;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] tmp_46_reg_1371;
reg    stream_out_V_V_blk_n;
reg    ap_enable_reg_pp2_iter19;
wire    ap_block_pp2_stage0;
reg   [0:0] ifzero_reg_1537;
reg   [0:0] ifzero_reg_1537_pp2_iter18_reg;
reg   [30:0] i5_reg_637;
reg   [7:0] i2_reg_659;
reg   [10:0] indvar_flatten6_reg_670;
reg   [3:0] i3_reg_681;
reg   [30:0] p_3_reg_692;
reg   [7:0] j4_reg_704;
reg   [10:0] indvar_flatten_reg_715;
reg   [7:0] j_reg_726;
reg   [3:0] i_reg_737;
reg   [3:0] i1_reg_748;
reg   [3:0] i1_reg_748_pp4_iter1_reg;
wire    ap_block_state50_pp4_stage0_iter0;
reg    ap_block_state51_pp4_stage0_iter1;
wire    ap_block_state52_pp4_stage0_iter2;
reg    ap_block_pp4_stage0_11001;
reg   [15:0] tmp_V_reg_1300;
reg    ap_block_state1;
reg   [15:0] tmp_V_44_reg_1306;
reg    ap_block_state2;
reg  signed [15:0] tmp_V_46_reg_1311;
reg    ap_block_state3;
reg  signed [15:0] tmp_V_48_reg_1316;
reg    ap_block_state4;
reg  signed [15:0] tmp_V_52_reg_1321;
reg    ap_block_state6;
wire   [0:0] tmp_s_fu_760_p2;
reg    ap_block_state8;
wire   [0:0] tmp_43_fu_765_p2;
wire  signed [31:0] lhs_V_fu_770_p1;
reg  signed [31:0] lhs_V_reg_1334;
wire  signed [31:0] tmp_44_fu_776_p1;
wire  signed [31:0] grp_fu_1273_p2;
reg  signed [31:0] tmp1_reg_1351;
wire    ap_CS_fsm_state10;
wire  signed [31:0] grp_fu_1279_p2;
reg  signed [31:0] tmp2_reg_1356;
wire   [31:0] grp_fu_789_p2;
reg   [31:0] p_s_reg_1361;
wire    ap_CS_fsm_state15;
wire   [31:0] KER_bound_fu_793_p2;
reg   [31:0] KER_bound_reg_1366;
wire    ap_CS_fsm_state16;
wire   [0:0] tmp_46_fu_801_p2;
wire    ap_block_state17_pp0_stage0_iter0;
reg    ap_block_state18_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [30:0] i_9_fu_806_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] tmp_45_fu_816_p2;
wire    ap_CS_fsm_state20;
wire   [14:0] num_img_3_fu_821_p2;
reg   [14:0] num_img_3_reg_1384;
wire   [0:0] exitcond4_fu_827_p2;
wire    ap_block_state21_pp1_stage0_iter0;
reg    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_state23_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [7:0] i_1_fu_833_p2;
reg    ap_enable_reg_pp1_iter0;
reg   [3:0] arrayNo_cast_reg_1398;
reg   [3:0] arrayNo_cast_reg_1398_pp1_iter1_reg;
wire   [3:0] tmp_73_fu_849_p1;
reg   [3:0] tmp_73_reg_1402;
reg   [3:0] tmp_73_reg_1402_pp1_iter1_reg;
wire   [11:0] tmp_72_fu_853_p1;
reg   [11:0] tmp_72_reg_1407;
wire   [0:0] exitcond_flatten8_fu_868_p2;
reg   [0:0] exitcond_flatten8_reg_1419;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state25_pp2_stage0_iter0;
wire    ap_block_state26_pp2_stage0_iter1;
wire    ap_block_state27_pp2_stage0_iter2;
wire    ap_block_state28_pp2_stage0_iter3;
wire    ap_block_state29_pp2_stage0_iter4;
wire    ap_block_state30_pp2_stage0_iter5;
wire    ap_block_state31_pp2_stage0_iter6;
wire    ap_block_state32_pp2_stage0_iter7;
wire    ap_block_state33_pp2_stage0_iter8;
wire    ap_block_state34_pp2_stage0_iter9;
wire    ap_block_state35_pp2_stage0_iter10;
wire    ap_block_state36_pp2_stage0_iter11;
wire    ap_block_state37_pp2_stage0_iter12;
wire    ap_block_state38_pp2_stage0_iter13;
wire    ap_block_state39_pp2_stage0_iter14;
wire    ap_block_state40_pp2_stage0_iter15;
wire    ap_block_state41_pp2_stage0_iter16;
wire    ap_block_state42_pp2_stage0_iter17;
wire    ap_block_state43_pp2_stage0_iter18;
reg    ap_block_state44_pp2_stage0_iter19;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] exitcond_flatten8_reg_1419_pp2_iter1_reg;
reg   [0:0] exitcond_flatten8_reg_1419_pp2_iter2_reg;
reg   [0:0] exitcond_flatten8_reg_1419_pp2_iter3_reg;
reg   [0:0] exitcond_flatten8_reg_1419_pp2_iter4_reg;
reg   [0:0] exitcond_flatten8_reg_1419_pp2_iter5_reg;
wire   [10:0] indvar_flatten_next7_fu_874_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [0:0] exitcond5_fu_886_p2;
reg   [0:0] exitcond5_reg_1428;
reg   [0:0] exitcond5_reg_1428_pp2_iter1_reg;
reg   [0:0] exitcond5_reg_1428_pp2_iter2_reg;
reg   [0:0] exitcond5_reg_1428_pp2_iter3_reg;
reg   [0:0] exitcond5_reg_1428_pp2_iter4_reg;
wire   [3:0] tmp_56_mid2_v_fu_900_p3;
reg   [3:0] tmp_56_mid2_v_reg_1433;
reg   [3:0] tmp_56_mid2_v_reg_1433_pp2_iter1_reg;
reg   [3:0] tmp_56_mid2_v_reg_1433_pp2_iter2_reg;
reg   [3:0] tmp_56_mid2_v_reg_1433_pp2_iter3_reg;
reg   [3:0] arrayNo4_reg_1440;
reg   [3:0] arrayNo4_reg_1440_pp2_iter1_reg;
reg   [3:0] arrayNo4_reg_1440_pp2_iter2_reg;
wire   [3:0] tmp_75_fu_918_p1;
reg   [3:0] tmp_75_reg_1445;
wire   [7:0] j_5_fu_922_p2;
reg   [7:0] j_5_reg_1451;
wire   [0:0] ifzero_fu_957_p2;
reg   [0:0] ifzero_reg_1537_pp2_iter2_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter3_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter4_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter5_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter6_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter7_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter8_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter9_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter10_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter11_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter12_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter13_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter14_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter15_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter16_reg;
reg   [0:0] ifzero_reg_1537_pp2_iter17_reg;
reg   [11:0] A_V_5_0_load_reg_1541;
reg    ap_enable_reg_pp2_iter2;
reg   [11:0] A_V_5_1_load_reg_1546;
reg   [11:0] A_V_5_2_load_reg_1551;
reg   [11:0] A_V_5_3_load_reg_1556;
reg   [11:0] A_V_5_4_load_reg_1561;
reg   [11:0] A_V_5_5_load_reg_1566;
reg   [11:0] A_V_5_6_load_reg_1571;
reg   [11:0] A_V_5_7_load_reg_1576;
reg   [11:0] B_V_5_0_load_reg_1581;
reg   [11:0] B_V_5_1_load_reg_1586;
reg   [11:0] B_V_5_2_load_reg_1591;
reg   [11:0] B_V_5_3_load_reg_1596;
reg   [11:0] B_V_5_4_load_reg_1601;
reg   [11:0] B_V_5_5_load_reg_1606;
reg   [11:0] B_V_5_6_load_reg_1611;
reg   [11:0] B_V_5_7_load_reg_1616;
wire  signed [30:0] grp_fu_1285_p3;
reg  signed [30:0] buf_V_reg_1636;
reg    ap_enable_reg_pp2_iter5;
reg   [11:0] bias_V_11_load_reg_1642;
(* use_dsp48 = "no" *) wire   [30:0] r_V_4_tr_fu_1015_p2;
reg   [30:0] r_V_4_tr_reg_1647;
reg   [0:0] tmp_76_reg_1652;
reg   [0:0] tmp_76_reg_1652_pp2_iter7_reg;
reg   [18:0] tmp_66_reg_1657;
reg   [18:0] tmp_66_reg_1657_pp2_iter7_reg;
reg   [18:0] tmp_64_reg_1662;
wire   [20:0] tmp_61_fu_1073_p3;
reg  signed [20:0] tmp_61_reg_1667;
wire  signed [29:0] grp_fu_1293_p2;
reg  signed [29:0] r_V_5_reg_1682;
reg   [0:0] tmp_77_reg_1688;
reg   [0:0] tmp_77_reg_1688_pp2_iter12_reg;
reg   [0:0] tmp_77_reg_1688_pp2_iter13_reg;
reg   [0:0] tmp_77_reg_1688_pp2_iter14_reg;
reg   [0:0] tmp_77_reg_1688_pp2_iter15_reg;
reg   [0:0] tmp_77_reg_1688_pp2_iter16_reg;
reg   [0:0] tmp_77_reg_1688_pp2_iter17_reg;
wire   [0:0] tmp_i_fu_1107_p2;
reg   [0:0] tmp_i_reg_1699;
reg   [0:0] tmp_i_reg_1699_pp2_iter13_reg;
reg   [0:0] tmp_i_reg_1699_pp2_iter14_reg;
reg   [0:0] tmp_i_reg_1699_pp2_iter15_reg;
reg   [0:0] tmp_i_reg_1699_pp2_iter16_reg;
reg   [0:0] tmp_i_reg_1699_pp2_iter17_reg;
wire   [60:0] grp_fu_1101_p2;
reg   [60:0] mul_reg_1704;
reg   [25:0] tmp_79_reg_1709;
reg   [25:0] tmp_79_reg_1709_pp2_iter17_reg;
reg   [25:0] tmp_78_reg_1714;
wire   [15:0] Outbuf_V_fu_1163_p3;
reg   [15:0] Outbuf_V_reg_1719;
wire   [0:0] exitcond_flatten_fu_1170_p2;
wire    ap_block_state46_pp3_stage0_iter0;
reg    ap_block_state47_pp3_stage0_iter1;
wire    ap_block_state48_pp3_stage0_iter2;
reg    ap_block_pp3_stage0_11001;
wire   [10:0] indvar_flatten_next_fu_1176_p2;
reg    ap_enable_reg_pp3_iter0;
wire   [3:0] i_mid2_fu_1194_p3;
reg   [3:0] i_mid2_reg_1733;
reg   [3:0] i_mid2_reg_1733_pp3_iter1_reg;
wire   [7:0] arrayNo3_cast_mid2_v_fu_1202_p3;
reg   [7:0] arrayNo3_cast_mid2_v_reg_1738;
reg   [3:0] arrayNo3_cast_mid2_reg_1743;
reg   [3:0] arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg;
wire   [3:0] tmp_69_fu_1220_p1;
reg   [3:0] tmp_69_reg_1747;
reg   [3:0] tmp_69_reg_1747_pp3_iter1_reg;
wire   [3:0] i_10_fu_1224_p2;
wire   [11:0] tmp_70_fu_1230_p1;
reg   [11:0] tmp_70_reg_1757;
wire   [0:0] exitcond2_fu_1252_p2;
reg   [0:0] exitcond2_reg_1769_pp4_iter1_reg;
wire   [3:0] i_8_fu_1258_p2;
reg   [3:0] i_8_reg_1773;
reg    ap_enable_reg_pp4_iter0;
wire   [11:0] tmp_71_fu_1264_p1;
reg   [11:0] tmp_71_reg_1778;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state17;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state21;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state24;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state25;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_enable_reg_pp2_iter18;
reg    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state46;
reg    ap_enable_reg_pp3_iter2;
wire    ap_CS_fsm_state49;
reg    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state50;
reg    ap_enable_reg_pp4_iter2;
reg   [14:0] num_img_reg_648;
wire    ap_CS_fsm_state45;
reg   [3:0] ap_phi_mux_i3_phi_fu_685_p4;
reg   [30:0] ap_phi_mux_p_3_phi_fu_696_p4;
reg   [7:0] ap_phi_mux_j4_phi_fu_708_p4;
reg   [7:0] ap_phi_mux_j_phi_fu_730_p4;
reg   [3:0] ap_phi_mux_i1_phi_fu_752_p4;
wire   [63:0] newIndex9_fu_857_p1;
wire   [63:0] tmp_59_fu_945_p1;
wire   [63:0] newIndex3_fu_928_p1;
wire   [63:0] tmp_56_mid2_fu_1001_p1;
wire   [63:0] tmp_56_fu_1240_p1;
wire   [63:0] tmp_50_fu_1268_p1;
reg    ap_block_state5;
reg    ap_block_state7;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp2_stage0_01001;
reg    ap_block_pp3_stage0_01001;
reg    ap_block_pp4_stage0_01001;
wire   [11:0] tmp_58_fu_779_p1;
wire    ap_CS_fsm_state11;
wire   [31:0] i5_cast_fu_797_p1;
wire   [15:0] num_img_cast_fu_812_p1;
wire   [3:0] i_11_fu_880_p2;
wire   [7:0] j4_mid2_fu_892_p3;
wire   [7:0] tmp_57_fu_939_p3;
wire   [31:0] arrayNo4_cast_fu_962_p1;
wire  signed [11:0] tmp_62_fu_965_p10;
wire  signed [11:0] tmp_63_fu_983_p10;
wire  signed [30:0] tmp_66_cast_fu_1012_p1;
wire   [30:0] p_neg_fu_1038_p2;
wire  signed [19:0] tmp_65_fu_1053_p1;
wire   [20:0] tmp_67_cast_fu_1056_p1;
wire  signed [19:0] tmp_67_fu_1060_p1;
wire   [20:0] tmp_60_fu_1063_p2;
wire   [20:0] tmp_69_cast_fu_1069_p1;
wire   [31:0] grp_fu_1101_p0;
wire   [60:0] neg_mul_fu_1122_p2;
wire   [25:0] p_v_v_fu_1137_p3;
wire   [15:0] tmp_80_fu_1142_p1;
wire   [15:0] neg_ti_fu_1146_p2;
wire   [15:0] tmp_81_fu_1152_p1;
wire   [15:0] tmp_68_fu_1156_p3;
wire   [0:0] exitcond_fu_1188_p2;
wire   [7:0] j_4_fu_1182_p2;
wire   [7:0] tmp_54_fu_1234_p3;
wire  signed [15:0] grp_fu_1273_p0;
wire  signed [15:0] grp_fu_1273_p1;
wire   [30:0] grp_fu_1285_p2;
reg    grp_fu_1101_ce;
reg    grp_fu_1273_ce;
wire    ap_CS_fsm_state9;
reg    grp_fu_1279_ce;
reg    grp_fu_1285_ce;
reg    grp_fu_1293_ce;
wire    ap_CS_fsm_state19;
reg   [26:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 27'd1;
#0 multiple_V_11 = 12'd0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
end

FC_128_8_s_bias_VXh4 #(
    .DataWidth( 12 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
bias_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(bias_V_11_address0),
    .ce0(bias_V_11_ce0),
    .we0(bias_V_11_we0),
    .d0(tmp_71_reg_1778),
    .q0(bias_V_11_q0)
);

FC_144_128_s_A_V_Bew #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_0_address0),
    .ce0(A_V_5_0_ce0),
    .q0(A_V_5_0_q0),
    .address1(A_V_5_0_address1),
    .ce1(A_V_5_0_ce1),
    .we1(A_V_5_0_we1),
    .d1(tmp_72_reg_1407)
);

FC_144_128_s_A_V_Bew #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_1_address0),
    .ce0(A_V_5_1_ce0),
    .q0(A_V_5_1_q0),
    .address1(A_V_5_1_address1),
    .ce1(A_V_5_1_ce1),
    .we1(A_V_5_1_we1),
    .d1(tmp_72_reg_1407)
);

FC_144_128_s_A_V_Bew #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_2_address0),
    .ce0(A_V_5_2_ce0),
    .q0(A_V_5_2_q0),
    .address1(A_V_5_2_address1),
    .ce1(A_V_5_2_ce1),
    .we1(A_V_5_2_we1),
    .d1(tmp_72_reg_1407)
);

FC_144_128_s_A_V_Bew #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_3_address0),
    .ce0(A_V_5_3_ce0),
    .q0(A_V_5_3_q0),
    .address1(A_V_5_3_address1),
    .ce1(A_V_5_3_ce1),
    .we1(A_V_5_3_we1),
    .d1(tmp_72_reg_1407)
);

FC_144_128_s_A_V_Bew #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_4_address0),
    .ce0(A_V_5_4_ce0),
    .q0(A_V_5_4_q0),
    .address1(A_V_5_4_address1),
    .ce1(A_V_5_4_ce1),
    .we1(A_V_5_4_we1),
    .d1(tmp_72_reg_1407)
);

FC_144_128_s_A_V_Bew #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_5_address0),
    .ce0(A_V_5_5_ce0),
    .q0(A_V_5_5_q0),
    .address1(A_V_5_5_address1),
    .ce1(A_V_5_5_ce1),
    .we1(A_V_5_5_we1),
    .d1(tmp_72_reg_1407)
);

FC_144_128_s_A_V_Bew #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_6_address0),
    .ce0(A_V_5_6_ce0),
    .q0(A_V_5_6_q0),
    .address1(A_V_5_6_address1),
    .ce1(A_V_5_6_ce1),
    .we1(A_V_5_6_we1),
    .d1(tmp_72_reg_1407)
);

FC_144_128_s_A_V_Bew #(
    .DataWidth( 12 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
A_V_5_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_V_5_7_address0),
    .ce0(A_V_5_7_ce0),
    .q0(A_V_5_7_q0),
    .address1(A_V_5_7_address1),
    .ce1(A_V_5_7_ce1),
    .we1(A_V_5_7_we1),
    .d1(tmp_72_reg_1407)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_0_address0),
    .ce0(B_V_5_0_ce0),
    .q0(B_V_5_0_q0),
    .address1(B_V_5_0_address1),
    .ce1(B_V_5_0_ce1),
    .we1(B_V_5_0_we1),
    .d1(tmp_70_reg_1757)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_1_address0),
    .ce0(B_V_5_1_ce0),
    .q0(B_V_5_1_q0),
    .address1(B_V_5_1_address1),
    .ce1(B_V_5_1_ce1),
    .we1(B_V_5_1_we1),
    .d1(tmp_70_reg_1757)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_2_address0),
    .ce0(B_V_5_2_ce0),
    .q0(B_V_5_2_q0),
    .address1(B_V_5_2_address1),
    .ce1(B_V_5_2_ce1),
    .we1(B_V_5_2_we1),
    .d1(tmp_70_reg_1757)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_3_address0),
    .ce0(B_V_5_3_ce0),
    .q0(B_V_5_3_q0),
    .address1(B_V_5_3_address1),
    .ce1(B_V_5_3_ce1),
    .we1(B_V_5_3_we1),
    .d1(tmp_70_reg_1757)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_4_address0),
    .ce0(B_V_5_4_ce0),
    .q0(B_V_5_4_q0),
    .address1(B_V_5_4_address1),
    .ce1(B_V_5_4_ce1),
    .we1(B_V_5_4_we1),
    .d1(tmp_70_reg_1757)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_5_address0),
    .ce0(B_V_5_5_ce0),
    .q0(B_V_5_5_q0),
    .address1(B_V_5_5_address1),
    .ce1(B_V_5_5_ce1),
    .we1(B_V_5_5_we1),
    .d1(tmp_70_reg_1757)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_6_address0),
    .ce0(B_V_5_6_ce0),
    .q0(B_V_5_6_q0),
    .address1(B_V_5_6_address1),
    .ce1(B_V_5_6_ce1),
    .we1(B_V_5_6_we1),
    .d1(tmp_70_reg_1757)
);

FC_128_8_s_B_V_5_0 #(
    .DataWidth( 12 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
B_V_5_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(B_V_5_7_address0),
    .ce0(B_V_5_7_ce0),
    .q0(B_V_5_7_q0),
    .address1(B_V_5_7_address1),
    .ce1(B_V_5_7_ce1),
    .we1(B_V_5_7_we1),
    .d1(tmp_70_reg_1757)
);

ultra_mul_32s_32sbkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ultra_mul_32s_32sbkb_U150(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp2_reg_1356),
    .din1(tmp1_reg_1351),
    .ce(1'b1),
    .dout(grp_fu_789_p2)
);

ultra_mux_832_12_Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 12 ))
ultra_mux_832_12_Yie_U151(
    .din0(A_V_5_0_load_reg_1541),
    .din1(A_V_5_1_load_reg_1546),
    .din2(A_V_5_2_load_reg_1551),
    .din3(A_V_5_3_load_reg_1556),
    .din4(A_V_5_4_load_reg_1561),
    .din5(A_V_5_5_load_reg_1566),
    .din6(A_V_5_6_load_reg_1571),
    .din7(A_V_5_7_load_reg_1576),
    .din8(arrayNo4_cast_fu_962_p1),
    .dout(tmp_62_fu_965_p10)
);

ultra_mux_832_12_Yie #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 12 ),
    .din5_WIDTH( 12 ),
    .din6_WIDTH( 12 ),
    .din7_WIDTH( 12 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 12 ))
ultra_mux_832_12_Yie_U152(
    .din0(B_V_5_0_load_reg_1581),
    .din1(B_V_5_1_load_reg_1586),
    .din2(B_V_5_2_load_reg_1591),
    .din3(B_V_5_3_load_reg_1596),
    .din4(B_V_5_4_load_reg_1601),
    .din5(B_V_5_5_load_reg_1606),
    .din6(B_V_5_6_load_reg_1611),
    .din7(B_V_5_7_load_reg_1616),
    .din8(arrayNo4_cast_fu_962_p1),
    .dout(tmp_63_fu_983_p10)
);

ultra_mul_32ns_30Zio #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 30 ),
    .dout_WIDTH( 61 ))
ultra_mul_32ns_30Zio_U153(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1101_p0),
    .din1(r_V_5_reg_1682),
    .ce(grp_fu_1101_ce),
    .dout(grp_fu_1101_p2)
);

ultra_mul_mul_16scud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
ultra_mul_mul_16scud_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1273_p0),
    .din1(grp_fu_1273_p1),
    .ce(grp_fu_1273_ce),
    .dout(grp_fu_1273_p2)
);

ultra_mul_mul_16scud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
ultra_mul_mul_16scud_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_V_48_reg_1316),
    .din1(tmp_V_52_reg_1321),
    .ce(grp_fu_1279_ce),
    .dout(grp_fu_1279_p2)
);

ultra_mac_muladd_VhK #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 31 ),
    .dout_WIDTH( 31 ))
ultra_mac_muladd_VhK_U156(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_62_fu_965_p10),
    .din1(tmp_63_fu_983_p10),
    .din2(grp_fu_1285_p2),
    .ce(grp_fu_1285_ce),
    .dout(grp_fu_1285_p3)
);

ultra_mul_mul_12s0iy #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 30 ))
ultra_mul_mul_12s0iy_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(multiple_V_11),
    .din1(tmp_61_reg_1667),
    .ce(grp_fu_1293_ce),
    .dout(grp_fu_1293_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state19)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state17))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state17);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_45_fu_816_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state21)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if (((tmp_45_fu_816_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state25) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state25)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state25);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
        end else if ((1'b1 == ap_CS_fsm_state24)) begin
            ap_enable_reg_pp2_iter19 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state46) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_760_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state46)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state46);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_760_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state50) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state49)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state50)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state50);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if ((1'b1 == ap_CS_fsm_state49)) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        i1_reg_748 <= 4'd0;
    end else if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond2_reg_1769 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i1_reg_748 <= i_8_reg_1773;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond4_fu_827_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i2_reg_659 <= i_1_fu_833_p2;
    end else if (((tmp_45_fu_816_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        i2_reg_659 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i3_reg_681 <= 4'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1419 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i3_reg_681 <= tmp_56_mid2_v_reg_1433;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_46_fu_801_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i5_reg_637 <= i_9_fu_806_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        i5_reg_637 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1170_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_reg_737 <= i_10_fu_1224_p2;
    end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_760_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_reg_737 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        indvar_flatten6_reg_670 <= 11'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_fu_868_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten6_reg_670 <= indvar_flatten_next7_fu_874_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1170_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        indvar_flatten_reg_715 <= indvar_flatten_next_fu_1176_p2;
    end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_760_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        indvar_flatten_reg_715 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        j4_reg_704 <= 8'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1419 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j4_reg_704 <= j_5_reg_1451;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1724 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        j_reg_726 <= arrayNo3_cast_mid2_v_reg_1738;
    end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_760_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        j_reg_726 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_43_fu_765_p2 == 1'd1) & (tmp_s_fu_760_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        num_img_reg_648 <= 15'd0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        num_img_reg_648 <= num_img_3_reg_1384;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        p_3_reg_692 <= 31'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1419_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        p_3_reg_692 <= buf_V_reg_1636;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1419_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        A_V_5_0_load_reg_1541 <= A_V_5_0_q0;
        A_V_5_1_load_reg_1546 <= A_V_5_1_q0;
        A_V_5_2_load_reg_1551 <= A_V_5_2_q0;
        A_V_5_3_load_reg_1556 <= A_V_5_3_q0;
        A_V_5_4_load_reg_1561 <= A_V_5_4_q0;
        A_V_5_5_load_reg_1566 <= A_V_5_5_q0;
        A_V_5_6_load_reg_1571 <= A_V_5_6_q0;
        A_V_5_7_load_reg_1576 <= A_V_5_7_q0;
        B_V_5_0_load_reg_1581 <= B_V_5_0_q0;
        B_V_5_1_load_reg_1586 <= B_V_5_1_q0;
        B_V_5_2_load_reg_1591 <= B_V_5_2_q0;
        B_V_5_3_load_reg_1596 <= B_V_5_3_q0;
        B_V_5_4_load_reg_1601 <= B_V_5_4_q0;
        B_V_5_5_load_reg_1606 <= B_V_5_5_q0;
        B_V_5_6_load_reg_1611 <= B_V_5_6_q0;
        B_V_5_7_load_reg_1616 <= B_V_5_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        KER_bound_reg_1366 <= KER_bound_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1537_pp2_iter17_reg == 1'd1))) begin
        Outbuf_V_reg_1719 <= Outbuf_V_fu_1163_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1170_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        arrayNo3_cast_mid2_reg_1743 <= {{arrayNo3_cast_mid2_v_fu_1202_p3[7:4]}};
        i_mid2_reg_1733 <= i_mid2_fu_1194_p3;
        tmp_69_reg_1747 <= tmp_69_fu_1220_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg <= arrayNo3_cast_mid2_reg_1743;
        exitcond_flatten_reg_1724 <= exitcond_flatten_fu_1170_p2;
        i_mid2_reg_1733_pp3_iter1_reg <= i_mid2_reg_1733;
        tmp_69_reg_1747_pp3_iter1_reg <= tmp_69_reg_1747;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_fu_1170_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        arrayNo3_cast_mid2_v_reg_1738 <= arrayNo3_cast_mid2_v_fu_1202_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_fu_868_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        arrayNo4_reg_1440 <= {{j4_mid2_fu_892_p3[7:4]}};
        exitcond5_reg_1428 <= exitcond5_fu_886_p2;
        tmp_75_reg_1445 <= tmp_75_fu_918_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        arrayNo4_reg_1440_pp2_iter1_reg <= arrayNo4_reg_1440;
        exitcond5_reg_1428_pp2_iter1_reg <= exitcond5_reg_1428;
        exitcond_flatten8_reg_1419 <= exitcond_flatten8_fu_868_p2;
        exitcond_flatten8_reg_1419_pp2_iter1_reg <= exitcond_flatten8_reg_1419;
        tmp_56_mid2_v_reg_1433_pp2_iter1_reg <= tmp_56_mid2_v_reg_1433;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        arrayNo4_reg_1440_pp2_iter2_reg <= arrayNo4_reg_1440_pp2_iter1_reg;
        exitcond5_reg_1428_pp2_iter2_reg <= exitcond5_reg_1428_pp2_iter1_reg;
        exitcond5_reg_1428_pp2_iter3_reg <= exitcond5_reg_1428_pp2_iter2_reg;
        exitcond5_reg_1428_pp2_iter4_reg <= exitcond5_reg_1428_pp2_iter3_reg;
        exitcond_flatten8_reg_1419_pp2_iter2_reg <= exitcond_flatten8_reg_1419_pp2_iter1_reg;
        exitcond_flatten8_reg_1419_pp2_iter3_reg <= exitcond_flatten8_reg_1419_pp2_iter2_reg;
        exitcond_flatten8_reg_1419_pp2_iter4_reg <= exitcond_flatten8_reg_1419_pp2_iter3_reg;
        exitcond_flatten8_reg_1419_pp2_iter5_reg <= exitcond_flatten8_reg_1419_pp2_iter4_reg;
        ifzero_reg_1537_pp2_iter10_reg <= ifzero_reg_1537_pp2_iter9_reg;
        ifzero_reg_1537_pp2_iter11_reg <= ifzero_reg_1537_pp2_iter10_reg;
        ifzero_reg_1537_pp2_iter12_reg <= ifzero_reg_1537_pp2_iter11_reg;
        ifzero_reg_1537_pp2_iter13_reg <= ifzero_reg_1537_pp2_iter12_reg;
        ifzero_reg_1537_pp2_iter14_reg <= ifzero_reg_1537_pp2_iter13_reg;
        ifzero_reg_1537_pp2_iter15_reg <= ifzero_reg_1537_pp2_iter14_reg;
        ifzero_reg_1537_pp2_iter16_reg <= ifzero_reg_1537_pp2_iter15_reg;
        ifzero_reg_1537_pp2_iter17_reg <= ifzero_reg_1537_pp2_iter16_reg;
        ifzero_reg_1537_pp2_iter18_reg <= ifzero_reg_1537_pp2_iter17_reg;
        ifzero_reg_1537_pp2_iter2_reg <= ifzero_reg_1537;
        ifzero_reg_1537_pp2_iter3_reg <= ifzero_reg_1537_pp2_iter2_reg;
        ifzero_reg_1537_pp2_iter4_reg <= ifzero_reg_1537_pp2_iter3_reg;
        ifzero_reg_1537_pp2_iter5_reg <= ifzero_reg_1537_pp2_iter4_reg;
        ifzero_reg_1537_pp2_iter6_reg <= ifzero_reg_1537_pp2_iter5_reg;
        ifzero_reg_1537_pp2_iter7_reg <= ifzero_reg_1537_pp2_iter6_reg;
        ifzero_reg_1537_pp2_iter8_reg <= ifzero_reg_1537_pp2_iter7_reg;
        ifzero_reg_1537_pp2_iter9_reg <= ifzero_reg_1537_pp2_iter8_reg;
        tmp_56_mid2_v_reg_1433_pp2_iter2_reg <= tmp_56_mid2_v_reg_1433_pp2_iter1_reg;
        tmp_56_mid2_v_reg_1433_pp2_iter3_reg <= tmp_56_mid2_v_reg_1433_pp2_iter2_reg;
        tmp_66_reg_1657_pp2_iter7_reg <= tmp_66_reg_1657;
        tmp_76_reg_1652_pp2_iter7_reg <= tmp_76_reg_1652;
        tmp_77_reg_1688_pp2_iter12_reg <= tmp_77_reg_1688;
        tmp_77_reg_1688_pp2_iter13_reg <= tmp_77_reg_1688_pp2_iter12_reg;
        tmp_77_reg_1688_pp2_iter14_reg <= tmp_77_reg_1688_pp2_iter13_reg;
        tmp_77_reg_1688_pp2_iter15_reg <= tmp_77_reg_1688_pp2_iter14_reg;
        tmp_77_reg_1688_pp2_iter16_reg <= tmp_77_reg_1688_pp2_iter15_reg;
        tmp_77_reg_1688_pp2_iter17_reg <= tmp_77_reg_1688_pp2_iter16_reg;
        tmp_79_reg_1709_pp2_iter17_reg <= tmp_79_reg_1709;
        tmp_i_reg_1699_pp2_iter13_reg <= tmp_i_reg_1699;
        tmp_i_reg_1699_pp2_iter14_reg <= tmp_i_reg_1699_pp2_iter13_reg;
        tmp_i_reg_1699_pp2_iter15_reg <= tmp_i_reg_1699_pp2_iter14_reg;
        tmp_i_reg_1699_pp2_iter16_reg <= tmp_i_reg_1699_pp2_iter15_reg;
        tmp_i_reg_1699_pp2_iter17_reg <= tmp_i_reg_1699_pp2_iter16_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond4_fu_827_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        arrayNo_cast_reg_1398 <= {{i2_reg_659[7:4]}};
        tmp_73_reg_1402 <= tmp_73_fu_849_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        arrayNo_cast_reg_1398_pp1_iter1_reg <= arrayNo_cast_reg_1398;
        tmp_72_reg_1407 <= tmp_72_fu_853_p1;
        tmp_73_reg_1402_pp1_iter1_reg <= tmp_73_reg_1402;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1537_pp2_iter4_reg == 1'd1) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        bias_V_11_load_reg_1642 <= bias_V_11_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1419_pp2_iter4_reg == 1'd0) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        buf_V_reg_1636 <= grp_fu_1285_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        exitcond2_reg_1769 <= exitcond2_fu_1252_p2;
        exitcond2_reg_1769_pp4_iter1_reg <= exitcond2_reg_1769;
        i1_reg_748_pp4_iter1_reg <= i1_reg_748;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        i_8_reg_1773 <= i_8_fu_1258_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_reg_1419 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ifzero_reg_1537 <= ifzero_fu_957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (exitcond_flatten8_fu_868_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j_5_reg_1451 <= j_5_fu_922_p2;
        tmp_56_mid2_v_reg_1433 <= tmp_56_mid2_v_fu_900_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_43_fu_765_p2 == 1'd0) & (tmp_s_fu_760_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        lhs_V_reg_1334 <= lhs_V_fu_770_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1537_pp2_iter15_reg == 1'd1))) begin
        mul_reg_1704 <= grp_fu_1101_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_760_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        multiple_V_11 <= tmp_58_fu_779_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        num_img_3_reg_1384 <= num_img_3_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p_s_reg_1361 <= grp_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1537_pp2_iter5_reg == 1'd1))) begin
        r_V_4_tr_reg_1647 <= r_V_4_tr_fu_1015_p2;
        tmp_66_reg_1657 <= {{r_V_4_tr_fu_1015_p2[30:12]}};
        tmp_76_reg_1652 <= r_V_4_tr_fu_1015_p2[32'd30];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1537_pp2_iter10_reg == 1'd1))) begin
        r_V_5_reg_1682 <= grp_fu_1293_p2;
        tmp_77_reg_1688 <= grp_fu_1293_p2[32'd29];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp1_reg_1351 <= grp_fu_1273_p2;
        tmp2_reg_1356 <= grp_fu_1279_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_46_reg_1371 <= tmp_46_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1537_pp2_iter7_reg == 1'd1))) begin
        tmp_61_reg_1667 <= tmp_61_fu_1073_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_76_reg_1652 == 1'd1) & (ifzero_reg_1537_pp2_iter6_reg == 1'd1))) begin
        tmp_64_reg_1662 <= {{p_neg_fu_1038_p2[30:12]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1724 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_70_reg_1757 <= tmp_70_fu_1230_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond2_reg_1769 == 1'd0) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        tmp_71_reg_1778 <= tmp_71_fu_1264_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_77_reg_1688_pp2_iter16_reg == 1'd1) & (ifzero_reg_1537_pp2_iter16_reg == 1'd1) & (tmp_i_reg_1699_pp2_iter16_reg == 1'd0))) begin
        tmp_78_reg_1714 <= {{neg_mul_fu_1122_p2[60:35]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1537_pp2_iter15_reg == 1'd1) & (tmp_i_reg_1699_pp2_iter15_reg == 1'd0) & (tmp_77_reg_1688_pp2_iter15_reg == 1'd0))) begin
        tmp_79_reg_1709 <= {{grp_fu_1101_p2[60:35]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_44_reg_1306 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_46_reg_1311 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_48_reg_1316 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_52_reg_1321 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_V_reg_1300 <= stream_in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1537_pp2_iter11_reg == 1'd1))) begin
        tmp_i_reg_1699 <= tmp_i_fu_1107_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_0_ce0 = 1'b1;
    end else begin
        A_V_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_0_ce1 = 1'b1;
    end else begin
        A_V_5_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_0_we1 = 1'b1;
    end else begin
        A_V_5_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_1_ce0 = 1'b1;
    end else begin
        A_V_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_1_ce1 = 1'b1;
    end else begin
        A_V_5_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_1_we1 = 1'b1;
    end else begin
        A_V_5_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_2_ce0 = 1'b1;
    end else begin
        A_V_5_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_2_ce1 = 1'b1;
    end else begin
        A_V_5_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_2_we1 = 1'b1;
    end else begin
        A_V_5_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_3_ce0 = 1'b1;
    end else begin
        A_V_5_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_3_ce1 = 1'b1;
    end else begin
        A_V_5_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_3_we1 = 1'b1;
    end else begin
        A_V_5_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_4_ce0 = 1'b1;
    end else begin
        A_V_5_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_4_ce1 = 1'b1;
    end else begin
        A_V_5_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd4) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_4_we1 = 1'b1;
    end else begin
        A_V_5_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_5_ce0 = 1'b1;
    end else begin
        A_V_5_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_5_ce1 = 1'b1;
    end else begin
        A_V_5_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd5) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_5_we1 = 1'b1;
    end else begin
        A_V_5_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_6_ce0 = 1'b1;
    end else begin
        A_V_5_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_6_ce1 = 1'b1;
    end else begin
        A_V_5_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd6) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_6_we1 = 1'b1;
    end else begin
        A_V_5_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        A_V_5_7_ce0 = 1'b1;
    end else begin
        A_V_5_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_7_ce1 = 1'b1;
    end else begin
        A_V_5_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd0) & ~(arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd1) & ~(arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd2) & ~(arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd3) & ~(arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd4) & ~(arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd5) & ~(arrayNo_cast_reg_1398_pp1_iter1_reg == 4'd6) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        A_V_5_7_we1 = 1'b1;
    end else begin
        A_V_5_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_0_ce0 = 1'b1;
    end else begin
        B_V_5_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_0_ce1 = 1'b1;
    end else begin
        B_V_5_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_0_we1 = 1'b1;
    end else begin
        B_V_5_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_1_ce0 = 1'b1;
    end else begin
        B_V_5_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_1_ce1 = 1'b1;
    end else begin
        B_V_5_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd1) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_1_we1 = 1'b1;
    end else begin
        B_V_5_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_2_ce0 = 1'b1;
    end else begin
        B_V_5_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_2_ce1 = 1'b1;
    end else begin
        B_V_5_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd2) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_2_we1 = 1'b1;
    end else begin
        B_V_5_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_3_ce0 = 1'b1;
    end else begin
        B_V_5_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_3_ce1 = 1'b1;
    end else begin
        B_V_5_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd3) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_3_we1 = 1'b1;
    end else begin
        B_V_5_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_4_ce0 = 1'b1;
    end else begin
        B_V_5_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_4_ce1 = 1'b1;
    end else begin
        B_V_5_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd4) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_4_we1 = 1'b1;
    end else begin
        B_V_5_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_5_ce0 = 1'b1;
    end else begin
        B_V_5_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_5_ce1 = 1'b1;
    end else begin
        B_V_5_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd5) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_5_we1 = 1'b1;
    end else begin
        B_V_5_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_6_ce0 = 1'b1;
    end else begin
        B_V_5_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_6_ce1 = 1'b1;
    end else begin
        B_V_5_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd6) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_6_we1 = 1'b1;
    end else begin
        B_V_5_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        B_V_5_7_ce0 = 1'b1;
    end else begin
        B_V_5_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_7_ce1 = 1'b1;
    end else begin
        B_V_5_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd6) & ~(arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd5) & ~(arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd4) & ~(arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd3) & ~(arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd2) & ~(arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd1) & ~(arrayNo3_cast_mid2_reg_1743_pp3_iter1_reg == 4'd0) & (1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        B_V_5_7_we1 = 1'b1;
    end else begin
        B_V_5_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_46_fu_801_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond4_fu_827_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten8_fu_868_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_1170_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state46 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state46 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond2_fu_1252_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state50 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state50 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (exitcond2_reg_1769 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        ap_phi_mux_i1_phi_fu_752_p4 = i_8_reg_1773;
    end else begin
        ap_phi_mux_i1_phi_fu_752_p4 = i1_reg_748;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond_flatten8_reg_1419 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i3_phi_fu_685_p4 = tmp_56_mid2_v_reg_1433;
    end else begin
        ap_phi_mux_i3_phi_fu_685_p4 = i3_reg_681;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond_flatten8_reg_1419 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_j4_phi_fu_708_p4 = j_5_reg_1451;
    end else begin
        ap_phi_mux_j4_phi_fu_708_p4 = j4_reg_704;
    end
end

always @ (*) begin
    if (((exitcond_flatten_reg_1724 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_j_phi_fu_730_p4 = arrayNo3_cast_mid2_v_reg_1738;
    end else begin
        ap_phi_mux_j_phi_fu_730_p4 = j_reg_726;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (exitcond_flatten8_reg_1419_pp2_iter5_reg == 1'd0) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        ap_phi_mux_p_3_phi_fu_696_p4 = buf_V_reg_1636;
    end else begin
        ap_phi_mux_p_3_phi_fu_696_p4 = p_3_reg_692;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        bias_V_11_address0 = tmp_50_fu_1268_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        bias_V_11_address0 = tmp_56_mid2_fu_1001_p1;
    end else begin
        bias_V_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
        bias_V_11_ce0 = 1'b1;
    end else begin
        bias_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (exitcond2_reg_1769_pp4_iter1_reg == 1'd0) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        bias_V_11_we0 = 1'b1;
    end else begin
        bias_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1101_ce = 1'b1;
    end else begin
        grp_fu_1101_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_fu_1273_ce = 1'b1;
    end else begin
        grp_fu_1273_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        grp_fu_1279_ce = 1'b1;
    end else begin
        grp_fu_1279_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1285_ce = 1'b1;
    end else begin
        grp_fu_1285_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1293_ce = 1'b1;
    end else begin
        grp_fu_1293_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_46_reg_1371 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp4_stage0) & (exitcond2_reg_1769 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((exitcond_flatten_reg_1724 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        stream_in_V_V_blk_n = stream_in_V_V_empty_n;
    end else begin
        stream_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_46_reg_1371 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (exitcond2_reg_1769 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1724 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_in_V_V_read = 1'b1;
    end else begin
        stream_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp2_stage0) & (ifzero_reg_1537_pp2_iter18_reg == 1'd1) & (ap_enable_reg_pp2_iter19 == 1'b1)) | ((tmp_46_reg_1371 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp4_stage0) & (exitcond2_reg_1769 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((exitcond_flatten_reg_1724 == 1'd0) & (1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
        stream_out_V_V_blk_n = stream_out_V_V_full_n;
    end else begin
        stream_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ifzero_reg_1537_pp2_iter18_reg == 1'd1) & (ap_enable_reg_pp2_iter19 == 1'b1) & (1'b0 == ap_block_pp2_stage0_01001))) begin
        stream_out_V_V_din = Outbuf_V_reg_1719;
    end else if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((tmp_46_reg_1371 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001)) | ((exitcond2_reg_1769 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_01001)) | ((exitcond_flatten_reg_1724 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_01001)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_din = stream_in_V_V_dout;
    end else begin
        stream_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ifzero_reg_1537_pp2_iter18_reg == 1'd1) & (ap_enable_reg_pp2_iter19 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (tmp_46_reg_1371 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp4_stage0_11001) & (exitcond2_reg_1769 == 1'd0) & (ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0)) | ((1'b0 == ap_block_pp3_stage0_11001) & (exitcond_flatten_reg_1724 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)))) begin
        stream_out_V_V_write = 1'b1;
    end else begin
        stream_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_s_fu_760_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_43_fu_765_p2 == 1'd1) & (tmp_s_fu_760_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if ((~((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0)) & (tmp_43_fu_765_p2 == 1'd0) & (tmp_s_fu_760_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_46_fu_801_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_46_fu_801_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state20 : begin
            if (((tmp_45_fu_816_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond4_fu_827_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (exitcond4_fu_827_p2 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten8_fu_868_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter18 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter19 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (exitcond_flatten8_fu_868_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter18 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter19 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond_flatten_fu_1170_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (exitcond_flatten_fu_1170_p2 == 1'd1) & (ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (exitcond2_fu_1252_p2 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (exitcond2_fu_1252_p2 == 1'd1) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_V_5_0_address0 = newIndex3_fu_928_p1;

assign A_V_5_0_address1 = newIndex9_fu_857_p1;

assign A_V_5_1_address0 = newIndex3_fu_928_p1;

assign A_V_5_1_address1 = newIndex9_fu_857_p1;

assign A_V_5_2_address0 = newIndex3_fu_928_p1;

assign A_V_5_2_address1 = newIndex9_fu_857_p1;

assign A_V_5_3_address0 = newIndex3_fu_928_p1;

assign A_V_5_3_address1 = newIndex9_fu_857_p1;

assign A_V_5_4_address0 = newIndex3_fu_928_p1;

assign A_V_5_4_address1 = newIndex9_fu_857_p1;

assign A_V_5_5_address0 = newIndex3_fu_928_p1;

assign A_V_5_5_address1 = newIndex9_fu_857_p1;

assign A_V_5_6_address0 = newIndex3_fu_928_p1;

assign A_V_5_6_address1 = newIndex9_fu_857_p1;

assign A_V_5_7_address0 = newIndex3_fu_928_p1;

assign A_V_5_7_address1 = newIndex9_fu_857_p1;

assign B_V_5_0_address0 = tmp_59_fu_945_p1;

assign B_V_5_0_address1 = tmp_56_fu_1240_p1;

assign B_V_5_1_address0 = tmp_59_fu_945_p1;

assign B_V_5_1_address1 = tmp_56_fu_1240_p1;

assign B_V_5_2_address0 = tmp_59_fu_945_p1;

assign B_V_5_2_address1 = tmp_56_fu_1240_p1;

assign B_V_5_3_address0 = tmp_59_fu_945_p1;

assign B_V_5_3_address1 = tmp_56_fu_1240_p1;

assign B_V_5_4_address0 = tmp_59_fu_945_p1;

assign B_V_5_4_address1 = tmp_56_fu_1240_p1;

assign B_V_5_5_address0 = tmp_59_fu_945_p1;

assign B_V_5_5_address1 = tmp_56_fu_1240_p1;

assign B_V_5_6_address0 = tmp_59_fu_945_p1;

assign B_V_5_6_address1 = tmp_56_fu_1240_p1;

assign B_V_5_7_address0 = tmp_59_fu_945_p1;

assign B_V_5_7_address1 = tmp_56_fu_1240_p1;

assign KER_bound_fu_793_p2 = ($signed(p_s_reg_1361) + $signed(lhs_V_reg_1334));

assign Outbuf_V_fu_1163_p3 = ((tmp_i_reg_1699_pp2_iter17_reg[0:0] === 1'b1) ? 16'd0 : tmp_68_fu_1156_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_46_reg_1371 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_46_reg_1371 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_46_reg_1371 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_46_reg_1371 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((tmp_46_reg_1371 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_46_reg_1371 == 1'd1) & (stream_in_V_V_empty_n == 1'b0))));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((stream_in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((stream_in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = ((ifzero_reg_1537_pp2_iter18_reg == 1'd1) & (stream_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((ifzero_reg_1537_pp2_iter18_reg == 1'd1) & (stream_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((ifzero_reg_1537_pp2_iter18_reg == 1'd1) & (stream_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b1));
end

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp3_stage0_01001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((exitcond_flatten_reg_1724 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1724 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_11001 = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((exitcond_flatten_reg_1724 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1724 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp3_stage0_subdone = ((ap_enable_reg_pp3_iter1 == 1'b1) & (((exitcond_flatten_reg_1724 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1724 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp4_stage0_01001 = ((ap_enable_reg_pp4_iter1 == 1'b1) & (((exitcond2_reg_1769 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond2_reg_1769 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp4_stage0_11001 = ((ap_enable_reg_pp4_iter1 == 1'b1) & (((exitcond2_reg_1769 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond2_reg_1769 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp4_stage0_subdone = ((ap_enable_reg_pp4_iter1 == 1'b1) & (((exitcond2_reg_1769 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond2_reg_1769 == 1'd0) & (stream_in_V_V_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0) | (real_start == 1'b0));
end

assign ap_block_state17_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp0_stage0_iter1 = (((tmp_46_reg_1371 == 1'd1) & (stream_out_V_V_full_n == 1'b0)) | ((tmp_46_reg_1371 == 1'd1) & (stream_in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state21_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp1_stage0_iter1 = (stream_in_V_V_empty_n == 1'b0);
end

assign ap_block_state23_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state30_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state40_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state44_pp2_stage0_iter19 = ((ifzero_reg_1537_pp2_iter18_reg == 1'd1) & (stream_out_V_V_full_n == 1'b0));
end

assign ap_block_state46_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state47_pp3_stage0_iter1 = (((exitcond_flatten_reg_1724 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond_flatten_reg_1724 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)));
end

assign ap_block_state48_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_block_state50_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state51_pp4_stage0_iter1 = (((exitcond2_reg_1769 == 1'd0) & (stream_out_V_V_full_n == 1'b0)) | ((exitcond2_reg_1769 == 1'd0) & (stream_in_V_V_empty_n == 1'b0)));
end

assign ap_block_state52_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((stream_out_V_V_full_n == 1'b0) | (stream_in_V_V_empty_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign arrayNo3_cast_mid2_v_fu_1202_p3 = ((exitcond_fu_1188_p2[0:0] === 1'b1) ? j_4_fu_1182_p2 : ap_phi_mux_j_phi_fu_730_p4);

assign arrayNo4_cast_fu_962_p1 = arrayNo4_reg_1440_pp2_iter2_reg;

assign exitcond2_fu_1252_p2 = ((ap_phi_mux_i1_phi_fu_752_p4 == 4'd8) ? 1'b1 : 1'b0);

assign exitcond4_fu_827_p2 = ((i2_reg_659 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond5_fu_886_p2 = ((ap_phi_mux_j4_phi_fu_708_p4 == 8'd128) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_868_p2 = ((indvar_flatten6_reg_670 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_1170_p2 = ((indvar_flatten_reg_715 == 11'd1024) ? 1'b1 : 1'b0);

assign exitcond_fu_1188_p2 = ((i_reg_737 == 4'd8) ? 1'b1 : 1'b0);

assign grp_fu_1101_p0 = 61'd1717986919;

assign grp_fu_1273_p0 = tmp_44_fu_776_p1;

assign grp_fu_1273_p1 = tmp_44_fu_776_p1;

assign grp_fu_1285_p2 = ((exitcond5_reg_1428_pp2_iter4_reg[0:0] === 1'b1) ? 31'd0 : ap_phi_mux_p_3_phi_fu_696_p4);

assign i5_cast_fu_797_p1 = i5_reg_637;

assign i_10_fu_1224_p2 = (i_mid2_fu_1194_p3 + 4'd1);

assign i_11_fu_880_p2 = (4'd1 + ap_phi_mux_i3_phi_fu_685_p4);

assign i_1_fu_833_p2 = (i2_reg_659 + 8'd1);

assign i_8_fu_1258_p2 = (ap_phi_mux_i1_phi_fu_752_p4 + 4'd1);

assign i_9_fu_806_p2 = (i5_reg_637 + 31'd1);

assign i_mid2_fu_1194_p3 = ((exitcond_fu_1188_p2[0:0] === 1'b1) ? 4'd0 : i_reg_737);

assign ifzero_fu_957_p2 = ((j_5_reg_1451 == 8'd128) ? 1'b1 : 1'b0);

assign indvar_flatten_next7_fu_874_p2 = (indvar_flatten6_reg_670 + 11'd1);

assign indvar_flatten_next_fu_1176_p2 = (indvar_flatten_reg_715 + 11'd1);

assign j4_mid2_fu_892_p3 = ((exitcond5_fu_886_p2[0:0] === 1'b1) ? 8'd0 : ap_phi_mux_j4_phi_fu_708_p4);

assign j_4_fu_1182_p2 = (8'd1 + ap_phi_mux_j_phi_fu_730_p4);

assign j_5_fu_922_p2 = (8'd1 + j4_mid2_fu_892_p3);

assign lhs_V_fu_770_p1 = tmp_V_52_reg_1321;

assign neg_mul_fu_1122_p2 = (61'd0 - mul_reg_1704);

assign neg_ti_fu_1146_p2 = (16'd0 - tmp_80_fu_1142_p1);

assign newIndex3_fu_928_p1 = tmp_75_reg_1445;

assign newIndex9_fu_857_p1 = tmp_73_reg_1402_pp1_iter1_reg;

assign num_img_3_fu_821_p2 = (num_img_reg_648 + 15'd1);

assign num_img_cast_fu_812_p1 = num_img_reg_648;

assign p_neg_fu_1038_p2 = (31'd0 - r_V_4_tr_reg_1647);

assign p_v_v_fu_1137_p3 = ((tmp_77_reg_1688_pp2_iter17_reg[0:0] === 1'b1) ? tmp_78_reg_1714 : tmp_79_reg_1709_pp2_iter17_reg);

assign r_V_4_tr_fu_1015_p2 = ($signed(tmp_66_cast_fu_1012_p1) + $signed(buf_V_reg_1636));

assign start_out = real_start;

assign tmp_43_fu_765_p2 = ((tmp_V_reg_1300 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_44_fu_776_p1 = tmp_V_46_reg_1311;

assign tmp_45_fu_816_p2 = (($signed(num_img_cast_fu_812_p1) < $signed(tmp_V_44_reg_1306)) ? 1'b1 : 1'b0);

assign tmp_46_fu_801_p2 = (($signed(i5_cast_fu_797_p1) < $signed(KER_bound_reg_1366)) ? 1'b1 : 1'b0);

assign tmp_50_fu_1268_p1 = i1_reg_748_pp4_iter1_reg;

assign tmp_54_fu_1234_p3 = {{i_mid2_reg_1733_pp3_iter1_reg}, {tmp_69_reg_1747_pp3_iter1_reg}};

assign tmp_56_fu_1240_p1 = tmp_54_fu_1234_p3;

assign tmp_56_mid2_fu_1001_p1 = tmp_56_mid2_v_reg_1433_pp2_iter3_reg;

assign tmp_56_mid2_v_fu_900_p3 = ((exitcond5_fu_886_p2[0:0] === 1'b1) ? i_11_fu_880_p2 : ap_phi_mux_i3_phi_fu_685_p4);

assign tmp_57_fu_939_p3 = {{tmp_56_mid2_v_reg_1433}, {tmp_75_reg_1445}};

assign tmp_58_fu_779_p1 = stream_in_V_V_dout[11:0];

assign tmp_59_fu_945_p1 = tmp_57_fu_939_p3;

assign tmp_60_fu_1063_p2 = (21'd0 - tmp_67_cast_fu_1056_p1);

assign tmp_61_fu_1073_p3 = ((tmp_76_reg_1652_pp2_iter7_reg[0:0] === 1'b1) ? tmp_60_fu_1063_p2 : tmp_69_cast_fu_1069_p1);

assign tmp_65_fu_1053_p1 = $signed(tmp_64_reg_1662);

assign tmp_66_cast_fu_1012_p1 = $signed(bias_V_11_load_reg_1642);

assign tmp_67_cast_fu_1056_p1 = $unsigned(tmp_65_fu_1053_p1);

assign tmp_67_fu_1060_p1 = $signed(tmp_66_reg_1657_pp2_iter7_reg);

assign tmp_68_fu_1156_p3 = ((tmp_77_reg_1688_pp2_iter17_reg[0:0] === 1'b1) ? neg_ti_fu_1146_p2 : tmp_81_fu_1152_p1);

assign tmp_69_cast_fu_1069_p1 = $unsigned(tmp_67_fu_1060_p1);

assign tmp_69_fu_1220_p1 = arrayNo3_cast_mid2_v_fu_1202_p3[3:0];

assign tmp_70_fu_1230_p1 = stream_in_V_V_dout[11:0];

assign tmp_71_fu_1264_p1 = stream_in_V_V_dout[11:0];

assign tmp_72_fu_853_p1 = stream_in_V_V_dout[11:0];

assign tmp_73_fu_849_p1 = i2_reg_659[3:0];

assign tmp_75_fu_918_p1 = j4_mid2_fu_892_p3[3:0];

assign tmp_80_fu_1142_p1 = p_v_v_fu_1137_p3[15:0];

assign tmp_81_fu_1152_p1 = p_v_v_fu_1137_p3[15:0];

assign tmp_i_fu_1107_p2 = (($signed(r_V_5_reg_1682) < $signed(30'd1073741805)) ? 1'b1 : 1'b0);

assign tmp_s_fu_760_p2 = ((tmp_V_reg_1300 == 16'd7) ? 1'b1 : 1'b0);

endmodule //FC_128_8_s
