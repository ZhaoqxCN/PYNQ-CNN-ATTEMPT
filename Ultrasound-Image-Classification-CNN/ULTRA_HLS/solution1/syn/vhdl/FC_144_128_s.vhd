-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FC_144_128_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    stream_in_V_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    stream_in_V_V_empty_n : IN STD_LOGIC;
    stream_in_V_V_read : OUT STD_LOGIC;
    stream_out_V_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    stream_out_V_V_full_n : IN STD_LOGIC;
    stream_out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of FC_144_128_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv16_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000110";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv8_90 : STD_LOGIC_VECTOR (7 downto 0) := "10010000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv15_4800 : STD_LOGIC_VECTOR (14 downto 0) := "100100000000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv63_CCCCCCCD : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000011001100110011001100110011001101";
    constant ap_const_lv31_7FFFFFED : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111101101";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal multiple_V_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal bias_V_10_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal bias_V_10_ce0 : STD_LOGIC;
    signal bias_V_10_we0 : STD_LOGIC;
    signal bias_V_10_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_0_ce0 : STD_LOGIC;
    signal A_V_6_0_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_0_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_0_ce1 : STD_LOGIC;
    signal A_V_6_0_we1 : STD_LOGIC;
    signal A_V_6_1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_1_ce0 : STD_LOGIC;
    signal A_V_6_1_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_1_ce1 : STD_LOGIC;
    signal A_V_6_1_we1 : STD_LOGIC;
    signal A_V_6_2_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_2_ce0 : STD_LOGIC;
    signal A_V_6_2_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_2_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_2_ce1 : STD_LOGIC;
    signal A_V_6_2_we1 : STD_LOGIC;
    signal A_V_6_3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_3_ce0 : STD_LOGIC;
    signal A_V_6_3_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_3_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_3_ce1 : STD_LOGIC;
    signal A_V_6_3_we1 : STD_LOGIC;
    signal A_V_6_4_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_4_ce0 : STD_LOGIC;
    signal A_V_6_4_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_4_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_4_ce1 : STD_LOGIC;
    signal A_V_6_4_we1 : STD_LOGIC;
    signal A_V_6_5_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_5_ce0 : STD_LOGIC;
    signal A_V_6_5_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_5_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_5_ce1 : STD_LOGIC;
    signal A_V_6_5_we1 : STD_LOGIC;
    signal A_V_6_6_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_6_ce0 : STD_LOGIC;
    signal A_V_6_6_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_6_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_6_ce1 : STD_LOGIC;
    signal A_V_6_6_we1 : STD_LOGIC;
    signal A_V_6_7_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_7_ce0 : STD_LOGIC;
    signal A_V_6_7_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_7_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_7_ce1 : STD_LOGIC;
    signal A_V_6_7_we1 : STD_LOGIC;
    signal A_V_6_8_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_8_ce0 : STD_LOGIC;
    signal A_V_6_8_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_8_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_V_6_8_ce1 : STD_LOGIC;
    signal A_V_6_8_we1 : STD_LOGIC;
    signal B_V_6_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_0_ce0 : STD_LOGIC;
    signal B_V_6_0_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_0_ce1 : STD_LOGIC;
    signal B_V_6_0_we1 : STD_LOGIC;
    signal B_V_6_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_1_ce0 : STD_LOGIC;
    signal B_V_6_1_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_1_ce1 : STD_LOGIC;
    signal B_V_6_1_we1 : STD_LOGIC;
    signal B_V_6_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_2_ce0 : STD_LOGIC;
    signal B_V_6_2_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_2_ce1 : STD_LOGIC;
    signal B_V_6_2_we1 : STD_LOGIC;
    signal B_V_6_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_3_ce0 : STD_LOGIC;
    signal B_V_6_3_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_3_ce1 : STD_LOGIC;
    signal B_V_6_3_we1 : STD_LOGIC;
    signal B_V_6_4_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_4_ce0 : STD_LOGIC;
    signal B_V_6_4_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_4_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_4_ce1 : STD_LOGIC;
    signal B_V_6_4_we1 : STD_LOGIC;
    signal B_V_6_5_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_5_ce0 : STD_LOGIC;
    signal B_V_6_5_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_5_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_5_ce1 : STD_LOGIC;
    signal B_V_6_5_we1 : STD_LOGIC;
    signal B_V_6_6_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_6_ce0 : STD_LOGIC;
    signal B_V_6_6_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_6_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_6_ce1 : STD_LOGIC;
    signal B_V_6_6_we1 : STD_LOGIC;
    signal B_V_6_7_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_7_ce0 : STD_LOGIC;
    signal B_V_6_7_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_7_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_7_ce1 : STD_LOGIC;
    signal B_V_6_7_we1 : STD_LOGIC;
    signal B_V_6_8_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_8_ce0 : STD_LOGIC;
    signal B_V_6_8_q0 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_8_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal B_V_6_8_ce1 : STD_LOGIC;
    signal B_V_6_8_we1 : STD_LOGIC;
    signal stream_in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal exitcond_flatten_reg_1799 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal exitcond6_reg_1845 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_24_reg_1425 : STD_LOGIC_VECTOR (0 downto 0);
    signal stream_out_V_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp2_iter19 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ifzero_reg_1602 : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i5_reg_685 : STD_LOGIC_VECTOR (30 downto 0);
    signal i2_reg_707 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten6_reg_718 : STD_LOGIC_VECTOR (14 downto 0);
    signal i3_reg_729 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_2_reg_740 : STD_LOGIC_VECTOR (30 downto 0);
    signal j4_reg_752 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten_reg_763 : STD_LOGIC_VECTOR (14 downto 0);
    signal j_reg_774 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_785 : STD_LOGIC_VECTOR (7 downto 0);
    signal i1_reg_796 : STD_LOGIC_VECTOR (7 downto 0);
    signal i1_reg_796_pp4_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state50_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state51_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state52_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal tmp_V_reg_1354 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_V_21_reg_1360 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state2 : BOOLEAN;
    signal tmp_V_23_reg_1365 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal tmp_V_25_reg_1370 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state4 : BOOLEAN;
    signal tmp_V_29_reg_1375 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state6 : BOOLEAN;
    signal tmp_s_fu_808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8 : BOOLEAN;
    signal tmp_21_fu_813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_818_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lhs_V_reg_1388 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_824_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1327_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_reg_1405 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fu_1333_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_1410 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_s_reg_1415 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal KER_bound_fu_841_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal KER_bound_reg_1420 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal tmp_24_fu_849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state17_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_4_fu_854_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_23_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal num_img_2_fu_869_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal num_img_2_reg_1438 : STD_LOGIC_VECTOR (14 downto 0);
    signal exitcond8_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state21_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal i_6_fu_881_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal arrayNo_cast_reg_1452 : STD_LOGIC_VECTOR (3 downto 0);
    signal arrayNo_cast_reg_1452_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_48_fu_897_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_48_reg_1456 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_48_reg_1456_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_47_fu_901_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_47_reg_1461 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond_flatten8_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten8_reg_1474 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state25_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state26_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state27_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state28_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state29_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state30_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state31_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state32_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_state33_pp2_stage0_iter8 : BOOLEAN;
    signal ap_block_state34_pp2_stage0_iter9 : BOOLEAN;
    signal ap_block_state35_pp2_stage0_iter10 : BOOLEAN;
    signal ap_block_state36_pp2_stage0_iter11 : BOOLEAN;
    signal ap_block_state37_pp2_stage0_iter12 : BOOLEAN;
    signal ap_block_state38_pp2_stage0_iter13 : BOOLEAN;
    signal ap_block_state39_pp2_stage0_iter14 : BOOLEAN;
    signal ap_block_state40_pp2_stage0_iter15 : BOOLEAN;
    signal ap_block_state41_pp2_stage0_iter16 : BOOLEAN;
    signal ap_block_state42_pp2_stage0_iter17 : BOOLEAN;
    signal ap_block_state43_pp2_stage0_iter18 : BOOLEAN;
    signal ap_block_state44_pp2_stage0_iter19 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal exitcond_flatten8_reg_1474_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten8_reg_1474_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten8_reg_1474_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten8_reg_1474_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_flatten8_reg_1474_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_next7_fu_923_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal exitcond3_fu_935_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_1483 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_1483_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_1483_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_1483_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond3_reg_1483_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_mid2_v_fu_949_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_mid2_v_reg_1488 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_mid2_v_reg_1488_pp2_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_mid2_v_reg_1488_pp2_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_mid2_v_reg_1488_pp2_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal arrayNo2_reg_1495 : STD_LOGIC_VECTOR (3 downto 0);
    signal arrayNo2_reg_1495_pp2_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal arrayNo2_reg_1495_pp2_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_49_fu_967_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_49_reg_1500 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_3_fu_971_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_3_reg_1506 : STD_LOGIC_VECTOR (7 downto 0);
    signal ifzero_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ifzero_reg_1602_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal A_V_6_0_load_reg_1606 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal A_V_6_1_load_reg_1611 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_2_load_reg_1616 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_3_load_reg_1621 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_4_load_reg_1626 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_5_load_reg_1631 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_6_load_reg_1636 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_7_load_reg_1641 : STD_LOGIC_VECTOR (11 downto 0);
    signal A_V_6_8_load_reg_1646 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_0_load_reg_1651 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_1_load_reg_1656 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_2_load_reg_1661 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_3_load_reg_1666 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_4_load_reg_1671 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_5_load_reg_1676 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_6_load_reg_1681 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_7_load_reg_1686 : STD_LOGIC_VECTOR (11 downto 0);
    signal B_V_6_8_load_reg_1691 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1339_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal buf_V_reg_1711 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal bias_V_10_load_reg_1717 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_V_1_tr_fu_1068_p2 : STD_LOGIC_VECTOR (30 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of r_V_1_tr_fu_1068_p2 : signal is "no";
    signal r_V_1_tr_reg_1722 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_50_reg_1727 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_1727_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_1732 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_45_reg_1732_pp2_iter7_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_42_reg_1737 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_39_fu_1126_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_39_reg_1742 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1347_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal r_V_2_reg_1757 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_51_reg_1763 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_1763_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_1763_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_1763_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_1763_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_1763_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_1763_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1774 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1774_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1774_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1774_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1774_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_1774_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1154_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal mul_reg_1779 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_54_reg_1784 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_54_reg_1784_pp2_iter17_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_53_reg_1789 : STD_LOGIC_VECTOR (26 downto 0);
    signal Outbuf_V_fu_1216_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal Outbuf_V_reg_1794 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond_flatten_fu_1223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state46_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state47_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state48_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal indvar_flatten_next_fu_1229_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal i_mid2_fu_1247_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_mid2_reg_1808 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_mid2_reg_1808_pp3_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal arrayNo1_cast_mid2_v_fu_1255_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal arrayNo1_cast_mid2_v_reg_1813 : STD_LOGIC_VECTOR (7 downto 0);
    signal arrayNo1_cast_mid2_reg_1818 : STD_LOGIC_VECTOR (3 downto 0);
    signal arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_31_fu_1273_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_31_reg_1822 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_31_reg_1822_pp3_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_5_fu_1277_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_1283_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_34_reg_1832 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond6_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6_reg_1845_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_1312_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_3_reg_1849 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal tmp_36_fu_1318_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_36_reg_1854 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state17 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state21 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state25 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter18 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state46 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state50 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal num_img_reg_696 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_phi_mux_i3_phi_fu_733_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_p_2_phi_fu_744_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_phi_mux_j4_phi_fu_756_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_j_phi_fu_778_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_i1_phi_fu_800_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal newIndex1_fu_905_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_995_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal newIndex2_fu_977_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_34_mid2_fu_1054_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_33_fu_1293_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_fu_1322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp2_stage0_01001 : BOOLEAN;
    signal ap_block_pp3_stage0_01001 : BOOLEAN;
    signal ap_block_pp4_stage0_01001 : BOOLEAN;
    signal tmp_28_fu_827_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal i5_cast_fu_845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_img_cast_fu_860_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_7_fu_929_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal j4_mid2_fu_941_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_989_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal arrayNo2_cast_fu_1013_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_1016_p11 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_44_fu_1035_p11 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_40_cast_fu_1065_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_neg_fu_1091_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_43_fu_1106_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_41_cast_fu_1109_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_46_fu_1113_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_38_fu_1116_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_43_cast_fu_1122_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1154_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal neg_mul_fu_1175_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_v_v_fu_1190_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_55_fu_1195_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal neg_ti_fu_1199_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_56_fu_1205_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_52_fu_1209_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal exitcond_fu_1241_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_1235_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_1287_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1327_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1327_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1339_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1154_ce : STD_LOGIC;
    signal grp_fu_1327_ce : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_1333_ce : STD_LOGIC;
    signal grp_fu_1339_ce : STD_LOGIC;
    signal grp_fu_1347_ce : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;

    component ultra_mul_32s_32sbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ultra_mux_932_12_Thq IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        din3 : IN STD_LOGIC_VECTOR (11 downto 0);
        din4 : IN STD_LOGIC_VECTOR (11 downto 0);
        din5 : IN STD_LOGIC_VECTOR (11 downto 0);
        din6 : IN STD_LOGIC_VECTOR (11 downto 0);
        din7 : IN STD_LOGIC_VECTOR (11 downto 0);
        din8 : IN STD_LOGIC_VECTOR (11 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component ultra_mul_33ns_31UhA IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (62 downto 0) );
    end component;


    component ultra_mul_mul_16scud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component ultra_mac_muladd_VhK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component ultra_mul_mul_12sWhU IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component FC_144_128_s_biasAem IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (11 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component FC_144_128_s_A_V_Bew IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component FC_144_128_s_B_V_KfY IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    bias_V_10_U : component FC_144_128_s_biasAem
    generic map (
        DataWidth => 12,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bias_V_10_address0,
        ce0 => bias_V_10_ce0,
        we0 => bias_V_10_we0,
        d0 => tmp_36_reg_1854,
        q0 => bias_V_10_q0);

    A_V_6_0_U : component FC_144_128_s_A_V_Bew
    generic map (
        DataWidth => 12,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_V_6_0_address0,
        ce0 => A_V_6_0_ce0,
        q0 => A_V_6_0_q0,
        address1 => A_V_6_0_address1,
        ce1 => A_V_6_0_ce1,
        we1 => A_V_6_0_we1,
        d1 => tmp_47_reg_1461);

    A_V_6_1_U : component FC_144_128_s_A_V_Bew
    generic map (
        DataWidth => 12,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_V_6_1_address0,
        ce0 => A_V_6_1_ce0,
        q0 => A_V_6_1_q0,
        address1 => A_V_6_1_address1,
        ce1 => A_V_6_1_ce1,
        we1 => A_V_6_1_we1,
        d1 => tmp_47_reg_1461);

    A_V_6_2_U : component FC_144_128_s_A_V_Bew
    generic map (
        DataWidth => 12,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_V_6_2_address0,
        ce0 => A_V_6_2_ce0,
        q0 => A_V_6_2_q0,
        address1 => A_V_6_2_address1,
        ce1 => A_V_6_2_ce1,
        we1 => A_V_6_2_we1,
        d1 => tmp_47_reg_1461);

    A_V_6_3_U : component FC_144_128_s_A_V_Bew
    generic map (
        DataWidth => 12,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_V_6_3_address0,
        ce0 => A_V_6_3_ce0,
        q0 => A_V_6_3_q0,
        address1 => A_V_6_3_address1,
        ce1 => A_V_6_3_ce1,
        we1 => A_V_6_3_we1,
        d1 => tmp_47_reg_1461);

    A_V_6_4_U : component FC_144_128_s_A_V_Bew
    generic map (
        DataWidth => 12,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_V_6_4_address0,
        ce0 => A_V_6_4_ce0,
        q0 => A_V_6_4_q0,
        address1 => A_V_6_4_address1,
        ce1 => A_V_6_4_ce1,
        we1 => A_V_6_4_we1,
        d1 => tmp_47_reg_1461);

    A_V_6_5_U : component FC_144_128_s_A_V_Bew
    generic map (
        DataWidth => 12,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_V_6_5_address0,
        ce0 => A_V_6_5_ce0,
        q0 => A_V_6_5_q0,
        address1 => A_V_6_5_address1,
        ce1 => A_V_6_5_ce1,
        we1 => A_V_6_5_we1,
        d1 => tmp_47_reg_1461);

    A_V_6_6_U : component FC_144_128_s_A_V_Bew
    generic map (
        DataWidth => 12,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_V_6_6_address0,
        ce0 => A_V_6_6_ce0,
        q0 => A_V_6_6_q0,
        address1 => A_V_6_6_address1,
        ce1 => A_V_6_6_ce1,
        we1 => A_V_6_6_we1,
        d1 => tmp_47_reg_1461);

    A_V_6_7_U : component FC_144_128_s_A_V_Bew
    generic map (
        DataWidth => 12,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_V_6_7_address0,
        ce0 => A_V_6_7_ce0,
        q0 => A_V_6_7_q0,
        address1 => A_V_6_7_address1,
        ce1 => A_V_6_7_ce1,
        we1 => A_V_6_7_we1,
        d1 => tmp_47_reg_1461);

    A_V_6_8_U : component FC_144_128_s_A_V_Bew
    generic map (
        DataWidth => 12,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => A_V_6_8_address0,
        ce0 => A_V_6_8_ce0,
        q0 => A_V_6_8_q0,
        address1 => A_V_6_8_address1,
        ce1 => A_V_6_8_ce1,
        we1 => A_V_6_8_we1,
        d1 => tmp_47_reg_1461);

    B_V_6_0_U : component FC_144_128_s_B_V_KfY
    generic map (
        DataWidth => 12,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_V_6_0_address0,
        ce0 => B_V_6_0_ce0,
        q0 => B_V_6_0_q0,
        address1 => B_V_6_0_address1,
        ce1 => B_V_6_0_ce1,
        we1 => B_V_6_0_we1,
        d1 => tmp_34_reg_1832);

    B_V_6_1_U : component FC_144_128_s_B_V_KfY
    generic map (
        DataWidth => 12,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_V_6_1_address0,
        ce0 => B_V_6_1_ce0,
        q0 => B_V_6_1_q0,
        address1 => B_V_6_1_address1,
        ce1 => B_V_6_1_ce1,
        we1 => B_V_6_1_we1,
        d1 => tmp_34_reg_1832);

    B_V_6_2_U : component FC_144_128_s_B_V_KfY
    generic map (
        DataWidth => 12,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_V_6_2_address0,
        ce0 => B_V_6_2_ce0,
        q0 => B_V_6_2_q0,
        address1 => B_V_6_2_address1,
        ce1 => B_V_6_2_ce1,
        we1 => B_V_6_2_we1,
        d1 => tmp_34_reg_1832);

    B_V_6_3_U : component FC_144_128_s_B_V_KfY
    generic map (
        DataWidth => 12,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_V_6_3_address0,
        ce0 => B_V_6_3_ce0,
        q0 => B_V_6_3_q0,
        address1 => B_V_6_3_address1,
        ce1 => B_V_6_3_ce1,
        we1 => B_V_6_3_we1,
        d1 => tmp_34_reg_1832);

    B_V_6_4_U : component FC_144_128_s_B_V_KfY
    generic map (
        DataWidth => 12,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_V_6_4_address0,
        ce0 => B_V_6_4_ce0,
        q0 => B_V_6_4_q0,
        address1 => B_V_6_4_address1,
        ce1 => B_V_6_4_ce1,
        we1 => B_V_6_4_we1,
        d1 => tmp_34_reg_1832);

    B_V_6_5_U : component FC_144_128_s_B_V_KfY
    generic map (
        DataWidth => 12,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_V_6_5_address0,
        ce0 => B_V_6_5_ce0,
        q0 => B_V_6_5_q0,
        address1 => B_V_6_5_address1,
        ce1 => B_V_6_5_ce1,
        we1 => B_V_6_5_we1,
        d1 => tmp_34_reg_1832);

    B_V_6_6_U : component FC_144_128_s_B_V_KfY
    generic map (
        DataWidth => 12,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_V_6_6_address0,
        ce0 => B_V_6_6_ce0,
        q0 => B_V_6_6_q0,
        address1 => B_V_6_6_address1,
        ce1 => B_V_6_6_ce1,
        we1 => B_V_6_6_we1,
        d1 => tmp_34_reg_1832);

    B_V_6_7_U : component FC_144_128_s_B_V_KfY
    generic map (
        DataWidth => 12,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_V_6_7_address0,
        ce0 => B_V_6_7_ce0,
        q0 => B_V_6_7_q0,
        address1 => B_V_6_7_address1,
        ce1 => B_V_6_7_ce1,
        we1 => B_V_6_7_we1,
        d1 => tmp_34_reg_1832);

    B_V_6_8_U : component FC_144_128_s_B_V_KfY
    generic map (
        DataWidth => 12,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => B_V_6_8_address0,
        ce0 => B_V_6_8_ce0,
        q0 => B_V_6_8_q0,
        address1 => B_V_6_8_address1,
        ce1 => B_V_6_8_ce1,
        we1 => B_V_6_8_we1,
        d1 => tmp_34_reg_1832);

    ultra_mul_32s_32sbkb_U133 : component ultra_mul_32s_32sbkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp2_reg_1410,
        din1 => tmp1_reg_1405,
        ce => ap_const_logic_1,
        dout => grp_fu_837_p2);

    ultra_mux_932_12_Thq_U134 : component ultra_mux_932_12_Thq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        din4_WIDTH => 12,
        din5_WIDTH => 12,
        din6_WIDTH => 12,
        din7_WIDTH => 12,
        din8_WIDTH => 12,
        din9_WIDTH => 32,
        dout_WIDTH => 12)
    port map (
        din0 => A_V_6_0_load_reg_1606,
        din1 => A_V_6_1_load_reg_1611,
        din2 => A_V_6_2_load_reg_1616,
        din3 => A_V_6_3_load_reg_1621,
        din4 => A_V_6_4_load_reg_1626,
        din5 => A_V_6_5_load_reg_1631,
        din6 => A_V_6_6_load_reg_1636,
        din7 => A_V_6_7_load_reg_1641,
        din8 => A_V_6_8_load_reg_1646,
        din9 => arrayNo2_cast_fu_1013_p1,
        dout => tmp_41_fu_1016_p11);

    ultra_mux_932_12_Thq_U135 : component ultra_mux_932_12_Thq
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        din3_WIDTH => 12,
        din4_WIDTH => 12,
        din5_WIDTH => 12,
        din6_WIDTH => 12,
        din7_WIDTH => 12,
        din8_WIDTH => 12,
        din9_WIDTH => 32,
        dout_WIDTH => 12)
    port map (
        din0 => B_V_6_0_load_reg_1651,
        din1 => B_V_6_1_load_reg_1656,
        din2 => B_V_6_2_load_reg_1661,
        din3 => B_V_6_3_load_reg_1666,
        din4 => B_V_6_4_load_reg_1671,
        din5 => B_V_6_5_load_reg_1676,
        din6 => B_V_6_6_load_reg_1681,
        din7 => B_V_6_7_load_reg_1686,
        din8 => B_V_6_8_load_reg_1691,
        din9 => arrayNo2_cast_fu_1013_p1,
        dout => tmp_44_fu_1035_p11);

    ultra_mul_33ns_31UhA_U136 : component ultra_mul_33ns_31UhA
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 33,
        din1_WIDTH => 31,
        dout_WIDTH => 63)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1154_p0,
        din1 => r_V_2_reg_1757,
        ce => grp_fu_1154_ce,
        dout => grp_fu_1154_p2);

    ultra_mul_mul_16scud_U137 : component ultra_mul_mul_16scud
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1327_p0,
        din1 => grp_fu_1327_p1,
        ce => grp_fu_1327_ce,
        dout => grp_fu_1327_p2);

    ultra_mul_mul_16scud_U138 : component ultra_mul_mul_16scud
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_V_25_reg_1370,
        din1 => tmp_V_29_reg_1375,
        ce => grp_fu_1333_ce,
        dout => grp_fu_1333_p2);

    ultra_mac_muladd_VhK_U139 : component ultra_mac_muladd_VhK
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        din2_WIDTH => 31,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_41_fu_1016_p11,
        din1 => tmp_44_fu_1035_p11,
        din2 => grp_fu_1339_p2,
        ce => grp_fu_1339_ce,
        dout => grp_fu_1339_p3);

    ultra_mul_mul_12sWhU_U140 : component ultra_mul_mul_12sWhU
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 12,
        din1_WIDTH => 21,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => multiple_V_10,
        din1 => tmp_39_reg_1742,
        ce => grp_fu_1347_ce,
        dout => grp_fu_1347_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state17) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state17))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state17);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state21) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((tmp_23_fu_864_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state21)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state21);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif (((tmp_23_fu_864_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state25) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state25)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state25);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    ap_enable_reg_pp2_iter19 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state46) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_s_fu_808_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state46)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state46);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_s_fu_808_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state50) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state50)) then 
                        ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state50);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                    ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_reg_796_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                i1_reg_796 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (exitcond6_reg_1845 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                i1_reg_796 <= i_3_reg_1849;
            end if; 
        end if;
    end process;

    i2_reg_707_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond8_fu_875_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i2_reg_707 <= i_6_fu_881_p2;
            elsif (((tmp_23_fu_864_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                i2_reg_707 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    i3_reg_729_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                i3_reg_729 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_flatten8_reg_1474 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                i3_reg_729 <= tmp_34_mid2_v_reg_1488;
            end if; 
        end if;
    end process;

    i5_reg_685_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_24_fu_849_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i5_reg_685 <= i_4_fu_854_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                i5_reg_685 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    i_reg_785_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_flatten_fu_1223_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                i_reg_785 <= i_5_fu_1277_p2;
            elsif ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_s_fu_808_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i_reg_785 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_718_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                indvar_flatten6_reg_718 <= ap_const_lv15_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_flatten8_fu_917_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                indvar_flatten6_reg_718 <= indvar_flatten_next7_fu_923_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_763_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_flatten_fu_1223_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                indvar_flatten_reg_763 <= indvar_flatten_next_fu_1229_p2;
            elsif ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_s_fu_808_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                indvar_flatten_reg_763 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    j4_reg_752_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                j4_reg_752 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_flatten8_reg_1474 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                j4_reg_752 <= j_3_reg_1506;
            end if; 
        end if;
    end process;

    j_reg_774_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_flatten_reg_1799 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                j_reg_774 <= arrayNo1_cast_mid2_v_reg_1813;
            elsif ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_s_fu_808_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                j_reg_774 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    num_img_reg_696_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_21_fu_813_p2 = ap_const_lv1_1) and (tmp_s_fu_808_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                num_img_reg_696 <= ap_const_lv15_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                num_img_reg_696 <= num_img_2_reg_1438;
            end if; 
        end if;
    end process;

    p_2_reg_740_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                p_2_reg_740 <= ap_const_lv31_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_flatten8_reg_1474_pp2_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1))) then 
                p_2_reg_740 <= buf_V_reg_1711;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_flatten8_reg_1474_pp2_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then
                A_V_6_0_load_reg_1606 <= A_V_6_0_q0;
                A_V_6_1_load_reg_1611 <= A_V_6_1_q0;
                A_V_6_2_load_reg_1616 <= A_V_6_2_q0;
                A_V_6_3_load_reg_1621 <= A_V_6_3_q0;
                A_V_6_4_load_reg_1626 <= A_V_6_4_q0;
                A_V_6_5_load_reg_1631 <= A_V_6_5_q0;
                A_V_6_6_load_reg_1636 <= A_V_6_6_q0;
                A_V_6_7_load_reg_1641 <= A_V_6_7_q0;
                A_V_6_8_load_reg_1646 <= A_V_6_8_q0;
                B_V_6_0_load_reg_1651 <= B_V_6_0_q0;
                B_V_6_1_load_reg_1656 <= B_V_6_1_q0;
                B_V_6_2_load_reg_1661 <= B_V_6_2_q0;
                B_V_6_3_load_reg_1666 <= B_V_6_3_q0;
                B_V_6_4_load_reg_1671 <= B_V_6_4_q0;
                B_V_6_5_load_reg_1676 <= B_V_6_5_q0;
                B_V_6_6_load_reg_1681 <= B_V_6_6_q0;
                B_V_6_7_load_reg_1686 <= B_V_6_7_q0;
                B_V_6_8_load_reg_1691 <= B_V_6_8_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                KER_bound_reg_1420 <= KER_bound_fu_841_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ifzero_reg_1602_pp2_iter17_reg = ap_const_lv1_1))) then
                Outbuf_V_reg_1794 <= Outbuf_V_fu_1216_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_flatten_fu_1223_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                arrayNo1_cast_mid2_reg_1818 <= arrayNo1_cast_mid2_v_fu_1255_p3(7 downto 4);
                i_mid2_reg_1808 <= i_mid2_fu_1247_p3;
                tmp_31_reg_1822 <= tmp_31_fu_1273_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg <= arrayNo1_cast_mid2_reg_1818;
                exitcond_flatten_reg_1799 <= exitcond_flatten_fu_1223_p2;
                i_mid2_reg_1808_pp3_iter1_reg <= i_mid2_reg_1808;
                tmp_31_reg_1822_pp3_iter1_reg <= tmp_31_reg_1822;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_flatten_fu_1223_p2 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                arrayNo1_cast_mid2_v_reg_1813 <= arrayNo1_cast_mid2_v_fu_1255_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_flatten8_fu_917_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                arrayNo2_reg_1495 <= j4_mid2_fu_941_p3(7 downto 4);
                exitcond3_reg_1483 <= exitcond3_fu_935_p2;
                tmp_49_reg_1500 <= tmp_49_fu_967_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                arrayNo2_reg_1495_pp2_iter1_reg <= arrayNo2_reg_1495;
                exitcond3_reg_1483_pp2_iter1_reg <= exitcond3_reg_1483;
                exitcond_flatten8_reg_1474 <= exitcond_flatten8_fu_917_p2;
                exitcond_flatten8_reg_1474_pp2_iter1_reg <= exitcond_flatten8_reg_1474;
                tmp_34_mid2_v_reg_1488_pp2_iter1_reg <= tmp_34_mid2_v_reg_1488;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                arrayNo2_reg_1495_pp2_iter2_reg <= arrayNo2_reg_1495_pp2_iter1_reg;
                exitcond3_reg_1483_pp2_iter2_reg <= exitcond3_reg_1483_pp2_iter1_reg;
                exitcond3_reg_1483_pp2_iter3_reg <= exitcond3_reg_1483_pp2_iter2_reg;
                exitcond3_reg_1483_pp2_iter4_reg <= exitcond3_reg_1483_pp2_iter3_reg;
                exitcond_flatten8_reg_1474_pp2_iter2_reg <= exitcond_flatten8_reg_1474_pp2_iter1_reg;
                exitcond_flatten8_reg_1474_pp2_iter3_reg <= exitcond_flatten8_reg_1474_pp2_iter2_reg;
                exitcond_flatten8_reg_1474_pp2_iter4_reg <= exitcond_flatten8_reg_1474_pp2_iter3_reg;
                exitcond_flatten8_reg_1474_pp2_iter5_reg <= exitcond_flatten8_reg_1474_pp2_iter4_reg;
                ifzero_reg_1602_pp2_iter10_reg <= ifzero_reg_1602_pp2_iter9_reg;
                ifzero_reg_1602_pp2_iter11_reg <= ifzero_reg_1602_pp2_iter10_reg;
                ifzero_reg_1602_pp2_iter12_reg <= ifzero_reg_1602_pp2_iter11_reg;
                ifzero_reg_1602_pp2_iter13_reg <= ifzero_reg_1602_pp2_iter12_reg;
                ifzero_reg_1602_pp2_iter14_reg <= ifzero_reg_1602_pp2_iter13_reg;
                ifzero_reg_1602_pp2_iter15_reg <= ifzero_reg_1602_pp2_iter14_reg;
                ifzero_reg_1602_pp2_iter16_reg <= ifzero_reg_1602_pp2_iter15_reg;
                ifzero_reg_1602_pp2_iter17_reg <= ifzero_reg_1602_pp2_iter16_reg;
                ifzero_reg_1602_pp2_iter18_reg <= ifzero_reg_1602_pp2_iter17_reg;
                ifzero_reg_1602_pp2_iter2_reg <= ifzero_reg_1602;
                ifzero_reg_1602_pp2_iter3_reg <= ifzero_reg_1602_pp2_iter2_reg;
                ifzero_reg_1602_pp2_iter4_reg <= ifzero_reg_1602_pp2_iter3_reg;
                ifzero_reg_1602_pp2_iter5_reg <= ifzero_reg_1602_pp2_iter4_reg;
                ifzero_reg_1602_pp2_iter6_reg <= ifzero_reg_1602_pp2_iter5_reg;
                ifzero_reg_1602_pp2_iter7_reg <= ifzero_reg_1602_pp2_iter6_reg;
                ifzero_reg_1602_pp2_iter8_reg <= ifzero_reg_1602_pp2_iter7_reg;
                ifzero_reg_1602_pp2_iter9_reg <= ifzero_reg_1602_pp2_iter8_reg;
                tmp_34_mid2_v_reg_1488_pp2_iter2_reg <= tmp_34_mid2_v_reg_1488_pp2_iter1_reg;
                tmp_34_mid2_v_reg_1488_pp2_iter3_reg <= tmp_34_mid2_v_reg_1488_pp2_iter2_reg;
                tmp_45_reg_1732_pp2_iter7_reg <= tmp_45_reg_1732;
                tmp_50_reg_1727_pp2_iter7_reg <= tmp_50_reg_1727;
                tmp_51_reg_1763_pp2_iter12_reg <= tmp_51_reg_1763;
                tmp_51_reg_1763_pp2_iter13_reg <= tmp_51_reg_1763_pp2_iter12_reg;
                tmp_51_reg_1763_pp2_iter14_reg <= tmp_51_reg_1763_pp2_iter13_reg;
                tmp_51_reg_1763_pp2_iter15_reg <= tmp_51_reg_1763_pp2_iter14_reg;
                tmp_51_reg_1763_pp2_iter16_reg <= tmp_51_reg_1763_pp2_iter15_reg;
                tmp_51_reg_1763_pp2_iter17_reg <= tmp_51_reg_1763_pp2_iter16_reg;
                tmp_54_reg_1784_pp2_iter17_reg <= tmp_54_reg_1784;
                tmp_i_reg_1774_pp2_iter13_reg <= tmp_i_reg_1774;
                tmp_i_reg_1774_pp2_iter14_reg <= tmp_i_reg_1774_pp2_iter13_reg;
                tmp_i_reg_1774_pp2_iter15_reg <= tmp_i_reg_1774_pp2_iter14_reg;
                tmp_i_reg_1774_pp2_iter16_reg <= tmp_i_reg_1774_pp2_iter15_reg;
                tmp_i_reg_1774_pp2_iter17_reg <= tmp_i_reg_1774_pp2_iter16_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond8_fu_875_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                arrayNo_cast_reg_1452 <= i2_reg_707(7 downto 4);
                tmp_48_reg_1456 <= tmp_48_fu_897_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                arrayNo_cast_reg_1452_pp1_iter1_reg <= arrayNo_cast_reg_1452;
                tmp_47_reg_1461 <= tmp_47_fu_901_p1;
                tmp_48_reg_1456_pp1_iter1_reg <= tmp_48_reg_1456;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ifzero_reg_1602_pp2_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter5 = ap_const_logic_1))) then
                bias_V_10_load_reg_1717 <= bias_V_10_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_flatten8_reg_1474_pp2_iter4_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_1))) then
                buf_V_reg_1711 <= grp_fu_1339_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                exitcond6_reg_1845 <= exitcond6_fu_1306_p2;
                exitcond6_reg_1845_pp4_iter1_reg <= exitcond6_reg_1845;
                i1_reg_796_pp4_iter1_reg <= i1_reg_796;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                i_3_reg_1849 <= i_3_fu_1312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_flatten8_reg_1474 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                ifzero_reg_1602 <= ifzero_fu_1008_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (exitcond_flatten8_fu_917_p2 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                j_3_reg_1506 <= j_3_fu_971_p2;
                tmp_34_mid2_v_reg_1488 <= tmp_34_mid2_v_fu_949_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_21_fu_813_p2 = ap_const_lv1_0) and (tmp_s_fu_808_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                lhs_V_reg_1388 <= lhs_V_fu_818_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ifzero_reg_1602_pp2_iter15_reg = ap_const_lv1_1))) then
                mul_reg_1779 <= grp_fu_1154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_s_fu_808_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                multiple_V_10 <= tmp_28_fu_827_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                num_img_2_reg_1438 <= num_img_2_fu_869_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                p_s_reg_1415 <= grp_fu_837_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ifzero_reg_1602_pp2_iter5_reg = ap_const_lv1_1))) then
                r_V_1_tr_reg_1722 <= r_V_1_tr_fu_1068_p2;
                tmp_45_reg_1732 <= r_V_1_tr_fu_1068_p2(30 downto 12);
                tmp_50_reg_1727 <= r_V_1_tr_fu_1068_p2(30 downto 30);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ifzero_reg_1602_pp2_iter10_reg = ap_const_lv1_1))) then
                r_V_2_reg_1757 <= grp_fu_1347_p2;
                tmp_51_reg_1763 <= grp_fu_1347_p2(30 downto 30);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                tmp1_reg_1405 <= grp_fu_1327_p2;
                tmp2_reg_1410 <= grp_fu_1333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_24_reg_1425 <= tmp_24_fu_849_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_flatten_reg_1799 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then
                tmp_34_reg_1832 <= tmp_34_fu_1283_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (exitcond6_reg_1845 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                tmp_36_reg_1854 <= tmp_36_fu_1318_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ifzero_reg_1602_pp2_iter7_reg = ap_const_lv1_1))) then
                tmp_39_reg_1742 <= tmp_39_fu_1126_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (tmp_50_reg_1727 = ap_const_lv1_1) and (ifzero_reg_1602_pp2_iter6_reg = ap_const_lv1_1))) then
                tmp_42_reg_1737 <= p_neg_fu_1091_p2(30 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (tmp_51_reg_1763_pp2_iter16_reg = ap_const_lv1_1) and (ifzero_reg_1602_pp2_iter16_reg = ap_const_lv1_1) and (tmp_i_reg_1774_pp2_iter16_reg = ap_const_lv1_0))) then
                tmp_53_reg_1789 <= neg_mul_fu_1175_p2(62 downto 36);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ifzero_reg_1602_pp2_iter15_reg = ap_const_lv1_1) and (tmp_i_reg_1774_pp2_iter15_reg = ap_const_lv1_0) and (tmp_51_reg_1763_pp2_iter15_reg = ap_const_lv1_0))) then
                tmp_54_reg_1784 <= grp_fu_1154_p2(62 downto 36);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_V_21_reg_1360 <= stream_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                tmp_V_23_reg_1365 <= stream_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                tmp_V_25_reg_1370 <= stream_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                tmp_V_29_reg_1375 <= stream_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_V_reg_1354 <= stream_in_V_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ifzero_reg_1602_pp2_iter11_reg = ap_const_lv1_1))) then
                tmp_i_reg_1774 <= tmp_i_fu_1160_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_enable_reg_pp3_iter1, ap_enable_reg_pp4_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter19, tmp_s_fu_808_p2, tmp_21_fu_813_p2, tmp_24_fu_849_p2, ap_enable_reg_pp0_iter0, tmp_23_fu_864_p2, ap_CS_fsm_state20, exitcond8_fu_875_p2, ap_enable_reg_pp1_iter0, exitcond_flatten8_fu_917_p2, ap_enable_reg_pp2_iter0, exitcond_flatten_fu_1223_p2, ap_enable_reg_pp3_iter0, exitcond6_fu_1306_p2, ap_enable_reg_pp4_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter18, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter2, ap_block_pp4_stage0_subdone, ap_enable_reg_pp4_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_s_fu_808_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_21_fu_813_p2 = ap_const_lv1_1) and (tmp_s_fu_808_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif ((not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (tmp_21_fu_813_p2 = ap_const_lv1_0) and (tmp_s_fu_808_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_24_fu_849_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_24_fu_849_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state20 => 
                if (((tmp_23_fu_864_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond8_fu_875_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (exitcond8_fu_875_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (exitcond_flatten8_fu_917_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp2_iter18 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (exitcond_flatten8_fu_917_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter18 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (exitcond_flatten_fu_1223_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (exitcond_flatten_fu_1223_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (exitcond6_fu_1306_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (exitcond6_fu_1306_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    A_V_6_0_address0 <= newIndex2_fu_977_p1(4 - 1 downto 0);
    A_V_6_0_address1 <= newIndex1_fu_905_p1(4 - 1 downto 0);

    A_V_6_0_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            A_V_6_0_ce0 <= ap_const_logic_1;
        else 
            A_V_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_0_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_0_ce1 <= ap_const_logic_1;
        else 
            A_V_6_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_0_we1_assign_proc : process(ap_block_pp1_stage0_11001, arrayNo_cast_reg_1452_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_0_we1 <= ap_const_logic_1;
        else 
            A_V_6_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    A_V_6_1_address0 <= newIndex2_fu_977_p1(4 - 1 downto 0);
    A_V_6_1_address1 <= newIndex1_fu_905_p1(4 - 1 downto 0);

    A_V_6_1_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            A_V_6_1_ce0 <= ap_const_logic_1;
        else 
            A_V_6_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_1_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_1_ce1 <= ap_const_logic_1;
        else 
            A_V_6_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_1_we1_assign_proc : process(ap_block_pp1_stage0_11001, arrayNo_cast_reg_1452_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_1_we1 <= ap_const_logic_1;
        else 
            A_V_6_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    A_V_6_2_address0 <= newIndex2_fu_977_p1(4 - 1 downto 0);
    A_V_6_2_address1 <= newIndex1_fu_905_p1(4 - 1 downto 0);

    A_V_6_2_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            A_V_6_2_ce0 <= ap_const_logic_1;
        else 
            A_V_6_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_2_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_2_ce1 <= ap_const_logic_1;
        else 
            A_V_6_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_2_we1_assign_proc : process(ap_block_pp1_stage0_11001, arrayNo_cast_reg_1452_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_2) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_2_we1 <= ap_const_logic_1;
        else 
            A_V_6_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    A_V_6_3_address0 <= newIndex2_fu_977_p1(4 - 1 downto 0);
    A_V_6_3_address1 <= newIndex1_fu_905_p1(4 - 1 downto 0);

    A_V_6_3_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            A_V_6_3_ce0 <= ap_const_logic_1;
        else 
            A_V_6_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_3_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_3_ce1 <= ap_const_logic_1;
        else 
            A_V_6_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_3_we1_assign_proc : process(ap_block_pp1_stage0_11001, arrayNo_cast_reg_1452_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_3) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_3_we1 <= ap_const_logic_1;
        else 
            A_V_6_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    A_V_6_4_address0 <= newIndex2_fu_977_p1(4 - 1 downto 0);
    A_V_6_4_address1 <= newIndex1_fu_905_p1(4 - 1 downto 0);

    A_V_6_4_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            A_V_6_4_ce0 <= ap_const_logic_1;
        else 
            A_V_6_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_4_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_4_ce1 <= ap_const_logic_1;
        else 
            A_V_6_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_4_we1_assign_proc : process(ap_block_pp1_stage0_11001, arrayNo_cast_reg_1452_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_4_we1 <= ap_const_logic_1;
        else 
            A_V_6_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    A_V_6_5_address0 <= newIndex2_fu_977_p1(4 - 1 downto 0);
    A_V_6_5_address1 <= newIndex1_fu_905_p1(4 - 1 downto 0);

    A_V_6_5_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            A_V_6_5_ce0 <= ap_const_logic_1;
        else 
            A_V_6_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_5_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_5_ce1 <= ap_const_logic_1;
        else 
            A_V_6_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_5_we1_assign_proc : process(ap_block_pp1_stage0_11001, arrayNo_cast_reg_1452_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_5) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_5_we1 <= ap_const_logic_1;
        else 
            A_V_6_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    A_V_6_6_address0 <= newIndex2_fu_977_p1(4 - 1 downto 0);
    A_V_6_6_address1 <= newIndex1_fu_905_p1(4 - 1 downto 0);

    A_V_6_6_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            A_V_6_6_ce0 <= ap_const_logic_1;
        else 
            A_V_6_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_6_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_6_ce1 <= ap_const_logic_1;
        else 
            A_V_6_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_6_we1_assign_proc : process(ap_block_pp1_stage0_11001, arrayNo_cast_reg_1452_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_6_we1 <= ap_const_logic_1;
        else 
            A_V_6_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    A_V_6_7_address0 <= newIndex2_fu_977_p1(4 - 1 downto 0);
    A_V_6_7_address1 <= newIndex1_fu_905_p1(4 - 1 downto 0);

    A_V_6_7_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            A_V_6_7_ce0 <= ap_const_logic_1;
        else 
            A_V_6_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_7_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_7_ce1 <= ap_const_logic_1;
        else 
            A_V_6_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_7_we1_assign_proc : process(ap_block_pp1_stage0_11001, arrayNo_cast_reg_1452_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_7) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_7_we1 <= ap_const_logic_1;
        else 
            A_V_6_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    A_V_6_8_address0 <= newIndex2_fu_977_p1(4 - 1 downto 0);
    A_V_6_8_address1 <= newIndex1_fu_905_p1(4 - 1 downto 0);

    A_V_6_8_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            A_V_6_8_ce0 <= ap_const_logic_1;
        else 
            A_V_6_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_8_ce1_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_8_ce1 <= ap_const_logic_1;
        else 
            A_V_6_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    A_V_6_8_we1_assign_proc : process(ap_block_pp1_stage0_11001, arrayNo_cast_reg_1452_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if ((not((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_0)) and not((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_1)) and not((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_2)) and not((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_3)) and not((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_4)) and not((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_5)) and not((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_6)) and not((arrayNo_cast_reg_1452_pp1_iter1_reg = ap_const_lv4_7)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            A_V_6_8_we1 <= ap_const_logic_1;
        else 
            A_V_6_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    B_V_6_0_address0 <= tmp_40_fu_995_p1(11 - 1 downto 0);
    B_V_6_0_address1 <= tmp_33_fu_1293_p1(11 - 1 downto 0);

    B_V_6_0_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            B_V_6_0_ce0 <= ap_const_logic_1;
        else 
            B_V_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_0_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_0_ce1 <= ap_const_logic_1;
        else 
            B_V_6_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_0_we1_assign_proc : process(ap_block_pp3_stage0_11001, arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_0_we1 <= ap_const_logic_1;
        else 
            B_V_6_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    B_V_6_1_address0 <= tmp_40_fu_995_p1(11 - 1 downto 0);
    B_V_6_1_address1 <= tmp_33_fu_1293_p1(11 - 1 downto 0);

    B_V_6_1_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            B_V_6_1_ce0 <= ap_const_logic_1;
        else 
            B_V_6_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_1_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_1_ce1 <= ap_const_logic_1;
        else 
            B_V_6_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_1_we1_assign_proc : process(ap_block_pp3_stage0_11001, arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_1_we1 <= ap_const_logic_1;
        else 
            B_V_6_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    B_V_6_2_address0 <= tmp_40_fu_995_p1(11 - 1 downto 0);
    B_V_6_2_address1 <= tmp_33_fu_1293_p1(11 - 1 downto 0);

    B_V_6_2_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            B_V_6_2_ce0 <= ap_const_logic_1;
        else 
            B_V_6_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_2_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_2_ce1 <= ap_const_logic_1;
        else 
            B_V_6_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_2_we1_assign_proc : process(ap_block_pp3_stage0_11001, arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_2) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_2_we1 <= ap_const_logic_1;
        else 
            B_V_6_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    B_V_6_3_address0 <= tmp_40_fu_995_p1(11 - 1 downto 0);
    B_V_6_3_address1 <= tmp_33_fu_1293_p1(11 - 1 downto 0);

    B_V_6_3_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            B_V_6_3_ce0 <= ap_const_logic_1;
        else 
            B_V_6_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_3_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_3_ce1 <= ap_const_logic_1;
        else 
            B_V_6_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_3_we1_assign_proc : process(ap_block_pp3_stage0_11001, arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_3) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_3_we1 <= ap_const_logic_1;
        else 
            B_V_6_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    B_V_6_4_address0 <= tmp_40_fu_995_p1(11 - 1 downto 0);
    B_V_6_4_address1 <= tmp_33_fu_1293_p1(11 - 1 downto 0);

    B_V_6_4_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            B_V_6_4_ce0 <= ap_const_logic_1;
        else 
            B_V_6_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_4_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_4_ce1 <= ap_const_logic_1;
        else 
            B_V_6_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_4_we1_assign_proc : process(ap_block_pp3_stage0_11001, arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_4) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_4_we1 <= ap_const_logic_1;
        else 
            B_V_6_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    B_V_6_5_address0 <= tmp_40_fu_995_p1(11 - 1 downto 0);
    B_V_6_5_address1 <= tmp_33_fu_1293_p1(11 - 1 downto 0);

    B_V_6_5_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            B_V_6_5_ce0 <= ap_const_logic_1;
        else 
            B_V_6_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_5_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_5_ce1 <= ap_const_logic_1;
        else 
            B_V_6_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_5_we1_assign_proc : process(ap_block_pp3_stage0_11001, arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_5) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_5_we1 <= ap_const_logic_1;
        else 
            B_V_6_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    B_V_6_6_address0 <= tmp_40_fu_995_p1(11 - 1 downto 0);
    B_V_6_6_address1 <= tmp_33_fu_1293_p1(11 - 1 downto 0);

    B_V_6_6_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            B_V_6_6_ce0 <= ap_const_logic_1;
        else 
            B_V_6_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_6_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_6_ce1 <= ap_const_logic_1;
        else 
            B_V_6_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_6_we1_assign_proc : process(ap_block_pp3_stage0_11001, arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_6) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_6_we1 <= ap_const_logic_1;
        else 
            B_V_6_6_we1 <= ap_const_logic_0;
        end if; 
    end process;

    B_V_6_7_address0 <= tmp_40_fu_995_p1(11 - 1 downto 0);
    B_V_6_7_address1 <= tmp_33_fu_1293_p1(11 - 1 downto 0);

    B_V_6_7_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            B_V_6_7_ce0 <= ap_const_logic_1;
        else 
            B_V_6_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_7_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_7_ce1 <= ap_const_logic_1;
        else 
            B_V_6_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_7_we1_assign_proc : process(ap_block_pp3_stage0_11001, arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_7) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_7_we1 <= ap_const_logic_1;
        else 
            B_V_6_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    B_V_6_8_address0 <= tmp_40_fu_995_p1(11 - 1 downto 0);
    B_V_6_8_address1 <= tmp_33_fu_1293_p1(11 - 1 downto 0);

    B_V_6_8_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            B_V_6_8_ce0 <= ap_const_logic_1;
        else 
            B_V_6_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_8_ce1_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_8_ce1 <= ap_const_logic_1;
        else 
            B_V_6_8_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    B_V_6_8_we1_assign_proc : process(ap_block_pp3_stage0_11001, arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if ((not((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_7)) and not((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_6)) and not((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_5)) and not((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_4)) and not((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_3)) and not((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_2)) and not((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_1)) and not((arrayNo1_cast_mid2_reg_1818_pp3_iter1_reg = ap_const_lv4_0)) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            B_V_6_8_we1 <= ap_const_logic_1;
        else 
            B_V_6_8_we1 <= ap_const_logic_0;
        end if; 
    end process;

    KER_bound_fu_841_p2 <= std_logic_vector(unsigned(p_s_reg_1415) + unsigned(lhs_V_reg_1388));
    Outbuf_V_fu_1216_p3 <= 
        ap_const_lv16_0 when (tmp_i_reg_1774_pp2_iter17_reg(0) = '1') else 
        tmp_52_fu_1209_p3;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(19);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(21);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(23);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(25);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state19 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(18);
    ap_CS_fsm_state24 <= ap_CS_fsm(20);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state45 <= ap_CS_fsm(22);
    ap_CS_fsm_state49 <= ap_CS_fsm(24);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_24_reg_1425)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_24_reg_1425 = ap_const_lv1_1) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((tmp_24_reg_1425 = ap_const_lv1_1) and (stream_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_24_reg_1425)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_24_reg_1425 = ap_const_lv1_1) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((tmp_24_reg_1425 = ap_const_lv1_1) and (stream_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_enable_reg_pp0_iter1, tmp_24_reg_1425)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((tmp_24_reg_1425 = ap_const_lv1_1) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((tmp_24_reg_1425 = ap_const_lv1_1) and (stream_in_V_V_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(stream_in_V_V_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_11001 <= ((stream_in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(stream_in_V_V_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_subdone <= ((stream_in_V_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp2_stage0_01001_assign_proc : process(stream_out_V_V_full_n, ap_enable_reg_pp2_iter19, ifzero_reg_1602_pp2_iter18_reg)
    begin
                ap_block_pp2_stage0_01001 <= ((ifzero_reg_1602_pp2_iter18_reg = ap_const_lv1_1) and (stream_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage0_11001_assign_proc : process(stream_out_V_V_full_n, ap_enable_reg_pp2_iter19, ifzero_reg_1602_pp2_iter18_reg)
    begin
                ap_block_pp2_stage0_11001 <= ((ifzero_reg_1602_pp2_iter18_reg = ap_const_lv1_1) and (stream_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1));
    end process;


    ap_block_pp2_stage0_subdone_assign_proc : process(stream_out_V_V_full_n, ap_enable_reg_pp2_iter19, ifzero_reg_1602_pp2_iter18_reg)
    begin
                ap_block_pp2_stage0_subdone <= ((ifzero_reg_1602_pp2_iter18_reg = ap_const_lv1_1) and (stream_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1));
    end process;

        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp3_stage0_01001_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_enable_reg_pp3_iter1, exitcond_flatten_reg_1799)
    begin
                ap_block_pp3_stage0_01001 <= ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (stream_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp3_stage0_11001_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_enable_reg_pp3_iter1, exitcond_flatten_reg_1799)
    begin
                ap_block_pp3_stage0_11001 <= ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (stream_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp3_stage0_subdone_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_enable_reg_pp3_iter1, exitcond_flatten_reg_1799)
    begin
                ap_block_pp3_stage0_subdone <= ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (stream_in_V_V_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp4_stage0_01001_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_enable_reg_pp4_iter1, exitcond6_reg_1845)
    begin
                ap_block_pp4_stage0_01001 <= ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (((exitcond6_reg_1845 = ap_const_lv1_0) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((exitcond6_reg_1845 = ap_const_lv1_0) and (stream_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp4_stage0_11001_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_enable_reg_pp4_iter1, exitcond6_reg_1845)
    begin
                ap_block_pp4_stage0_11001 <= ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (((exitcond6_reg_1845 = ap_const_lv1_0) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((exitcond6_reg_1845 = ap_const_lv1_0) and (stream_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp4_stage0_subdone_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_enable_reg_pp4_iter1, exitcond6_reg_1845)
    begin
                ap_block_pp4_stage0_subdone <= ((ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (((exitcond6_reg_1845 = ap_const_lv1_0) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((exitcond6_reg_1845 = ap_const_lv1_0) and (stream_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, stream_in_V_V_empty_n, stream_out_V_V_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0));
    end process;

        ap_block_state17_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_pp0_stage0_iter1_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, tmp_24_reg_1425)
    begin
                ap_block_state18_pp0_stage0_iter1 <= (((tmp_24_reg_1425 = ap_const_lv1_1) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((tmp_24_reg_1425 = ap_const_lv1_1) and (stream_in_V_V_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n)
    begin
                ap_block_state2 <= ((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state21_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state22_pp1_stage0_iter1_assign_proc : process(stream_in_V_V_empty_n)
    begin
                ap_block_state22_pp1_stage0_iter1 <= (stream_in_V_V_empty_n = ap_const_logic_0);
    end process;

        ap_block_state23_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n)
    begin
                ap_block_state3 <= ((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state30_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp2_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp2_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp2_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp2_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp2_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp2_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp2_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp2_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n)
    begin
                ap_block_state4 <= ((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state40_pp2_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp2_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp2_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp2_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state44_pp2_stage0_iter19_assign_proc : process(stream_out_V_V_full_n, ifzero_reg_1602_pp2_iter18_reg)
    begin
                ap_block_state44_pp2_stage0_iter19 <= ((ifzero_reg_1602_pp2_iter18_reg = ap_const_lv1_1) and (stream_out_V_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state46_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state47_pp3_stage0_iter1_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, exitcond_flatten_reg_1799)
    begin
                ap_block_state47_pp3_stage0_iter1 <= (((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (stream_in_V_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state48_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n)
    begin
                ap_block_state5 <= ((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state50_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state51_pp4_stage0_iter1_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, exitcond6_reg_1845)
    begin
                ap_block_state51_pp4_stage0_iter1 <= (((exitcond6_reg_1845 = ap_const_lv1_0) and (stream_out_V_V_full_n = ap_const_logic_0)) or ((exitcond6_reg_1845 = ap_const_lv1_0) and (stream_in_V_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state52_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n)
    begin
                ap_block_state6 <= ((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state7_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n)
    begin
                ap_block_state7 <= ((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_block_state8_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n)
    begin
                ap_block_state8 <= ((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state17_assign_proc : process(tmp_24_fu_849_p2)
    begin
        if ((tmp_24_fu_849_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state17 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state21_assign_proc : process(exitcond8_fu_875_p2)
    begin
        if ((exitcond8_fu_875_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state21 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state25_assign_proc : process(exitcond_flatten8_fu_917_p2)
    begin
        if ((exitcond_flatten8_fu_917_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state25 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state25 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state46_assign_proc : process(exitcond_flatten_fu_1223_p2)
    begin
        if ((exitcond_flatten_fu_1223_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state46 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state46 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state50_assign_proc : process(exitcond6_fu_1306_p2)
    begin
        if ((exitcond6_fu_1306_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state50 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state50 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter19, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter8, ap_enable_reg_pp2_iter9, ap_enable_reg_pp2_iter10, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_enable_reg_pp2_iter13, ap_enable_reg_pp2_iter14, ap_enable_reg_pp2_iter15, ap_enable_reg_pp2_iter16, ap_enable_reg_pp2_iter17, ap_enable_reg_pp2_iter18)
    begin
        if (((ap_enable_reg_pp2_iter18 = ap_const_logic_0) and (ap_enable_reg_pp2_iter17 = ap_const_logic_0) and (ap_enable_reg_pp2_iter16 = ap_const_logic_0) and (ap_enable_reg_pp2_iter15 = ap_const_logic_0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_0) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0) and (ap_enable_reg_pp2_iter10 = ap_const_logic_0) and (ap_enable_reg_pp2_iter9 = ap_const_logic_0) and (ap_enable_reg_pp2_iter8 = ap_const_logic_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter19 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter2)
    begin
        if (((ap_enable_reg_pp4_iter2 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i1_phi_fu_800_p4_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, exitcond6_reg_1845, i1_reg_796, i_3_reg_1849)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (exitcond6_reg_1845 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            ap_phi_mux_i1_phi_fu_800_p4 <= i_3_reg_1849;
        else 
            ap_phi_mux_i1_phi_fu_800_p4 <= i1_reg_796;
        end if; 
    end process;


    ap_phi_mux_i3_phi_fu_733_p4_assign_proc : process(ap_block_pp2_stage0, i3_reg_729, exitcond_flatten8_reg_1474, ap_CS_fsm_pp2_stage0, tmp_34_mid2_v_reg_1488, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (exitcond_flatten8_reg_1474 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_i3_phi_fu_733_p4 <= tmp_34_mid2_v_reg_1488;
        else 
            ap_phi_mux_i3_phi_fu_733_p4 <= i3_reg_729;
        end if; 
    end process;


    ap_phi_mux_j4_phi_fu_756_p4_assign_proc : process(ap_block_pp2_stage0, j4_reg_752, exitcond_flatten8_reg_1474, ap_CS_fsm_pp2_stage0, j_3_reg_1506, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (exitcond_flatten8_reg_1474 = ap_const_lv1_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            ap_phi_mux_j4_phi_fu_756_p4 <= j_3_reg_1506;
        else 
            ap_phi_mux_j4_phi_fu_756_p4 <= j4_reg_752;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_778_p4_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, exitcond_flatten_reg_1799, j_reg_774, arrayNo1_cast_mid2_v_reg_1813)
    begin
        if (((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            ap_phi_mux_j_phi_fu_778_p4 <= arrayNo1_cast_mid2_v_reg_1813;
        else 
            ap_phi_mux_j_phi_fu_778_p4 <= j_reg_774;
        end if; 
    end process;


    ap_phi_mux_p_2_phi_fu_744_p4_assign_proc : process(ap_block_pp2_stage0, p_2_reg_740, exitcond_flatten8_reg_1474_pp2_iter5_reg, buf_V_reg_1711, ap_enable_reg_pp2_iter6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (exitcond_flatten8_reg_1474_pp2_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1))) then 
            ap_phi_mux_p_2_phi_fu_744_p4 <= buf_V_reg_1711;
        else 
            ap_phi_mux_p_2_phi_fu_744_p4 <= p_2_reg_740;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    arrayNo1_cast_mid2_v_fu_1255_p3 <= 
        j_2_fu_1235_p2 when (exitcond_fu_1241_p2(0) = '1') else 
        ap_phi_mux_j_phi_fu_778_p4;
    arrayNo2_cast_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(arrayNo2_reg_1495_pp2_iter2_reg),32));

    bias_V_10_address0_assign_proc : process(ap_block_pp4_stage0, ap_block_pp2_stage0, ap_enable_reg_pp2_iter4, ap_enable_reg_pp4_iter2, tmp_34_mid2_fu_1054_p1, tmp_27_fu_1322_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))) then 
            bias_V_10_address0 <= tmp_27_fu_1322_p1(7 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            bias_V_10_address0 <= tmp_34_mid2_fu_1054_p1(7 - 1 downto 0);
        else 
            bias_V_10_address0 <= "XXXXXXX";
        end if; 
    end process;


    bias_V_10_ce0_assign_proc : process(ap_block_pp4_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter4, ap_enable_reg_pp4_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1)))) then 
            bias_V_10_ce0 <= ap_const_logic_1;
        else 
            bias_V_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_V_10_we0_assign_proc : process(ap_block_pp4_stage0_11001, exitcond6_reg_1845_pp4_iter1_reg, ap_enable_reg_pp4_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (exitcond6_reg_1845_pp4_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))) then 
            bias_V_10_we0 <= ap_const_logic_1;
        else 
            bias_V_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond3_fu_935_p2 <= "1" when (ap_phi_mux_j4_phi_fu_756_p4 = ap_const_lv8_90) else "0";
    exitcond6_fu_1306_p2 <= "1" when (ap_phi_mux_i1_phi_fu_800_p4 = ap_const_lv8_80) else "0";
    exitcond8_fu_875_p2 <= "1" when (i2_reg_707 = ap_const_lv8_90) else "0";
    exitcond_flatten8_fu_917_p2 <= "1" when (indvar_flatten6_reg_718 = ap_const_lv15_4800) else "0";
    exitcond_flatten_fu_1223_p2 <= "1" when (indvar_flatten_reg_763 = ap_const_lv15_4800) else "0";
    exitcond_fu_1241_p2 <= "1" when (i_reg_785 = ap_const_lv8_80) else "0";

    grp_fu_1154_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1154_ce <= ap_const_logic_1;
        else 
            grp_fu_1154_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1154_p0 <= ap_const_lv63_CCCCCCCD(33 - 1 downto 0);

    grp_fu_1327_ce_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            grp_fu_1327_ce <= ap_const_logic_1;
        else 
            grp_fu_1327_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1327_p0 <= tmp_22_fu_824_p1(16 - 1 downto 0);
    grp_fu_1327_p1 <= tmp_22_fu_824_p1(16 - 1 downto 0);

    grp_fu_1333_ce_assign_proc : process(stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_CS_fsm_state8, ap_CS_fsm_state10, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            grp_fu_1333_ce <= ap_const_logic_1;
        else 
            grp_fu_1333_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1339_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1339_ce <= ap_const_logic_1;
        else 
            grp_fu_1339_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1339_p2 <= 
        ap_const_lv31_0 when (exitcond3_reg_1483_pp2_iter4_reg(0) = '1') else 
        ap_phi_mux_p_2_phi_fu_744_p4;

    grp_fu_1347_ce_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            grp_fu_1347_ce <= ap_const_logic_1;
        else 
            grp_fu_1347_ce <= ap_const_logic_0;
        end if; 
    end process;

    i5_cast_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_reg_685),32));
    i_3_fu_1312_p2 <= std_logic_vector(unsigned(ap_phi_mux_i1_phi_fu_800_p4) + unsigned(ap_const_lv8_1));
    i_4_fu_854_p2 <= std_logic_vector(unsigned(i5_reg_685) + unsigned(ap_const_lv31_1));
    i_5_fu_1277_p2 <= std_logic_vector(unsigned(i_mid2_fu_1247_p3) + unsigned(ap_const_lv8_1));
    i_6_fu_881_p2 <= std_logic_vector(unsigned(i2_reg_707) + unsigned(ap_const_lv8_1));
    i_7_fu_929_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_i3_phi_fu_733_p4));
    i_mid2_fu_1247_p3 <= 
        ap_const_lv8_0 when (exitcond_fu_1241_p2(0) = '1') else 
        i_reg_785;
    ifzero_fu_1008_p2 <= "1" when (j_3_reg_1506 = ap_const_lv8_90) else "0";
    indvar_flatten_next7_fu_923_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_718) + unsigned(ap_const_lv15_1));
    indvar_flatten_next_fu_1229_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_763) + unsigned(ap_const_lv15_1));

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    j4_mid2_fu_941_p3 <= 
        ap_const_lv8_0 when (exitcond3_fu_935_p2(0) = '1') else 
        ap_phi_mux_j4_phi_fu_756_p4;
    j_2_fu_1235_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(ap_phi_mux_j_phi_fu_778_p4));
    j_3_fu_971_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(j4_mid2_fu_941_p3));
        lhs_V_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_29_reg_1375),32));

    neg_mul_fu_1175_p2 <= std_logic_vector(unsigned(ap_const_lv63_0) - unsigned(mul_reg_1779));
    neg_ti_fu_1199_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_55_fu_1195_p1));
    newIndex1_fu_905_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_48_reg_1456_pp1_iter1_reg),64));
    newIndex2_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_reg_1500),64));
    num_img_2_fu_869_p2 <= std_logic_vector(unsigned(num_img_reg_696) + unsigned(ap_const_lv15_1));
    num_img_cast_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(num_img_reg_696),16));
    p_neg_fu_1091_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(r_V_1_tr_reg_1722));
    p_v_v_fu_1190_p3 <= 
        tmp_53_reg_1789 when (tmp_51_reg_1763_pp2_iter17_reg(0) = '1') else 
        tmp_54_reg_1784_pp2_iter17_reg;
    r_V_1_tr_fu_1068_p2 <= std_logic_vector(signed(tmp_40_cast_fu_1065_p1) + signed(buf_V_reg_1711));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, stream_in_V_V_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, exitcond_flatten_reg_1799, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, exitcond6_reg_1845, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_24_reg_1425)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_24_reg_1425 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0) and (exitcond6_reg_1845 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            stream_in_V_V_blk_n <= stream_in_V_V_empty_n;
        else 
            stream_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_V_V_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten_reg_1799, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, exitcond6_reg_1845, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_24_reg_1425, ap_block_pp4_stage0_11001, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_block_pp3_stage0_11001)
    begin
        if (((not(((ap_done_reg = ap_const_logic_1) or (stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_24_reg_1425 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (exitcond6_reg_1845 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_flatten_reg_1799 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            stream_in_V_V_read <= ap_const_logic_1;
        else 
            stream_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, stream_out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, ap_block_pp3_stage0, exitcond_flatten_reg_1799, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, ap_block_pp4_stage0, exitcond6_reg_1845, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_24_reg_1425, ap_enable_reg_pp2_iter19, ap_block_pp2_stage0, ifzero_reg_1602_pp2_iter18_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0) and (ifzero_reg_1602_pp2_iter18_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1)) or ((tmp_24_reg_1425 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0) and (exitcond6_reg_1845 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)))) then 
            stream_out_V_V_blk_n <= stream_out_V_V_full_n;
        else 
            stream_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_out_V_V_din_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, stream_in_V_V_dout, stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten_reg_1799, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, exitcond6_reg_1845, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_24_reg_1425, ap_enable_reg_pp2_iter19, ifzero_reg_1602_pp2_iter18_reg, Outbuf_V_reg_1794, ap_block_pp0_stage0_01001, ap_block_pp2_stage0_01001, ap_block_pp3_stage0_01001, ap_block_pp4_stage0_01001)
    begin
        if (((ifzero_reg_1602_pp2_iter18_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_01001))) then 
            stream_out_V_V_din <= Outbuf_V_reg_1794;
        elsif (((not(((ap_done_reg = ap_const_logic_1) or (stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((tmp_24_reg_1425 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001)) or ((exitcond6_reg_1845 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (ap_const_boolean_0 = ap_block_pp4_stage0_01001)) or ((exitcond_flatten_reg_1799 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_01001)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            stream_out_V_V_din <= stream_in_V_V_dout;
        else 
            stream_out_V_V_din <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stream_out_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, stream_in_V_V_empty_n, stream_out_V_V_full_n, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, exitcond_flatten_reg_1799, ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter1, exitcond6_reg_1845, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_24_reg_1425, ap_enable_reg_pp2_iter19, ifzero_reg_1602_pp2_iter18_reg, ap_block_pp4_stage0_11001, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001, ap_block_pp3_stage0_11001)
    begin
        if (((not(((ap_done_reg = ap_const_logic_1) or (stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ifzero_reg_1602_pp2_iter18_reg = ap_const_lv1_1) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_24_reg_1425 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (exitcond6_reg_1845 = ap_const_lv1_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (exitcond_flatten_reg_1799 = ap_const_lv1_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state8)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state6)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state4)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or (not(((stream_out_V_V_full_n = ap_const_logic_0) or (stream_in_V_V_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            stream_out_V_V_write <= ap_const_logic_1;
        else 
            stream_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_21_fu_813_p2 <= "1" when (tmp_V_reg_1354 = ap_const_lv16_0) else "0";
        tmp_22_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_V_23_reg_1365),32));

    tmp_23_fu_864_p2 <= "1" when (signed(num_img_cast_fu_860_p1) < signed(tmp_V_21_reg_1360)) else "0";
    tmp_24_fu_849_p2 <= "1" when (signed(i5_cast_fu_845_p1) < signed(KER_bound_reg_1420)) else "0";
    tmp_27_fu_1322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_reg_796_pp4_iter1_reg),64));
    tmp_28_fu_827_p1 <= stream_in_V_V_dout(12 - 1 downto 0);
    tmp_30_fu_1287_p3 <= (i_mid2_reg_1808_pp3_iter1_reg & tmp_31_reg_1822_pp3_iter1_reg);
    tmp_31_fu_1273_p1 <= arrayNo1_cast_mid2_v_fu_1255_p3(4 - 1 downto 0);
    tmp_33_fu_1293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_1287_p3),64));
    tmp_34_fu_1283_p1 <= stream_in_V_V_dout(12 - 1 downto 0);
    tmp_34_mid2_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_mid2_v_reg_1488_pp2_iter3_reg),64));
    tmp_34_mid2_v_fu_949_p3 <= 
        i_7_fu_929_p2 when (exitcond3_fu_935_p2(0) = '1') else 
        ap_phi_mux_i3_phi_fu_733_p4;
    tmp_36_fu_1318_p1 <= stream_in_V_V_dout(12 - 1 downto 0);
    tmp_37_fu_989_p3 <= (tmp_34_mid2_v_reg_1488 & tmp_49_reg_1500);
    tmp_38_fu_1116_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(tmp_41_cast_fu_1109_p1));
    tmp_39_fu_1126_p3 <= 
        tmp_38_fu_1116_p2 when (tmp_50_reg_1727_pp2_iter7_reg(0) = '1') else 
        tmp_43_cast_fu_1122_p1;
        tmp_40_cast_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bias_V_10_load_reg_1717),31));

    tmp_40_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_989_p3),64));
    tmp_41_cast_fu_1109_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_43_fu_1106_p1),21));
    tmp_43_cast_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_46_fu_1113_p1),21));
        tmp_43_fu_1106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_42_reg_1737),20));

        tmp_46_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_45_reg_1732_pp2_iter7_reg),20));

    tmp_47_fu_901_p1 <= stream_in_V_V_dout(12 - 1 downto 0);
    tmp_48_fu_897_p1 <= i2_reg_707(4 - 1 downto 0);
    tmp_49_fu_967_p1 <= j4_mid2_fu_941_p3(4 - 1 downto 0);
    tmp_52_fu_1209_p3 <= 
        neg_ti_fu_1199_p2 when (tmp_51_reg_1763_pp2_iter17_reg(0) = '1') else 
        tmp_56_fu_1205_p1;
    tmp_55_fu_1195_p1 <= p_v_v_fu_1190_p3(16 - 1 downto 0);
    tmp_56_fu_1205_p1 <= p_v_v_fu_1190_p3(16 - 1 downto 0);
    tmp_i_fu_1160_p2 <= "1" when (signed(r_V_2_reg_1757) < signed(ap_const_lv31_7FFFFFED)) else "0";
    tmp_s_fu_808_p2 <= "1" when (tmp_V_reg_1354 = ap_const_lv16_6) else "0";
end behav;
